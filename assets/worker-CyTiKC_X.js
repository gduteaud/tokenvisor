var ng=Object.defineProperty;var gf=Js=>{throw TypeError(Js)};var og=(Js,fr,Lr)=>fr in Js?ng(Js,fr,{enumerable:!0,configurable:!0,writable:!0,value:Lr}):Js[fr]=Lr;var ke=(Js,fr,Lr)=>og(Js,typeof fr!="symbol"?fr+"":fr,Lr),kp=(Js,fr,Lr)=>fr.has(Js)||gf("Cannot "+Lr);var Tn=(Js,fr,Lr)=>(kp(Js,fr,"read from private field"),Lr?Lr.call(Js):fr.get(Js)),Sp=(Js,fr,Lr)=>fr.has(Js)?gf("Cannot add the same private member more than once"):fr instanceof WeakSet?fr.add(Js):fr.set(Js,Lr),Hh=(Js,fr,Lr,Fs)=>(kp(Js,fr,"write to private field"),Fs?Fs.call(Js,Lr):fr.set(Js,Lr),Lr),$p=(Js,fr,Lr)=>(kp(Js,fr,"access private method"),Lr);(function(){"use strict";var Js={},fr={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(Le,P,r)=>{Le.exports=r.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(Le,P,r)=>{Le.exports=r.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(Le,P,r)=>{r.r(P),r.d(P,{Environment:()=>yt,Interpreter:()=>$t,Template:()=>Dt,parse:()=>Ae,tokenize:()=>E});var y=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),z=Object.freeze({set:y.Set,for:y.For,in:y.In,is:y.Is,if:y.If,else:y.Else,endif:y.EndIf,elif:y.ElseIf,endfor:y.EndFor,and:y.And,or:y.Or,not:y.Not,"not in":y.NotIn,macro:y.Macro,endmacro:y.EndMacro,true:y.BooleanLiteral,false:y.BooleanLiteral,none:y.NullLiteral,True:y.BooleanLiteral,False:y.BooleanLiteral,None:y.NullLiteral}),V=class{constructor(G,pe){this.value=G,this.type=pe}};function se(G){return/\w/.test(G)}function K(G){return/[0-9]/.test(G)}var v=[["{%",y.OpenStatement],["%}",y.CloseStatement],["{{",y.OpenExpression],["}}",y.CloseExpression],["(",y.OpenParen],[")",y.CloseParen],["{",y.OpenCurlyBracket],["}",y.CloseCurlyBracket],["[",y.OpenSquareBracket],["]",y.CloseSquareBracket],[",",y.Comma],[".",y.Dot],[":",y.Colon],["|",y.Pipe],["<=",y.ComparisonBinaryOperator],[">=",y.ComparisonBinaryOperator],["==",y.ComparisonBinaryOperator],["!=",y.ComparisonBinaryOperator],["<",y.ComparisonBinaryOperator],[">",y.ComparisonBinaryOperator],["+",y.AdditiveBinaryOperator],["-",y.AdditiveBinaryOperator],["*",y.MultiplicativeBinaryOperator],["/",y.MultiplicativeBinaryOperator],["%",y.MultiplicativeBinaryOperator],["=",y.Equals]],k=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function x(G,pe={}){return G.endsWith(`
`)&&(G=G.slice(0,-1)),G=G.replace(/{#.*?#}/gs,"{##}"),pe.lstrip_blocks&&(G=G.replace(/^[ \t]*({[#%])/gm,"$1")),pe.trim_blocks&&(G=G.replace(/([#%]})\n/g,"$1")),G.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function E(G,pe={}){var ut,Et,Ot;const te=[],Te=x(G,pe);let We=0;const tt=Vt=>{let Ht="";for(;Vt(Te[We]);){if(Te[We]==="\\"){if(++We,We>=Te.length)throw new SyntaxError("Unexpected end of input");const Jt=Te[We++],$s=k.get(Jt);if($s===void 0)throw new SyntaxError(`Unexpected escaped character: ${Jt}`);Ht+=$s;continue}if(Ht+=Te[We++],We>=Te.length)throw new SyntaxError("Unexpected end of input")}return Ht};e:for(;We<Te.length;){const Vt=(ut=te.at(-1))==null?void 0:ut.type;if(Vt===void 0||Vt===y.CloseStatement||Vt===y.CloseExpression){let Jt="";for(;We<Te.length&&!(Te[We]==="{"&&(Te[We+1]==="%"||Te[We+1]==="{"));)Jt+=Te[We++];if(Jt.length>0){te.push(new V(Jt,y.Text));continue}}tt(Jt=>/\s/.test(Jt));const Ht=Te[We];if(Ht==="-"||Ht==="+"){const Jt=(Et=te.at(-1))==null?void 0:Et.type;if(Jt===y.Text||Jt===void 0)throw new SyntaxError(`Unexpected character: ${Ht}`);switch(Jt){case y.Identifier:case y.NumericLiteral:case y.BooleanLiteral:case y.NullLiteral:case y.StringLiteral:case y.CloseParen:case y.CloseSquareBracket:break;default:{++We;const $s=tt(K);te.push(new V(`${Ht}${$s}`,$s.length>0?y.NumericLiteral:y.UnaryOperator));continue}}}for(const[Jt,$s]of v)if(Te.slice(We,We+Jt.length)===Jt){te.push(new V(Jt,$s)),We+=Jt.length;continue e}if(Ht==="'"||Ht==='"'){++We;const Jt=tt($s=>$s!==Ht);te.push(new V(Jt,y.StringLiteral)),++We;continue}if(K(Ht)){const Jt=tt(K);te.push(new V(Jt,y.NumericLiteral));continue}if(se(Ht)){const Jt=tt(se),$s=Object.hasOwn(z,Jt)?z[Jt]:y.Identifier;$s===y.In&&((Ot=te.at(-1))==null?void 0:Ot.type)===y.Not?(te.pop(),te.push(new V("not in",y.NotIn))):te.push(new V(Jt,$s));continue}throw new SyntaxError(`Unexpected character: ${Ht}`)}return te}var C=class{constructor(){ke(this,"type","Statement")}},j=class extends C{constructor(pe){super();ke(this,"type","Program");this.body=pe}},re=class extends C{constructor(pe,te,Te){super();ke(this,"type","If");this.test=pe,this.body=te,this.alternate=Te}},ce=class extends C{constructor(pe,te,Te,We){super();ke(this,"type","For");this.loopvar=pe,this.iterable=te,this.body=Te,this.defaultBlock=We}},me=class extends C{constructor(pe,te){super();ke(this,"type","Set");this.assignee=pe,this.value=te}},Y=class extends C{constructor(pe,te,Te){super();ke(this,"type","Macro");this.name=pe,this.args=te,this.body=Te}},q=class extends C{constructor(){super(...arguments);ke(this,"type","Expression")}},ne=class extends q{constructor(pe,te,Te){super();ke(this,"type","MemberExpression");this.object=pe,this.property=te,this.computed=Te}},R=class extends q{constructor(pe,te){super();ke(this,"type","CallExpression");this.callee=pe,this.args=te}},L=class extends q{constructor(pe){super();ke(this,"type","Identifier");this.value=pe}},T=class extends q{constructor(pe){super();ke(this,"type","Literal");this.value=pe}},S=class extends T{constructor(){super(...arguments);ke(this,"type","NumericLiteral")}},U=class extends T{constructor(){super(...arguments);ke(this,"type","StringLiteral")}},ge=class extends T{constructor(){super(...arguments);ke(this,"type","BooleanLiteral")}},_e=class extends T{constructor(){super(...arguments);ke(this,"type","NullLiteral")}},ze=class extends T{constructor(){super(...arguments);ke(this,"type","ArrayLiteral")}},Ie=class extends T{constructor(){super(...arguments);ke(this,"type","TupleLiteral")}},fe=class extends T{constructor(){super(...arguments);ke(this,"type","ObjectLiteral")}},Be=class extends q{constructor(pe,te,Te){super();ke(this,"type","BinaryExpression");this.operator=pe,this.left=te,this.right=Te}},ve=class extends q{constructor(pe,te){super();ke(this,"type","FilterExpression");this.operand=pe,this.filter=te}},Ge=class extends q{constructor(pe,te){super();ke(this,"type","SelectExpression");this.iterable=pe,this.test=te}},He=class extends q{constructor(pe,te,Te){super();ke(this,"type","TestExpression");this.operand=pe,this.negate=te,this.test=Te}},Ve=class extends q{constructor(pe,te){super();ke(this,"type","UnaryExpression");this.operator=pe,this.argument=te}},wt=class extends q{constructor(pe=void 0,te=void 0,Te=void 0){super();ke(this,"type","SliceExpression");this.start=pe,this.stop=te,this.step=Te}},lt=class extends q{constructor(pe,te){super();ke(this,"type","KeywordArgumentExpression");this.key=pe,this.value=te}};function Ae(G){const pe=new j([]);let te=0;function Te(O,N){const X=G[te++];if(!X||X.type!==O)throw new Error(`Parser Error: ${N}. ${X.type} !== ${O}.`);return X}function We(){switch(G[te].type){case y.Text:return Et();case y.OpenStatement:return Ot();case y.OpenExpression:return Vt();default:throw new SyntaxError(`Unexpected token type: ${G[te].type}`)}}function tt(...O){return te+O.length<=G.length&&O.some((N,X)=>N!==G[te+X].type)}function ut(...O){return te+O.length<=G.length&&O.every((N,X)=>N===G[te+X].type)}function Et(){return new U(Te(y.Text,"Expected text token").value)}function Ot(){Te(y.OpenStatement,"Expected opening statement token");let O;switch(G[te].type){case y.Set:++te,O=Ht(),Te(y.CloseStatement,"Expected closing statement token");break;case y.If:++te,O=Jt(),Te(y.OpenStatement,"Expected {% token"),Te(y.EndIf,"Expected endif token"),Te(y.CloseStatement,"Expected %} token");break;case y.Macro:++te,O=$s(),Te(y.OpenStatement,"Expected {% token"),Te(y.EndMacro,"Expected endmacro token"),Te(y.CloseStatement,"Expected %} token");break;case y.For:++te,O=tr(),Te(y.OpenStatement,"Expected {% token"),Te(y.EndFor,"Expected endfor token"),Te(y.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${G[te].type}`)}return O}function Vt(){Te(y.OpenExpression,"Expected opening expression token");const O=pr();return Te(y.CloseExpression,"Expected closing expression token"),O}function Ht(){const O=pr();if(ut(y.Equals)){++te;const N=Ht();return new me(O,N)}return O}function Jt(){var ie,je,be,Ze,Ct,qe,mt,bt;const O=pr();Te(y.CloseStatement,"Expected closing statement token");const N=[],X=[];for(;!(((ie=G[te])==null?void 0:ie.type)===y.OpenStatement&&(((je=G[te+1])==null?void 0:je.type)===y.ElseIf||((be=G[te+1])==null?void 0:be.type)===y.Else||((Ze=G[te+1])==null?void 0:Ze.type)===y.EndIf));)N.push(We());if(((Ct=G[te])==null?void 0:Ct.type)===y.OpenStatement&&((qe=G[te+1])==null?void 0:qe.type)!==y.EndIf)if(++te,ut(y.ElseIf))Te(y.ElseIf,"Expected elseif token"),X.push(Jt());else for(Te(y.Else,"Expected else token"),Te(y.CloseStatement,"Expected closing statement token");!(((mt=G[te])==null?void 0:mt.type)===y.OpenStatement&&((bt=G[te+1])==null?void 0:bt.type)===y.EndIf);)X.push(We());return new re(O,N,X)}function $s(){const O=_();if(O.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const N=sr();Te(y.CloseStatement,"Expected closing statement token");const X=[];for(;tt(y.OpenStatement,y.EndMacro);)X.push(We());return new Y(O,N,X)}function zs(O=!1){const N=O?_:pr,X=[N()],ie=ut(y.Comma);for(;ie&&(++te,X.push(N()),!!ut(y.Comma)););return ie?new Ie(X):X[0]}function tr(){const O=zs(!0);if(!(O instanceof L||O instanceof Ie))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${O.type} instead`);Te(y.In,"Expected `in` keyword following loop variable");const N=pr();Te(y.CloseStatement,"Expected closing statement token");const X=[];for(;tt(y.OpenStatement,y.EndFor)&&tt(y.OpenStatement,y.Else);)X.push(We());const ie=[];if(ut(y.OpenStatement,y.Else))for(++te,++te,Te(y.CloseStatement,"Expected closing statement token");tt(y.OpenStatement,y.EndFor);)ie.push(We());return new ce(O,N,X,ie)}function pr(){return zr()}function zr(){const O=en();if(ut(y.If)){++te;const N=en();if(ut(y.Else)){++te;const X=en();return new re(N,[O],[X])}else return new Ge(O,N)}return O}function en(){let O=Qr();for(;ut(y.Or);){const N=G[te];++te;const X=Qr();O=new Be(N,O,X)}return O}function Qr(){let O=_r();for(;ut(y.And);){const N=G[te];++te;const X=_r();O=new Be(N,O,X)}return O}function _r(){let O;for(;ut(y.Not);){const N=G[te];++te;const X=_r();O=new Ve(N,X)}return O??qr()}function qr(){let O=ns();for(;ut(y.ComparisonBinaryOperator)||ut(y.In)||ut(y.NotIn);){const N=G[te];++te;const X=ns();O=new Be(N,O,X)}return O}function ns(){let O=l();for(;ut(y.AdditiveBinaryOperator);){const N=G[te];++te;const X=l();O=new Be(N,O,X)}return O}function xn(){const O=c(_());return ut(y.OpenParen)?Gr(O):O}function Gr(O){let N=new R(O,sr());return N=c(N),ut(y.OpenParen)&&(N=Gr(N)),N}function sr(){Te(y.OpenParen,"Expected opening parenthesis for arguments list");const O=Xr();return Te(y.CloseParen,"Expected closing parenthesis for arguments list"),O}function Xr(){const O=[];for(;!ut(y.CloseParen);){let N=pr();if(ut(y.Equals)){if(++te,!(N instanceof L))throw new SyntaxError("Expected identifier for keyword argument");const X=pr();N=new lt(N,X)}O.push(N),ut(y.Comma)&&++te}return O}function B(){const O=[];let N=!1;for(;!ut(y.CloseSquareBracket);)ut(y.Colon)?(O.push(void 0),++te,N=!0):(O.push(pr()),ut(y.Colon)&&(++te,N=!0));if(O.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(N){if(O.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new wt(...O)}return O[0]}function c(O){for(;ut(y.Dot)||ut(y.OpenSquareBracket);){const N=G[te];++te;let X;const ie=N.type!==y.Dot;if(ie)X=B(),Te(y.CloseSquareBracket,"Expected closing square bracket");else if(X=_(),X.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");O=new ne(O,X,ie)}return O}function l(){let O=n();for(;ut(y.MultiplicativeBinaryOperator);){const N=G[te];++te;const X=n();O=new Be(N,O,X)}return O}function n(){let O=u();for(;ut(y.Is);){++te;const N=ut(y.Not);N&&++te;let X=_();if(X instanceof ge?X=new L(X.value.toString()):X instanceof _e&&(X=new L("none")),!(X instanceof L))throw new SyntaxError("Expected identifier for the test");O=new He(O,N,X)}return O}function u(){let O=xn();for(;ut(y.Pipe);){++te;let N=_();if(!(N instanceof L))throw new SyntaxError("Expected identifier for the filter");ut(y.OpenParen)&&(N=Gr(N)),O=new ve(O,N)}return O}function _(){const O=G[te];switch(O.type){case y.NumericLiteral:return++te,new S(Number(O.value));case y.StringLiteral:return++te,new U(O.value);case y.BooleanLiteral:return++te,new ge(O.value.toLowerCase()==="true");case y.NullLiteral:return++te,new _e(null);case y.Identifier:return++te,new L(O.value);case y.OpenParen:{++te;const N=zs();if(G[te].type!==y.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${G[te].type} instead`);return++te,N}case y.OpenSquareBracket:{++te;const N=[];for(;!ut(y.CloseSquareBracket);)N.push(pr()),ut(y.Comma)&&++te;return++te,new ze(N)}case y.OpenCurlyBracket:{++te;const N=new Map;for(;!ut(y.CloseCurlyBracket);){const X=pr();Te(y.Colon,"Expected colon between key and value in object literal");const ie=pr();N.set(X,ie),ut(y.Comma)&&++te}return++te,new fe(N)}default:throw new SyntaxError(`Unexpected token: ${O.type}`)}}for(;te<G.length;)pe.body.push(We());return pe}function ee(G,pe,te=1){pe===void 0&&(pe=G,G=0);const Te=[];for(let We=G;We<pe;We+=te)Te.push(We);return Te}function Me(G,pe,te,Te=1){const We=Math.sign(Te);We>=0?(pe=(pe??(pe=0))<0?Math.max(G.length+pe,0):Math.min(pe,G.length),te=(te??(te=G.length))<0?Math.max(G.length+te,0):Math.min(te,G.length)):(pe=(pe??(pe=G.length-1))<0?Math.max(G.length+pe,-1):Math.min(pe,G.length-1),te=(te??(te=-1))<-1?Math.max(G.length+te,-1):Math.min(te,G.length-1));const tt=[];for(let ut=pe;We*ut<We*te;ut+=Te)tt.push(G[ut]);return tt}function Ue(G){return G.replace(/\b\w/g,pe=>pe.toUpperCase())}var xe=class{constructor(G=void 0){ke(this,"type","RuntimeValue");ke(this,"value");ke(this,"builtins",new Map);this.value=G}__bool__(){return new rt(!!this.value)}},dt=class extends xe{constructor(){super(...arguments);ke(this,"type","NumericValue")}},de=class extends xe{constructor(){super(...arguments);ke(this,"type","StringValue");ke(this,"builtins",new Map([["upper",new at(()=>new de(this.value.toUpperCase()))],["lower",new at(()=>new de(this.value.toLowerCase()))],["strip",new at(()=>new de(this.value.trim()))],["title",new at(()=>new de(Ue(this.value)))],["length",new dt(this.value.length)],["rstrip",new at(()=>new de(this.value.trimEnd()))],["lstrip",new at(()=>new de(this.value.trimStart()))],["split",new at(pe=>{const te=pe[0]??new nt;if(!(te instanceof de||te instanceof nt))throw new Error("sep argument must be a string or null");const Te=pe[1]??new dt(-1);if(!(Te instanceof dt))throw new Error("maxsplit argument must be a number");let We=[];if(te instanceof nt){const tt=this.value.trimStart();for(const{0:ut,index:Et}of tt.matchAll(/\S+/g)){if(Te.value!==-1&&We.length>=Te.value&&Et!==void 0){We.push(ut+tt.slice(Et+ut.length));break}We.push(ut)}}else{if(te.value==="")throw new Error("empty separator");We=this.value.split(te.value),Te.value!==-1&&We.length>Te.value&&We.push(We.splice(Te.value).join(te.value))}return new Oe(We.map(tt=>new de(tt)))})]]))}},rt=class extends xe{constructor(){super(...arguments);ke(this,"type","BooleanValue")}},ot=class extends xe{constructor(){super(...arguments);ke(this,"type","ObjectValue");ke(this,"builtins",new Map([["get",new at(([pe,te])=>{if(!(pe instanceof de))throw new Error(`Object key must be a string: got ${pe.type}`);return this.value.get(pe.value)??te??new nt})],["items",new at(()=>new Oe(Array.from(this.value.entries()).map(([pe,te])=>new Oe([new de(pe),te]))))]]))}__bool__(){return new rt(this.value.size>0)}},we=class extends ot{constructor(){super(...arguments);ke(this,"type","KeywordArgumentsValue")}},Oe=class extends xe{constructor(){super(...arguments);ke(this,"type","ArrayValue");ke(this,"builtins",new Map([["length",new dt(this.value.length)]]))}__bool__(){return new rt(this.value.length>0)}},it=class extends Oe{constructor(){super(...arguments);ke(this,"type","TupleValue")}},at=class extends xe{constructor(){super(...arguments);ke(this,"type","FunctionValue")}},nt=class extends xe{constructor(){super(...arguments);ke(this,"type","NullValue")}},st=class extends xe{constructor(){super(...arguments);ke(this,"type","UndefinedValue")}},yt=class{constructor(G){ke(this,"variables",new Map([["namespace",new at(G=>{if(G.length===0)return new ot(new Map);if(G.length!==1||!(G[0]instanceof ot))throw new Error("`namespace` expects either zero arguments or a single object argument");return G[0]})]]));ke(this,"tests",new Map([["boolean",G=>G.type==="BooleanValue"],["callable",G=>G instanceof at],["odd",G=>{if(G.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${G.type}`);return G.value%2!==0}],["even",G=>{if(G.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${G.type}`);return G.value%2===0}],["false",G=>G.type==="BooleanValue"&&!G.value],["true",G=>G.type==="BooleanValue"&&G.value],["none",G=>G.type==="NullValue"],["string",G=>G.type==="StringValue"],["number",G=>G.type==="NumericValue"],["integer",G=>G.type==="NumericValue"&&Number.isInteger(G.value)],["iterable",G=>G.type==="ArrayValue"||G.type==="StringValue"],["mapping",G=>G.type==="ObjectValue"],["lower",G=>{const pe=G.value;return G.type==="StringValue"&&pe===pe.toLowerCase()}],["upper",G=>{const pe=G.value;return G.type==="StringValue"&&pe===pe.toUpperCase()}],["none",G=>G.type==="NullValue"],["defined",G=>G.type!=="UndefinedValue"],["undefined",G=>G.type==="UndefinedValue"],["equalto",(G,pe)=>G.value===pe.value],["eq",(G,pe)=>G.value===pe.value]]));this.parent=G}set(G,pe){return this.declareVariable(G,At(pe))}declareVariable(G,pe){if(this.variables.has(G))throw new SyntaxError(`Variable already declared: ${G}`);return this.variables.set(G,pe),pe}setVariable(G,pe){return this.variables.set(G,pe),pe}resolve(G){if(this.variables.has(G))return this;if(this.parent)return this.parent.resolve(G);throw new Error(`Unknown variable: ${G}`)}lookupVariable(G){try{return this.resolve(G).variables.get(G)??new st}catch{return new st}}},$t=class{constructor(G){ke(this,"global");this.global=G??new yt}run(G){return this.evaluate(G,this.global)}evaluateBinaryExpression(G,pe){const te=this.evaluate(G.left,pe);switch(G.operator.value){case"and":return te.__bool__().value?this.evaluate(G.right,pe):te;case"or":return te.__bool__().value?te:this.evaluate(G.right,pe)}const Te=this.evaluate(G.right,pe);switch(G.operator.value){case"==":return new rt(te.value==Te.value);case"!=":return new rt(te.value!=Te.value)}if(te instanceof st||Te instanceof st)throw new Error("Cannot perform operation on undefined values");if(te instanceof nt||Te instanceof nt)throw new Error("Cannot perform operation on null values");if(te instanceof dt&&Te instanceof dt)switch(G.operator.value){case"+":return new dt(te.value+Te.value);case"-":return new dt(te.value-Te.value);case"*":return new dt(te.value*Te.value);case"/":return new dt(te.value/Te.value);case"%":return new dt(te.value%Te.value);case"<":return new rt(te.value<Te.value);case">":return new rt(te.value>Te.value);case">=":return new rt(te.value>=Te.value);case"<=":return new rt(te.value<=Te.value)}else if(te instanceof Oe&&Te instanceof Oe)switch(G.operator.value){case"+":return new Oe(te.value.concat(Te.value))}else if(Te instanceof Oe){const We=Te.value.find(tt=>tt.value===te.value)!==void 0;switch(G.operator.value){case"in":return new rt(We);case"not in":return new rt(!We)}}if(te instanceof de||Te instanceof de)switch(G.operator.value){case"+":return new de(te.value.toString()+Te.value.toString())}if(te instanceof de&&Te instanceof de)switch(G.operator.value){case"in":return new rt(Te.value.includes(te.value));case"not in":return new rt(!Te.value.includes(te.value))}if(te instanceof de&&Te instanceof ot)switch(G.operator.value){case"in":return new rt(Te.value.has(te.value));case"not in":return new rt(!Te.value.has(te.value))}throw new SyntaxError(`Unknown operator "${G.operator.value}" between ${te.type} and ${Te.type}`)}evaluateArguments(G,pe){const te=[],Te=new Map;for(const We of G)if(We.type==="KeywordArgumentExpression"){const tt=We;Te.set(tt.key.value,this.evaluate(tt.value,pe))}else{if(Te.size>0)throw new Error("Positional arguments must come before keyword arguments");te.push(this.evaluate(We,pe))}return[te,Te]}evaluateFilterExpression(G,pe){const te=this.evaluate(G.operand,pe);if(G.filter.type==="Identifier"){const Te=G.filter;if(Te.value==="tojson")return new de(vt(te));if(te instanceof Oe)switch(Te.value){case"list":return te;case"first":return te.value[0];case"last":return te.value[te.value.length-1];case"length":return new dt(te.value.length);case"reverse":return new Oe(te.value.reverse());case"sort":return new Oe(te.value.sort((We,tt)=>{if(We.type!==tt.type)throw new Error(`Cannot compare different types: ${We.type} and ${tt.type}`);switch(We.type){case"NumericValue":return We.value-tt.value;case"StringValue":return We.value.localeCompare(tt.value);default:throw new Error(`Cannot compare type: ${We.type}`)}}));case"join":return new de(te.value.map(We=>We.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${Te.value}`)}else if(te instanceof de)switch(Te.value){case"length":return new dt(te.value.length);case"upper":return new de(te.value.toUpperCase());case"lower":return new de(te.value.toLowerCase());case"title":return new de(Ue(te.value));case"capitalize":return new de(te.value.charAt(0).toUpperCase()+te.value.slice(1));case"trim":return new de(te.value.trim());case"indent":return new de(te.value.split(`
`).map((We,tt)=>tt===0||We.length===0?We:"    "+We).join(`
`));case"join":case"string":return te;default:throw new Error(`Unknown StringValue filter: ${Te.value}`)}else if(te instanceof dt)switch(Te.value){case"abs":return new dt(Math.abs(te.value));default:throw new Error(`Unknown NumericValue filter: ${Te.value}`)}else if(te instanceof ot)switch(Te.value){case"items":return new Oe(Array.from(te.value.entries()).map(([We,tt])=>new Oe([new de(We),tt])));case"length":return new dt(te.value.size);default:throw new Error(`Unknown ObjectValue filter: ${Te.value}`)}throw new Error(`Cannot apply filter "${Te.value}" to type: ${te.type}`)}else if(G.filter.type==="CallExpression"){const Te=G.filter;if(Te.callee.type!=="Identifier")throw new Error(`Unknown filter: ${Te.callee.type}`);const We=Te.callee.value;if(We==="tojson"){const[,tt]=this.evaluateArguments(Te.args,pe),ut=tt.get("indent")??new nt;if(!(ut instanceof dt||ut instanceof nt))throw new Error("If set, indent must be a number");return new de(vt(te,ut.value))}else if(We==="join"){let tt;if(te instanceof de)tt=Array.from(te.value);else if(te instanceof Oe)tt=te.value.map(Vt=>Vt.value);else throw new Error(`Cannot apply filter "${We}" to type: ${te.type}`);const[ut,Et]=this.evaluateArguments(Te.args,pe),Ot=ut.at(0)??Et.get("separator")??new de("");if(!(Ot instanceof de))throw new Error("separator must be a string");return new de(tt.join(Ot.value))}if(te instanceof Oe){switch(We){case"selectattr":case"rejectattr":{const tt=We==="selectattr";if(te.value.some(Jt=>!(Jt instanceof ot)))throw new Error(`\`${We}\` can only be applied to array of objects`);if(Te.args.some(Jt=>Jt.type!=="StringLiteral"))throw new Error(`arguments of \`${We}\` must be strings`);const[ut,Et,Ot]=Te.args.map(Jt=>this.evaluate(Jt,pe));let Vt;if(Et){const Jt=pe.tests.get(Et.value);if(!Jt)throw new Error(`Unknown test: ${Et.value}`);Vt=Jt}else Vt=(...Jt)=>Jt[0].__bool__().value;const Ht=te.value.filter(Jt=>{const $s=Jt.value.get(ut.value),zs=$s?Vt($s,Ot):!1;return tt?zs:!zs});return new Oe(Ht)}case"map":{const[,tt]=this.evaluateArguments(Te.args,pe);if(tt.has("attribute")){const ut=tt.get("attribute");if(!(ut instanceof de))throw new Error("attribute must be a string");const Et=tt.get("default"),Ot=te.value.map(Vt=>{if(!(Vt instanceof ot))throw new Error("items in map must be an object");return Vt.value.get(ut.value)??Et??new st});return new Oe(Ot)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${We}`)}else if(te instanceof de){switch(We){case"indent":{const[tt,ut]=this.evaluateArguments(Te.args,pe),Et=tt.at(0)??ut.get("width")??new dt(4);if(!(Et instanceof dt))throw new Error("width must be a number");const Ot=tt.at(1)??ut.get("first")??new rt(!1),Vt=tt.at(2)??ut.get("blank")??new rt(!1),Ht=te.value.split(`
`),Jt=" ".repeat(Et.value),$s=Ht.map((zs,tr)=>!Ot.value&&tr===0||!Vt.value&&zs.length===0?zs:Jt+zs);return new de($s.join(`
`))}}throw new Error(`Unknown StringValue filter: ${We}`)}else throw new Error(`Cannot apply filter "${We}" to type: ${te.type}`)}throw new Error(`Unknown filter: ${G.filter.type}`)}evaluateTestExpression(G,pe){const te=this.evaluate(G.operand,pe),Te=pe.tests.get(G.test.value);if(!Te)throw new Error(`Unknown test: ${G.test.value}`);const We=Te(te);return new rt(G.negate?!We:We)}evaluateUnaryExpression(G,pe){const te=this.evaluate(G.argument,pe);switch(G.operator.value){case"not":return new rt(!te.value);default:throw new SyntaxError(`Unknown operator: ${G.operator.value}`)}}evalProgram(G,pe){return this.evaluateBlock(G.body,pe)}evaluateBlock(G,pe){let te="";for(const Te of G){const We=this.evaluate(Te,pe);We.type!=="NullValue"&&We.type!=="UndefinedValue"&&(te+=We.value)}return new de(te)}evaluateIdentifier(G,pe){return pe.lookupVariable(G.value)}evaluateCallExpression(G,pe){const[te,Te]=this.evaluateArguments(G.args,pe);Te.size>0&&te.push(new we(Te));const We=this.evaluate(G.callee,pe);if(We.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${We.type}`);return We.value(te,pe)}evaluateSliceExpression(G,pe,te){if(!(G instanceof Oe||G instanceof de))throw new Error("Slice object must be an array or string");const Te=this.evaluate(pe.start,te),We=this.evaluate(pe.stop,te),tt=this.evaluate(pe.step,te);if(!(Te instanceof dt||Te instanceof st))throw new Error("Slice start must be numeric or undefined");if(!(We instanceof dt||We instanceof st))throw new Error("Slice stop must be numeric or undefined");if(!(tt instanceof dt||tt instanceof st))throw new Error("Slice step must be numeric or undefined");return G instanceof Oe?new Oe(Me(G.value,Te.value,We.value,tt.value)):new de(Me(Array.from(G.value),Te.value,We.value,tt.value).join(""))}evaluateMemberExpression(G,pe){const te=this.evaluate(G.object,pe);let Te;if(G.computed){if(G.property.type==="SliceExpression")return this.evaluateSliceExpression(te,G.property,pe);Te=this.evaluate(G.property,pe)}else Te=new de(G.property.value);let We;if(te instanceof ot){if(!(Te instanceof de))throw new Error(`Cannot access property with non-string: got ${Te.type}`);We=te.value.get(Te.value)??te.builtins.get(Te.value)}else if(te instanceof Oe||te instanceof de)if(Te instanceof dt)We=te.value.at(Te.value),te instanceof de&&(We=new de(te.value.at(Te.value)));else if(Te instanceof de)We=te.builtins.get(Te.value);else throw new Error(`Cannot access property with non-string/non-number: got ${Te.type}`);else{if(!(Te instanceof de))throw new Error(`Cannot access property with non-string: got ${Te.type}`);We=te.builtins.get(Te.value)}return We instanceof xe?We:new st}evaluateSet(G,pe){const te=this.evaluate(G.value,pe);if(G.assignee.type==="Identifier"){const Te=G.assignee.value;pe.setVariable(Te,te)}else if(G.assignee.type==="MemberExpression"){const Te=G.assignee,We=this.evaluate(Te.object,pe);if(!(We instanceof ot))throw new Error("Cannot assign to member of non-object");if(Te.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");We.value.set(Te.property.value,te)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(G.assignee)}`);return new nt}evaluateIf(G,pe){const te=this.evaluate(G.test,pe);return this.evaluateBlock(te.__bool__().value?G.body:G.alternate,pe)}evaluateFor(G,pe){const te=new yt(pe);let Te,We;if(G.iterable.type==="SelectExpression"){const Vt=G.iterable;We=this.evaluate(Vt.iterable,te),Te=Vt.test}else We=this.evaluate(G.iterable,te);if(!(We instanceof Oe))throw new Error(`Expected iterable type in for loop: got ${We.type}`);const tt=[],ut=[];for(let Vt=0;Vt<We.value.length;++Vt){const Ht=new yt(te),Jt=We.value[Vt];let $s;if(G.loopvar.type==="Identifier")$s=zs=>zs.setVariable(G.loopvar.value,Jt);else if(G.loopvar.type==="TupleLiteral"){const zs=G.loopvar;if(Jt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Jt.type}`);const tr=Jt;if(zs.value.length!==tr.value.length)throw new Error(`Too ${zs.value.length>tr.value.length?"few":"many"} items to unpack`);$s=pr=>{for(let zr=0;zr<zs.value.length;++zr){if(zs.value[zr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${zs.value[zr].type}`);pr.setVariable(zs.value[zr].value,tr.value[zr])}}}else throw new Error(`Invalid loop variable(s): ${G.loopvar.type}`);Te&&($s(Ht),!this.evaluate(Te,Ht).__bool__().value)||(tt.push(Jt),ut.push($s))}let Et="",Ot=!0;for(let Vt=0;Vt<tt.length;++Vt){const Ht=new Map([["index",new dt(Vt+1)],["index0",new dt(Vt)],["revindex",new dt(tt.length-Vt)],["revindex0",new dt(tt.length-Vt-1)],["first",new rt(Vt===0)],["last",new rt(Vt===tt.length-1)],["length",new dt(tt.length)],["previtem",Vt>0?tt[Vt-1]:new st],["nextitem",Vt<tt.length-1?tt[Vt+1]:new st]]);te.setVariable("loop",new ot(Ht)),ut[Vt](te);const Jt=this.evaluateBlock(G.body,te);Et+=Jt.value,Ot=!1}if(Ot){const Vt=this.evaluateBlock(G.defaultBlock,te);Et+=Vt.value}return new de(Et)}evaluateMacro(G,pe){return pe.setVariable(G.name.value,new at((te,Te)=>{var ut;const We=new yt(Te);te=te.slice();let tt;((ut=te.at(-1))==null?void 0:ut.type)==="KeywordArgumentsValue"&&(tt=te.pop());for(let Et=0;Et<G.args.length;++Et){const Ot=G.args[Et],Vt=te[Et];if(Ot.type==="Identifier"){const Ht=Ot;if(!Vt)throw new Error(`Missing positional argument: ${Ht.value}`);We.setVariable(Ht.value,Vt)}else if(Ot.type==="KeywordArgumentExpression"){const Ht=Ot,Jt=Vt??(tt==null?void 0:tt.value.get(Ht.key.value))??this.evaluate(Ht.value,We);We.setVariable(Ht.key.value,Jt)}else throw new Error(`Unknown argument type: ${Ot.type}`)}return this.evaluateBlock(G.body,We)})),new nt}evaluate(G,pe){if(G===void 0)return new st;switch(G.type){case"Program":return this.evalProgram(G,pe);case"Set":return this.evaluateSet(G,pe);case"If":return this.evaluateIf(G,pe);case"For":return this.evaluateFor(G,pe);case"Macro":return this.evaluateMacro(G,pe);case"NumericLiteral":return new dt(Number(G.value));case"StringLiteral":return new de(G.value);case"BooleanLiteral":return new rt(G.value);case"NullLiteral":return new nt(G.value);case"ArrayLiteral":return new Oe(G.value.map(te=>this.evaluate(te,pe)));case"TupleLiteral":return new it(G.value.map(te=>this.evaluate(te,pe)));case"ObjectLiteral":{const te=new Map;for(const[Te,We]of G.value){const tt=this.evaluate(Te,pe);if(!(tt instanceof de))throw new Error(`Object keys must be strings: got ${tt.type}`);te.set(tt.value,this.evaluate(We,pe))}return new ot(te)}case"Identifier":return this.evaluateIdentifier(G,pe);case"CallExpression":return this.evaluateCallExpression(G,pe);case"MemberExpression":return this.evaluateMemberExpression(G,pe);case"UnaryExpression":return this.evaluateUnaryExpression(G,pe);case"BinaryExpression":return this.evaluateBinaryExpression(G,pe);case"FilterExpression":return this.evaluateFilterExpression(G,pe);case"TestExpression":return this.evaluateTestExpression(G,pe);default:throw new SyntaxError(`Unknown node type: ${G.type}`)}}};function At(G){switch(typeof G){case"number":return new dt(G);case"string":return new de(G);case"boolean":return new rt(G);case"undefined":return new st;case"object":return G===null?new nt:Array.isArray(G)?new Oe(G.map(At)):new ot(new Map(Object.entries(G).map(([pe,te])=>[pe,At(te)])));case"function":return new at((pe,te)=>{const Te=G(...pe.map(We=>We.value))??null;return At(Te)});default:throw new Error(`Cannot convert to runtime value: ${G}`)}}function vt(G,pe,te){const Te=te??0;switch(G.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(G.value);case"ArrayValue":case"ObjectValue":{const We=pe?" ".repeat(pe):"",tt=`
`+We.repeat(Te),ut=tt+We;if(G.type==="ArrayValue"){const Et=G.value.map(Ot=>vt(Ot,pe,Te+1));return pe?`[${ut}${Et.join(`,${ut}`)}${tt}]`:`[${Et.join(", ")}]`}else{const Et=Array.from(G.value.entries()).map(([Ot,Vt])=>{const Ht=`"${Ot}": ${vt(Vt,pe,Te+1)}`;return pe?`${ut}${Ht}`:Ht});return pe?`{${Et.join(",")}${tt}}`:`{${Et.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${G.type}`)}}var Dt=class{constructor(G){ke(this,"parsed");const pe=E(G,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Ae(pe)}render(G){const pe=new yt;if(pe.set("false",!1),pe.set("true",!0),pe.set("raise_exception",We=>{throw new Error(We)}),pe.set("range",ee),G)for(const[We,tt]of Object.entries(G))pe.set(We,tt);return new $t(pe).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{registerBackend:()=>V,resolveBackendAndExecutionProviders:()=>K});const y=new Map,z=[],V=(v,k,x)=>{if(k&&typeof k.init=="function"&&typeof k.createInferenceSessionHandler=="function"){const E=y.get(v);if(E===void 0)y.set(v,{backend:k,priority:x});else{if(E.priority>x)return;if(E.priority===x&&E.backend!==k)throw new Error(`cannot register backend "${v}" using priority ${x}`)}if(x>=0){const C=z.indexOf(v);C!==-1&&z.splice(C,1);for(let j=0;j<z.length;j++)if(y.get(z[j]).priority<=x){z.splice(j,0,v);return}z.push(v)}return}throw new TypeError("not a valid backend")},se=async v=>{const k=y.get(v);if(!k)return"backend not found.";if(k.initialized)return k.backend;if(k.aborted)return k.error;{const x=!!k.initPromise;try{return x||(k.initPromise=k.backend.init(v)),await k.initPromise,k.initialized=!0,k.backend}catch(E){return x||(k.error=`${E}`,k.aborted=!0),k.error}finally{delete k.initPromise}}},K=async v=>{const k=v.executionProviders||[],x=k.map(me=>typeof me=="string"?me:me.name),E=x.length===0?z:x;let C;const j=[],re=new Set;for(const me of E){const Y=await se(me);typeof Y=="string"?j.push({name:me,err:Y}):(C||(C=Y),C===Y&&re.add(me))}if(!C)throw new Error(`no available backend found. ERR: ${j.map(me=>`[${me.name}] ${me.err}`).join(", ")}`);for(const{name:me,err:Y}of j)x.includes(me)&&console.warn(`removing requested execution provider "${me}" from session options because it is not available: ${Y}`);const ce=k.filter(me=>re.has(typeof me=="string"?me:me.name));return[C,new Proxy(v,{get:(me,Y)=>Y==="executionProviders"?ce:Reflect.get(me,Y)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(Le,P,r)=>{r.r(P),r.d(P,{registerBackend:()=>y.registerBackend});var y=r("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{env:()=>V});var y=r("./node_modules/onnxruntime-common/dist/esm/version.js");let z="warning";const V={wasm:{},webgl:{},webgpu:{},versions:{common:y.version},set logLevel(se){if(se!==void 0){if(typeof se!="string"||["verbose","info","warning","error","fatal"].indexOf(se)===-1)throw new Error(`Unsupported logging level: ${se}`);z=se}},get logLevel(){return z}};Object.defineProperty(V,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(Le,P,r)=>{r.r(P),r.d(P,{env:()=>z});var y=r("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const z=y.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(Le,P,r)=>{r.r(P),r.d(P,{InferenceSession:()=>V.InferenceSession,TRACE:()=>K.TRACE,TRACE_FUNC_BEGIN:()=>K.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>K.TRACE_FUNC_END,Tensor:()=>se.Tensor,TrainingSession:()=>v.TrainingSession,env:()=>z.env,registerBackend:()=>y.registerBackend});var y=r("./node_modules/onnxruntime-common/dist/esm/backend.js"),z=r("./node_modules/onnxruntime-common/dist/esm/env.js"),V=r("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),se=r("./node_modules/onnxruntime-common/dist/esm/tensor.js");r("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),r("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var K=r("./node_modules/onnxruntime-common/dist/esm/trace.js");r("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),r("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var v=r("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{InferenceSession:()=>se});var y=r("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),z=r("./node_modules/onnxruntime-common/dist/esm/tensor.js"),V=r("./node_modules/onnxruntime-common/dist/esm/trace.js");class se{constructor(v){this.handler=v}async run(v,k,x){(0,V.TRACE_FUNC_BEGIN)();const E={};let C={};if(typeof v!="object"||v===null||v instanceof z.Tensor||Array.isArray(v))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let j=!0;if(typeof k=="object"){if(k===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(k instanceof z.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(k)){if(k.length===0)throw new TypeError("'fetches' cannot be an empty array.");j=!1;for(const me of k){if(typeof me!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(me)===-1)throw new RangeError(`'fetches' contains invalid output name: ${me}.`);E[me]=null}if(typeof x=="object"&&x!==null)C=x;else if(typeof x<"u")throw new TypeError("'options' must be an object.")}else{let me=!1;const Y=Object.getOwnPropertyNames(k);for(const q of this.outputNames)if(Y.indexOf(q)!==-1){const ne=k[q];(ne===null||ne instanceof z.Tensor)&&(me=!0,j=!1,E[q]=ne)}if(me){if(typeof x=="object"&&x!==null)C=x;else if(typeof x<"u")throw new TypeError("'options' must be an object.")}else C=k}}else if(typeof k<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const me of this.inputNames)if(typeof v[me]>"u")throw new Error(`input '${me}' is missing in 'feeds'.`);if(j)for(const me of this.outputNames)E[me]=null;const re=await this.handler.run(v,E,C),ce={};for(const me in re)if(Object.hasOwnProperty.call(re,me)){const Y=re[me];Y instanceof z.Tensor?ce[me]=Y:ce[me]=new z.Tensor(Y.type,Y.data,Y.dims)}return(0,V.TRACE_FUNC_END)(),ce}async release(){return this.handler.dispose()}static async create(v,k,x,E){(0,V.TRACE_FUNC_BEGIN)();let C,j={};if(typeof v=="string"){if(C=v,typeof k=="object"&&k!==null)j=k;else if(typeof k<"u")throw new TypeError("'options' must be an object.")}else if(v instanceof Uint8Array){if(C=v,typeof k=="object"&&k!==null)j=k;else if(typeof k<"u")throw new TypeError("'options' must be an object.")}else if(v instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&v instanceof SharedArrayBuffer){const Y=v;let q=0,ne=v.byteLength;if(typeof k=="object"&&k!==null)j=k;else if(typeof k=="number"){if(q=k,!Number.isSafeInteger(q))throw new RangeError("'byteOffset' must be an integer.");if(q<0||q>=Y.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${Y.byteLength}).`);if(ne=v.byteLength-q,typeof x=="number"){if(ne=x,!Number.isSafeInteger(ne))throw new RangeError("'byteLength' must be an integer.");if(ne<=0||q+ne>Y.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${Y.byteLength-q}].`);if(typeof E=="object"&&E!==null)j=E;else if(typeof E<"u")throw new TypeError("'options' must be an object.")}else if(typeof x<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof k<"u")throw new TypeError("'options' must be an object.");C=new Uint8Array(Y,q,ne)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[re,ce]=await(0,y.resolveBackendAndExecutionProviders)(j),me=await re.createInferenceSessionHandler(C,ce);return(0,V.TRACE_FUNC_END)(),new se(me)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(Le,P,r)=>{r.r(P),r.d(P,{InferenceSession:()=>z});var y=r("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const z=y.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(Le,P,r)=>{r.r(P)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(Le,P,r)=>{r.r(P)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{tensorToDataURL:()=>y,tensorToImageData:()=>z});const y=(V,se)=>{const K=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);K.width=V.dims[3],K.height=V.dims[2];const v=K.getContext("2d");if(v!=null){let k,x;(se==null?void 0:se.tensorLayout)!==void 0&&se.tensorLayout==="NHWC"?(k=V.dims[2],x=V.dims[3]):(k=V.dims[3],x=V.dims[2]);const E=(se==null?void 0:se.format)!==void 0?se.format:"RGB",C=se==null?void 0:se.norm;let j,re;C===void 0||C.mean===void 0?j=[255,255,255,255]:typeof C.mean=="number"?j=[C.mean,C.mean,C.mean,C.mean]:(j=[C.mean[0],C.mean[1],C.mean[2],0],C.mean[3]!==void 0&&(j[3]=C.mean[3])),C===void 0||C.bias===void 0?re=[0,0,0,0]:typeof C.bias=="number"?re=[C.bias,C.bias,C.bias,C.bias]:(re=[C.bias[0],C.bias[1],C.bias[2],0],C.bias[3]!==void 0&&(re[3]=C.bias[3]));const ce=x*k;let me=0,Y=ce,q=ce*2,ne=-1;E==="RGBA"?(me=0,Y=ce,q=ce*2,ne=ce*3):E==="RGB"?(me=0,Y=ce,q=ce*2):E==="RBG"&&(me=0,q=ce,Y=ce*2);for(let R=0;R<x;R++)for(let L=0;L<k;L++){const T=(V.data[me++]-re[0])*j[0],S=(V.data[Y++]-re[1])*j[1],U=(V.data[q++]-re[2])*j[2],ge=ne===-1?255:(V.data[ne++]-re[3])*j[3];v.fillStyle="rgba("+T+","+S+","+U+","+ge+")",v.fillRect(L,R,1,1)}if("toDataURL"in K)return K.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},z=(V,se)=>{const K=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let v;if(K!=null){let k,x,E;(se==null?void 0:se.tensorLayout)!==void 0&&se.tensorLayout==="NHWC"?(k=V.dims[2],x=V.dims[1],E=V.dims[3]):(k=V.dims[3],x=V.dims[2],E=V.dims[1]);const C=se!==void 0&&se.format!==void 0?se.format:"RGB",j=se==null?void 0:se.norm;let re,ce;j===void 0||j.mean===void 0?re=[255,255,255,255]:typeof j.mean=="number"?re=[j.mean,j.mean,j.mean,j.mean]:(re=[j.mean[0],j.mean[1],j.mean[2],255],j.mean[3]!==void 0&&(re[3]=j.mean[3])),j===void 0||j.bias===void 0?ce=[0,0,0,0]:typeof j.bias=="number"?ce=[j.bias,j.bias,j.bias,j.bias]:(ce=[j.bias[0],j.bias[1],j.bias[2],0],j.bias[3]!==void 0&&(ce[3]=j.bias[3]));const me=x*k;if(se!==void 0&&(se.format!==void 0&&E===4&&se.format!=="RGBA"||E===3&&se.format!=="RGB"&&se.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const Y=4;let q=0,ne=1,R=2,L=3,T=0,S=me,U=me*2,ge=-1;C==="RGBA"?(T=0,S=me,U=me*2,ge=me*3):C==="RGB"?(T=0,S=me,U=me*2):C==="RBG"&&(T=0,U=me,S=me*2),v=K.createImageData(k,x);for(let _e=0;_e<x*k;q+=Y,ne+=Y,R+=Y,L+=Y,_e++)v.data[q]=(V.data[T++]-ce[0])*re[0],v.data[ne]=(V.data[S++]-ce[1])*re[1],v.data[R]=(V.data[U++]-ce[2])*re[2],v.data[L]=ge===-1?255:(V.data[ge++]-ce[3])*re[3]}else throw new Error("Can not access image data");return v}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(Le,P,r)=>{r.r(P)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{bufferToTensor:()=>z,tensorFromGpuBuffer:()=>K,tensorFromImage:()=>V,tensorFromMLTensor:()=>v,tensorFromPinnedBuffer:()=>k,tensorFromTexture:()=>se});var y=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const z=(x,E)=>{if(x===void 0)throw new Error("Image buffer must be defined");if(E.height===void 0||E.width===void 0)throw new Error("Image height and width must be defined");if(E.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:C,width:j}=E,re=E.norm??{mean:255,bias:0};let ce,me;typeof re.mean=="number"?ce=[re.mean,re.mean,re.mean,re.mean]:ce=[re.mean[0],re.mean[1],re.mean[2],re.mean[3]??255],typeof re.bias=="number"?me=[re.bias,re.bias,re.bias,re.bias]:me=[re.bias[0],re.bias[1],re.bias[2],re.bias[3]??0];const Y=E.format!==void 0?E.format:"RGBA",q=E.tensorFormat!==void 0&&E.tensorFormat!==void 0?E.tensorFormat:"RGB",ne=C*j,R=q==="RGBA"?new Float32Array(ne*4):new Float32Array(ne*3);let L=4,T=0,S=1,U=2,ge=3,_e=0,ze=ne,Ie=ne*2,fe=-1;Y==="RGB"&&(L=3,T=0,S=1,U=2,ge=-1),q==="RGBA"?fe=ne*3:q==="RBG"?(_e=0,Ie=ne,ze=ne*2):q==="BGR"&&(Ie=0,ze=ne,_e=ne*2);for(let ve=0;ve<ne;ve++,T+=L,U+=L,S+=L,ge+=L)R[_e++]=(x[T]+me[0])/ce[0],R[ze++]=(x[S]+me[1])/ce[1],R[Ie++]=(x[U]+me[2])/ce[2],fe!==-1&&ge!==-1&&(R[fe++]=(x[ge]+me[3])/ce[3]);return q==="RGBA"?new y.Tensor("float32",R,[1,4,C,j]):new y.Tensor("float32",R,[1,3,C,j])},V=async(x,E)=>{const C=typeof HTMLImageElement<"u"&&x instanceof HTMLImageElement,j=typeof ImageData<"u"&&x instanceof ImageData,re=typeof ImageBitmap<"u"&&x instanceof ImageBitmap,ce=typeof x=="string";let me,Y=E??{};const q=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},ne=R=>typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||R instanceof OffscreenCanvas?R.getContext("2d"):null;if(C){const R=q();R.width=x.width,R.height=x.height;const L=ne(R);if(L!=null){let T=x.height,S=x.width;if(E!==void 0&&E.resizedHeight!==void 0&&E.resizedWidth!==void 0&&(T=E.resizedHeight,S=E.resizedWidth),E!==void 0){if(Y=E,E.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");Y.tensorFormat="RGBA",Y.height=T,Y.width=S}else Y.tensorFormat="RGBA",Y.height=T,Y.width=S;L.drawImage(x,0,0),me=L.getImageData(0,0,S,T).data}else throw new Error("Can not access image data")}else if(j){let R,L;if(E!==void 0&&E.resizedWidth!==void 0&&E.resizedHeight!==void 0?(R=E.resizedHeight,L=E.resizedWidth):(R=x.height,L=x.width),E!==void 0&&(Y=E),Y.format="RGBA",Y.height=R,Y.width=L,E!==void 0){const T=q();T.width=L,T.height=R;const S=ne(T);if(S!=null)S.putImageData(x,0,0),me=S.getImageData(0,0,L,R).data;else throw new Error("Can not access image data")}else me=x.data}else if(re){if(E===void 0)throw new Error("Please provide image config with format for Imagebitmap");const R=q();R.width=x.width,R.height=x.height;const L=ne(R);if(L!=null){const T=x.height,S=x.width;return L.drawImage(x,0,0,S,T),me=L.getImageData(0,0,S,T).data,Y.height=T,Y.width=S,z(me,Y)}else throw new Error("Can not access image data")}else{if(ce)return new Promise((R,L)=>{const T=q(),S=ne(T);if(!x||!S)return L();const U=new Image;U.crossOrigin="Anonymous",U.src=x,U.onload=()=>{T.width=U.width,T.height=U.height,S.drawImage(U,0,0,T.width,T.height);const ge=S.getImageData(0,0,T.width,T.height);Y.height=T.height,Y.width=T.width,R(z(ge.data,Y))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(me!==void 0)return z(me,Y);throw new Error("Input data provided is not supported - aborted tensor creation")},se=(x,E)=>{const{width:C,height:j,download:re,dispose:ce}=E,me=[1,j,C,4];return new y.Tensor({location:"texture",type:"float32",texture:x,dims:me,download:re,dispose:ce})},K=(x,E)=>{const{dataType:C,dims:j,download:re,dispose:ce}=E;return new y.Tensor({location:"gpu-buffer",type:C??"float32",gpuBuffer:x,dims:j,download:re,dispose:ce})},v=(x,E)=>{const{dataType:C,dims:j,download:re,dispose:ce}=E;return new y.Tensor({location:"ml-tensor",type:C??"float32",mlTensor:x,dims:j,download:re,dispose:ce})},k=(x,E,C)=>new y.Tensor({location:"cpu-pinned",type:x,data:E,dims:C??[E.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(Le,P,r)=>{r.r(P)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(Le,P,r)=>{r.r(P),r.d(P,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>z,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>y,checkTypedArray:()=>se});const y=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),z=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let V=!1;const se=()=>{if(!V){V=!0;const K=typeof BigInt64Array<"u"&&BigInt64Array.from,v=typeof BigUint64Array<"u"&&BigUint64Array.from,k=typeof Float16Array<"u"&&Float16Array.from;K&&(y.set("int64",BigInt64Array),z.set(BigInt64Array,"int64")),v&&(y.set("uint64",BigUint64Array),z.set(BigUint64Array,"uint64")),k?(y.set("float16",Float16Array),z.set(Float16Array,"float16")):y.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{Tensor:()=>K});var y=r("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),z=r("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),V=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),se=r("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class K{constructor(k,x,E){(0,V.checkTypedArray)();let C,j;if(typeof k=="object"&&"location"in k)switch(this.dataLocation=k.location,C=k.type,j=k.dims,k.location){case"cpu-pinned":{const ce=V.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(C);if(!ce)throw new TypeError(`unsupported type "${C}" to create tensor from pinned buffer`);if(!(k.data instanceof ce))throw new TypeError(`buffer should be of type ${ce.name}`);this.cpuData=k.data;break}case"texture":{if(C!=="float32")throw new TypeError(`unsupported type "${C}" to create tensor from texture`);this.gpuTextureData=k.texture,this.downloader=k.download,this.disposer=k.dispose;break}case"gpu-buffer":{if(C!=="float32"&&C!=="float16"&&C!=="int32"&&C!=="int64"&&C!=="uint32"&&C!=="uint8"&&C!=="bool"&&C!=="uint4"&&C!=="int4")throw new TypeError(`unsupported type "${C}" to create tensor from gpu buffer`);this.gpuBufferData=k.gpuBuffer,this.downloader=k.download,this.disposer=k.dispose;break}case"ml-tensor":{if(C!=="float32"&&C!=="float16"&&C!=="int32"&&C!=="int64"&&C!=="uint32"&&C!=="uint64"&&C!=="int8"&&C!=="uint8"&&C!=="bool")throw new TypeError(`unsupported type "${C}" to create tensor from MLTensor`);this.mlTensorData=k.mlTensor,this.downloader=k.download,this.disposer=k.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let ce,me;if(typeof k=="string")if(C=k,me=E,k==="string"){if(!Array.isArray(x))throw new TypeError("A string tensor's data must be a string array.");ce=x}else{const Y=V.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(k);if(Y===void 0)throw new TypeError(`Unsupported tensor type: ${k}.`);if(Array.isArray(x)){if(k==="float16"&&Y===Uint16Array||k==="uint4"||k==="int4")throw new TypeError(`Creating a ${k} tensor from number array is not supported. Please use ${Y.name} as data.`);k==="uint64"||k==="int64"?ce=Y.from(x,BigInt):ce=Y.from(x)}else if(x instanceof Y)ce=x;else if(x instanceof Uint8ClampedArray)if(k==="uint8")ce=Uint8Array.from(x);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${C} tensor's data must be type of ${Y}`)}else if(me=x,Array.isArray(k)){if(k.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const Y=typeof k[0];if(Y==="string")C="string",ce=k;else if(Y==="boolean")C="bool",ce=Uint8Array.from(k);else throw new TypeError(`Invalid element type of data array: ${Y}.`)}else if(k instanceof Uint8ClampedArray)C="uint8",ce=Uint8Array.from(k);else{const Y=V.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(k.constructor);if(Y===void 0)throw new TypeError(`Unsupported type for tensor data: ${k.constructor}.`);C=Y,ce=k}if(me===void 0)me=[ce.length];else if(!Array.isArray(me))throw new TypeError("A tensor's dims must be a number array");j=me,this.cpuData=ce,this.dataLocation="cpu"}const re=(0,se.calculateSize)(j);if(this.cpuData&&re!==this.cpuData.length&&!((C==="uint4"||C==="int4")&&Math.ceil(re/2)===this.cpuData.length))throw new Error(`Tensor's size(${re}) does not match data length(${this.cpuData.length}).`);this.type=C,this.dims=j,this.size=re}static async fromImage(k,x){return(0,z.tensorFromImage)(k,x)}static fromTexture(k,x){return(0,z.tensorFromTexture)(k,x)}static fromGpuBuffer(k,x){return(0,z.tensorFromGpuBuffer)(k,x)}static fromMLTensor(k,x){return(0,z.tensorFromMLTensor)(k,x)}static fromPinnedBuffer(k,x,E){return(0,z.tensorFromPinnedBuffer)(k,x,E)}toDataURL(k){return(0,y.tensorToDataURL)(this,k)}toImageData(k){return(0,y.tensorToImageData)(this,k)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(k){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const x=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=x,k&&this.disposer&&(this.disposer(),this.disposer=void 0),x}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(k){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,se.tensorReshape)(this,k)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{calculateSize:()=>z,tensorReshape:()=>V});var y=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const z=se=>{let K=1;for(let v=0;v<se.length;v++){const k=se[v];if(typeof k!="number"||!Number.isSafeInteger(k))throw new TypeError(`dims[${v}] must be an integer, got: ${k}`);if(k<0)throw new RangeError(`dims[${v}] must be a non-negative integer, got: ${k}`);K*=k}return K},V=(se,K)=>{switch(se.location){case"cpu":return new y.Tensor(se.type,se.data,K);case"cpu-pinned":return new y.Tensor({location:"cpu-pinned",data:se.data,type:se.type,dims:K});case"texture":return new y.Tensor({location:"texture",texture:se.texture,type:se.type,dims:K});case"gpu-buffer":return new y.Tensor({location:"gpu-buffer",gpuBuffer:se.gpuBuffer,type:se.type,dims:K});case"ml-tensor":return new y.Tensor({location:"ml-tensor",mlTensor:se.mlTensor,type:se.type,dims:K});default:throw new Error(`tensorReshape: tensor location ${se.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(Le,P,r)=>{r.r(P),r.d(P,{Tensor:()=>z});var y=r("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const z=y.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(Le,P,r)=>{r.r(P),r.d(P,{TRACE:()=>z,TRACE_FUNC_BEGIN:()=>se,TRACE_FUNC_END:()=>K});var y=r("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const z=(v,k)=>{(typeof y.env.trace>"u"?!y.env.wasm.trace:!y.env.trace)||console.timeStamp(`${v}::ORT::${k}`)},V=(v,k)=>{var C;const x=((C=new Error().stack)==null?void 0:C.split(/\r\n|\r|\n/g))||[];let E=!1;for(let j=0;j<x.length;j++){if(E&&!x[j].includes("TRACE_FUNC")){let re=`FUNC_${v}::${x[j].trim().split(" ")[1]}`;k&&(re+=`::${k}`),z("CPU",re);return}x[j].includes("TRACE_FUNC")&&(E=!0)}},se=v=>{(typeof y.env.trace>"u"?!y.env.wasm.trace:!y.env.trace)||V("BEGIN",v)},K=v=>{(typeof y.env.trace>"u"?!y.env.wasm.trace:!y.env.trace)||V("END",v)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(Le,P,r)=>{r.r(P),r.d(P,{TrainingSession:()=>se});var y=r("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),z=r("./node_modules/onnxruntime-common/dist/esm/tensor.js");const V="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class se{constructor(v,k,x){this.handler=v,this.hasOptimizerModel=k,this.hasEvalModel=x}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(v,k){const x=v.evalModel||"",E=v.optimizerModel||"",C=k||{},[j,re]=await(0,y.resolveBackendAndExecutionProviders)(C);if(j.createTrainingSessionHandler){const ce=await j.createTrainingSessionHandler(v.checkpointState,v.trainModel,x,E,re);return new se(ce,!!v.optimizerModel,!!v.evalModel)}else throw new Error(V)}typeNarrowingForRunStep(v,k,x,E,C){const j={};let re={};if(typeof x!="object"||x===null||x instanceof z.Tensor||Array.isArray(x))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let ce=!0;if(typeof E=="object"){if(E===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(E instanceof z.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(E)){if(E.length===0)throw new TypeError("'fetches' cannot be an empty array.");ce=!1;for(const me of E){if(typeof me!="string")throw new TypeError("'fetches' must be a string array or an object.");if(k.indexOf(me)===-1)throw new RangeError(`'fetches' contains invalid output name: ${me}.`);j[me]=null}if(typeof C=="object"&&C!==null)re=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else{let me=!1;const Y=Object.getOwnPropertyNames(E);for(const q of k)if(Y.indexOf(q)!==-1){const ne=E[q];(ne===null||ne instanceof z.Tensor)&&(me=!0,ce=!1,j[q]=ne)}if(me){if(typeof C=="object"&&C!==null)re=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else re=E}}else if(typeof E<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const me of v)if(typeof x[me]>"u")throw new Error(`input '${me}' is missing in 'feeds'.`);if(ce)for(const me of k)j[me]=null;return[j,re]}convertHandlerReturnTypeToMapOfTensors(v){const k={};for(const x in v)if(Object.hasOwnProperty.call(v,x)){const E=v[x];E instanceof z.Tensor?k[x]=E:k[x]=new z.Tensor(E.type,E.data,E.dims)}return k}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(v,k,x){const[E,C]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,v,k,x),j=await this.handler.runTrainStep(v,E,C);return this.convertHandlerReturnTypeToMapOfTensors(j)}async runOptimizerStep(v){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(v||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(v,k,x){if(this.hasEvalModel){const[E,C]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,v,k,x),j=await this.handler.runEvalStep(v,E,C);return this.convertHandlerReturnTypeToMapOfTensors(j)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(v=!0){return this.handler.getParametersSize(v)}async loadParametersBuffer(v,k=!0){const x=await this.getParametersSize(k);if(v.length!==4*x)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(v,k)}async getContiguousParameters(v=!0){return this.handler.getContiguousParameters(v)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(Le,P,r)=>{r.r(P),r.d(P,{TrainingSession:()=>z});var y=r("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const z=y.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(Le,P,r)=>{r.r(P),r.d(P,{version:()=>y});const y="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(Le,P,r)=>{r.r(P),r.d(P,{InferenceSession:()=>vt,TRACE:()=>it,TRACE_FUNC_BEGIN:()=>nt,TRACE_FUNC_END:()=>st,Tensor:()=>we,default:()=>Rf,env:()=>U,registerBackend:()=>re});/*!
 * ONNX Runtime Web v1.21.0-dev.20250206-d981b153d3
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var y=Object.defineProperty,z=Object.getOwnPropertyDescriptor,V=Object.getOwnPropertyNames,se=Object.prototype.hasOwnProperty,K=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,s)=>(typeof require<"u"?require:t)[s]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),v=(e,t)=>()=>(e&&(t=e(e=0)),t),k=(e,t)=>{for(var s in t)y(e,s,{get:t[s],enumerable:!0})},x=(e,t,s,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of V(t))!se.call(e,i)&&i!==s&&y(e,i,{get:()=>t[i],enumerable:!(o=z(t,i))||o.enumerable});return e},E=e=>x(y({},"__esModule",{value:!0}),e),C,j,re,ce,me,Y=v(()=>{C=new Map,j=[],re=(e,t,s)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let o=C.get(e);if(o===void 0)C.set(e,{backend:t,priority:s});else{if(o.priority>s)return;if(o.priority===s&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${s}`)}if(s>=0){let i=j.indexOf(e);i!==-1&&j.splice(i,1);for(let d=0;d<j.length;d++)if(C.get(j[d]).priority<=s){j.splice(d,0,e);return}j.push(e)}return}throw new TypeError("not a valid backend")},ce=async e=>{let t=C.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let s=!!t.initPromise;try{return s||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(o){return s||(t.error=`${o}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},me=async e=>{let t=e.executionProviders||[],s=t.map(g=>typeof g=="string"?g:g.name),o=s.length===0?j:s,i,d=[],a=new Set;for(let g of o){let w=await ce(g);typeof w=="string"?d.push({name:g,err:w}):(i||(i=w),i===w&&a.add(g))}if(!i)throw new Error(`no available backend found. ERR: ${d.map(g=>`[${g.name}] ${g.err}`).join(", ")}`);for(let{name:g,err:w}of d)s.includes(g)&&console.warn(`removing requested execution provider "${g}" from session options because it is not available: ${w}`);let p=t.filter(g=>a.has(typeof g=="string"?g:g.name));return[i,new Proxy(e,{get:(g,w)=>w==="executionProviders"?p:Reflect.get(g,w)})]}}),q=v(()=>{Y()}),ne,R=v(()=>{ne="1.21.0-dev.20250206-d981b153d3"}),L,T,S=v(()=>{R(),L="warning",T={wasm:{},webgl:{},webgpu:{},versions:{common:ne},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);L=e}},get logLevel(){return L}},Object.defineProperty(T,"logLevel",{enumerable:!0})}),U,ge=v(()=>{S(),U=T}),_e,ze,Ie=v(()=>{_e=(e,t)=>{let s=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=e.dims[3],s.height=e.dims[2];let o=s.getContext("2d");if(o!=null){let i,d;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],d=e.dims[3]):(i=e.dims[3],d=e.dims[2]);let a=(t==null?void 0:t.format)!==void 0?t.format:"RGB",p=t==null?void 0:t.norm,g,w;p===void 0||p.mean===void 0?g=[255,255,255,255]:typeof p.mean=="number"?g=[p.mean,p.mean,p.mean,p.mean]:(g=[p.mean[0],p.mean[1],p.mean[2],0],p.mean[3]!==void 0&&(g[3]=p.mean[3])),p===void 0||p.bias===void 0?w=[0,0,0,0]:typeof p.bias=="number"?w=[p.bias,p.bias,p.bias,p.bias]:(w=[p.bias[0],p.bias[1],p.bias[2],0],p.bias[3]!==void 0&&(w[3]=p.bias[3]));let F=d*i,D=0,m=F,H=F*2,Q=-1;a==="RGBA"?(D=0,m=F,H=F*2,Q=F*3):a==="RGB"?(D=0,m=F,H=F*2):a==="RBG"&&(D=0,H=F,m=F*2);for(let Z=0;Z<d;Z++)for(let ue=0;ue<i;ue++){let he=(e.data[D++]-w[0])*g[0],le=(e.data[m++]-w[1])*g[1],Pe=(e.data[H++]-w[2])*g[2],Ee=Q===-1?255:(e.data[Q++]-w[3])*g[3];o.fillStyle="rgba("+he+","+le+","+Pe+","+Ee+")",o.fillRect(ue,Z,1,1)}if("toDataURL"in s)return s.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ze=(e,t)=>{let s=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),o;if(s!=null){let i,d,a;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],d=e.dims[1],a=e.dims[3]):(i=e.dims[3],d=e.dims[2],a=e.dims[1]);let p=t!==void 0&&t.format!==void 0?t.format:"RGB",g=t==null?void 0:t.norm,w,F;g===void 0||g.mean===void 0?w=[255,255,255,255]:typeof g.mean=="number"?w=[g.mean,g.mean,g.mean,g.mean]:(w=[g.mean[0],g.mean[1],g.mean[2],255],g.mean[3]!==void 0&&(w[3]=g.mean[3])),g===void 0||g.bias===void 0?F=[0,0,0,0]:typeof g.bias=="number"?F=[g.bias,g.bias,g.bias,g.bias]:(F=[g.bias[0],g.bias[1],g.bias[2],0],g.bias[3]!==void 0&&(F[3]=g.bias[3]));let D=d*i;if(t!==void 0&&(t.format!==void 0&&a===4&&t.format!=="RGBA"||a===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let m=4,H=0,Q=1,Z=2,ue=3,he=0,le=D,Pe=D*2,Ee=-1;p==="RGBA"?(he=0,le=D,Pe=D*2,Ee=D*3):p==="RGB"?(he=0,le=D,Pe=D*2):p==="RBG"&&(he=0,Pe=D,le=D*2),o=s.createImageData(i,d);for(let De=0;De<d*i;H+=m,Q+=m,Z+=m,ue+=m,De++)o.data[H]=(e.data[he++]-F[0])*w[0],o.data[Q]=(e.data[le++]-F[1])*w[1],o.data[Z]=(e.data[Pe++]-F[2])*w[2],o.data[ue]=Ee===-1?255:(e.data[Ee++]-F[3])*w[3]}else throw new Error("Can not access image data");return o}}),fe,Be,ve,Ge,He,Ve,wt=v(()=>{ot(),fe=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:s,width:o}=t,i=t.norm??{mean:255,bias:0},d,a;typeof i.mean=="number"?d=[i.mean,i.mean,i.mean,i.mean]:d=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?a=[i.bias,i.bias,i.bias,i.bias]:a=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let p=t.format!==void 0?t.format:"RGBA",g=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",w=s*o,F=g==="RGBA"?new Float32Array(w*4):new Float32Array(w*3),D=4,m=0,H=1,Q=2,Z=3,ue=0,he=w,le=w*2,Pe=-1;p==="RGB"&&(D=3,m=0,H=1,Q=2,Z=-1),g==="RGBA"?Pe=w*3:g==="RBG"?(ue=0,le=w,he=w*2):g==="BGR"&&(le=0,he=w,ue=w*2);for(let Ee=0;Ee<w;Ee++,m+=D,Q+=D,H+=D,Z+=D)F[ue++]=(e[m]+a[0])/d[0],F[he++]=(e[H]+a[1])/d[1],F[le++]=(e[Q]+a[2])/d[2],Pe!==-1&&Z!==-1&&(F[Pe++]=(e[Z]+a[3])/d[3]);return g==="RGBA"?new rt("float32",F,[1,4,s,o]):new rt("float32",F,[1,3,s,o])},Be=async(e,t)=>{let s=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,o=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,d=typeof e=="string",a,p=t??{},g=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},w=F=>typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||F instanceof OffscreenCanvas?F.getContext("2d"):null;if(s){let F=g();F.width=e.width,F.height=e.height;let D=w(F);if(D!=null){let m=e.height,H=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(m=t.resizedHeight,H=t.resizedWidth),t!==void 0){if(p=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");p.tensorFormat="RGBA",p.height=m,p.width=H}else p.tensorFormat="RGBA",p.height=m,p.width=H;D.drawImage(e,0,0),a=D.getImageData(0,0,H,m).data}else throw new Error("Can not access image data")}else if(o){let F,D;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(F=t.resizedHeight,D=t.resizedWidth):(F=e.height,D=e.width),t!==void 0&&(p=t),p.format="RGBA",p.height=F,p.width=D,t!==void 0){let m=g();m.width=D,m.height=F;let H=w(m);if(H!=null)H.putImageData(e,0,0),a=H.getImageData(0,0,D,F).data;else throw new Error("Can not access image data")}else a=e.data}else if(i){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let F=g();F.width=e.width,F.height=e.height;let D=w(F);if(D!=null){let m=e.height,H=e.width;return D.drawImage(e,0,0,H,m),a=D.getImageData(0,0,H,m).data,p.height=m,p.width=H,fe(a,p)}else throw new Error("Can not access image data")}else{if(d)return new Promise((F,D)=>{let m=g(),H=w(m);if(!e||!H)return D();let Q=new Image;Q.crossOrigin="Anonymous",Q.src=e,Q.onload=()=>{m.width=Q.width,m.height=Q.height,H.drawImage(Q,0,0,m.width,m.height);let Z=H.getImageData(0,0,m.width,m.height);p.height=m.height,p.width=m.width,F(fe(Z.data,p))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(a!==void 0)return fe(a,p);throw new Error("Input data provided is not supported - aborted tensor creation")},ve=(e,t)=>{let{width:s,height:o,download:i,dispose:d}=t,a=[1,o,s,4];return new rt({location:"texture",type:"float32",texture:e,dims:a,download:i,dispose:d})},Ge=(e,t)=>{let{dataType:s,dims:o,download:i,dispose:d}=t;return new rt({location:"gpu-buffer",type:s??"float32",gpuBuffer:e,dims:o,download:i,dispose:d})},He=(e,t)=>{let{dataType:s,dims:o,download:i,dispose:d}=t;return new rt({location:"ml-tensor",type:s??"float32",mlTensor:e,dims:o,download:i,dispose:d})},Ve=(e,t,s)=>new rt({location:"cpu-pinned",type:e,data:t,dims:s??[t.length]})}),lt,Ae,ee,Me,Ue=v(()=>{lt=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Ae=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ee=!1,Me=()=>{if(!ee){ee=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,s=typeof Float16Array<"u"&&Float16Array.from;e&&(lt.set("int64",BigInt64Array),Ae.set(BigInt64Array,"int64")),t&&(lt.set("uint64",BigUint64Array),Ae.set(BigUint64Array,"uint64")),s?(lt.set("float16",Float16Array),Ae.set(Float16Array,"float16")):lt.set("float16",Uint16Array)}}}),xe,dt,de=v(()=>{ot(),xe=e=>{let t=1;for(let s=0;s<e.length;s++){let o=e[s];if(typeof o!="number"||!Number.isSafeInteger(o))throw new TypeError(`dims[${s}] must be an integer, got: ${o}`);if(o<0)throw new RangeError(`dims[${s}] must be a non-negative integer, got: ${o}`);t*=o}return t},dt=(e,t)=>{switch(e.location){case"cpu":return new rt(e.type,e.data,t);case"cpu-pinned":return new rt({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new rt({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new rt({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new rt({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),rt,ot=v(()=>{Ie(),wt(),Ue(),de(),rt=class{constructor(e,t,s){Me();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=lt.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint64"&&o!=="int8"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,p;if(typeof e=="string")if(o=e,p=s,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{let g=lt.get(e);if(g===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&g===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${g.name} as data.`);e==="uint64"||e==="int64"?a=g.from(t,BigInt):a=g.from(t)}else if(t instanceof g)a=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${o} tensor's data must be type of ${g}`)}else if(p=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let g=typeof e[0];if(g==="string")o="string",a=e;else if(g==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${g}.`)}else if(e instanceof Uint8ClampedArray)o="uint8",a=Uint8Array.from(e);else{let g=Ae.get(e.constructor);if(g===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=g,a=e}if(p===void 0)p=[a.length];else if(!Array.isArray(p))throw new TypeError("A tensor's dims must be a number array");i=p,this.cpuData=a,this.dataLocation="cpu"}let d=xe(i);if(this.cpuData&&d!==this.cpuData.length&&!((o==="uint4"||o==="int4")&&Math.ceil(d/2)===this.cpuData.length))throw new Error(`Tensor's size(${d}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=d}static async fromImage(e,t){return Be(e,t)}static fromTexture(e,t){return ve(e,t)}static fromGpuBuffer(e,t){return Ge(e,t)}static fromMLTensor(e,t){return He(e,t)}static fromPinnedBuffer(e,t,s){return Ve(e,t,s)}toDataURL(e){return _e(this,e)}toImageData(e){return ze(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return dt(this,e)}}}),we,Oe=v(()=>{ot(),we=rt}),it,at,nt,st,yt=v(()=>{S(),it=(e,t)=>{(typeof T.trace>"u"?!T.wasm.trace:!T.trace)||console.timeStamp(`${e}::ORT::${t}`)},at=(e,t)=>{var i;let s=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],o=!1;for(let d=0;d<s.length;d++){if(o&&!s[d].includes("TRACE_FUNC")){let a=`FUNC_${e}::${s[d].trim().split(" ")[1]}`;t&&(a+=`::${t}`),it("CPU",a);return}s[d].includes("TRACE_FUNC")&&(o=!0)}},nt=e=>{(typeof T.trace>"u"?!T.wasm.trace:!T.trace)||at("BEGIN",e)},st=e=>{(typeof T.trace>"u"?!T.wasm.trace:!T.trace)||at("END",e)}}),$t,At=v(()=>{Y(),Oe(),yt(),$t=class wf{constructor(t){this.handler=t}async run(t,s,o){nt();let i={},d={};if(typeof t!="object"||t===null||t instanceof we||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof s=="object"){if(s===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(s instanceof we)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(s)){if(s.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let w of s){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);i[w]=null}if(typeof o=="object"&&o!==null)d=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,F=Object.getOwnPropertyNames(s);for(let D of this.outputNames)if(F.indexOf(D)!==-1){let m=s[D];(m===null||m instanceof we)&&(w=!0,a=!1,i[D]=m)}if(w){if(typeof o=="object"&&o!==null)d=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else d=s}}else if(typeof s<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of this.inputNames)if(typeof t[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(a)for(let w of this.outputNames)i[w]=null;let p=await this.handler.run(t,i,d),g={};for(let w in p)if(Object.hasOwnProperty.call(p,w)){let F=p[w];F instanceof we?g[w]=F:g[w]=new we(F.type,F.data,F.dims)}return st(),g}async release(){return this.handler.dispose()}static async create(t,s,o,i){nt();let d,a={};if(typeof t=="string"){if(d=t,typeof s=="object"&&s!==null)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(d=t,typeof s=="object"&&s!==null)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let F=t,D=0,m=t.byteLength;if(typeof s=="object"&&s!==null)a=s;else if(typeof s=="number"){if(D=s,!Number.isSafeInteger(D))throw new RangeError("'byteOffset' must be an integer.");if(D<0||D>=F.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${F.byteLength}).`);if(m=t.byteLength-D,typeof o=="number"){if(m=o,!Number.isSafeInteger(m))throw new RangeError("'byteLength' must be an integer.");if(m<=0||D+m>F.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${F.byteLength-D}].`);if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof o<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof s<"u")throw new TypeError("'options' must be an object.");d=new Uint8Array(F,D,m)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[p,g]=await me(a),w=await p.createInferenceSessionHandler(d,g);return st(),new wf(w)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),vt,Dt=v(()=>{At(),vt=$t}),G=v(()=>{}),pe=v(()=>{}),te=v(()=>{}),Te=v(()=>{}),We={};k(We,{InferenceSession:()=>vt,TRACE:()=>it,TRACE_FUNC_BEGIN:()=>nt,TRACE_FUNC_END:()=>st,Tensor:()=>we,env:()=>U,registerBackend:()=>re});var tt=v(()=>{q(),ge(),Dt(),Oe(),G(),pe(),yt(),te(),Te()}),ut=v(()=>{}),Et={};k(Et,{default:()=>Ht});var Ot,Vt,Ht,Jt=v(()=>{var e;zp(),Ct(),u(),Ot="ort-wasm-proxy-worker",Vt=((e=globalThis.self)==null?void 0:e.name)===Ot,Vt&&(self.onmessage=t=>{let{type:s,in:o}=t.data;try{switch(s){case"init-wasm":be(o.wasm).then(()=>{so(o).then(()=>{postMessage({type:s})},i=>{postMessage({type:s,err:i})})},i=>{postMessage({type:s,err:i})});break;case"init-ep":{let{epName:i,env:d}=o;No(d,i).then(()=>{postMessage({type:s})},a=>{postMessage({type:s,err:a})});break}case"copy-from":{let{buffer:i}=o,d=Vn(i);postMessage({type:s,out:d});break}case"create":{let{model:i,options:d}=o;Dd(i,d).then(a=>{postMessage({type:s,out:a})},a=>{postMessage({type:s,err:a})});break}case"release":Ld(o),postMessage({type:s});break;case"run":{let{sessionId:i,inputIndices:d,inputs:a,outputIndices:p,options:g}=o;vn(i,d,a,p,new Array(p.length).fill(null),g).then(w=>{w.some(F=>F[3]!=="cpu")?postMessage({type:s,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:s,out:w},ep([...a,...w]))},w=>{postMessage({type:s,err:w})});break}case"end-profiling":Zr(o),postMessage({type:s});break;default:}}catch(i){postMessage({type:s,err:i})}}),Ht=Vt?null:t=>new Worker(t??_r,{type:"module",name:Ot})}),$s={};k($s,{default:()=>pr});var zs,tr,pr,zr=v(()=>{var e;tr=(zs=self.location.href,async function(t={}){function s(){return jt.buffer!=hs.buffer&&lr(),hs}function o(){return jt.buffer!=hs.buffer&&lr(),bs}function i(){return jt.buffer!=hs.buffer&&lr(),Ks}function d(){return jt.buffer!=hs.buffer&&lr(),Pt}function a(){return jt.buffer!=hs.buffer&&lr(),Xt}function p(){return jt.buffer!=hs.buffer&&lr(),Vs}function g(){return jt.buffer!=hs.buffer&&lr(),Tr}function w(){return jt.buffer!=hs.buffer&&lr(),Dn}var F,D,m=Object.assign({},t),H=new Promise((h,M)=>{F=h,D=M}),Q=typeof window=="object",Z=typeof importScripts=="function",ue=Z&&self.name=="em-pthread";m.mountExternalData=(h,M)=>{h.startsWith("./")&&(h=h.substring(2)),(m.Fb||(m.Fb=new Map)).set(h,M)},m.unmountExternalData=()=>{delete m.Fb};var he=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let le=()=>{let h=(A,W,oe)=>(...$e)=>{let ft=Bn,xt=W==null?void 0:W();$e=A(...$e);let Nt=W==null?void 0:W();return xt!==Nt&&(A=Nt,oe(xt),W=oe=null),Bn!=ft?new Promise((Yt,ms)=>{Mp={resolve:Yt,reject:ms}}):$e},M=A=>async(...W)=>{var oe;try{if(m.Gb)throw Error("Session already started");let $e=m.Gb={hc:W[0],errors:[]},ft=await A(...W);if(m.Gb!==$e)throw Error("Session mismatch");(oe=m.Hb)==null||oe.flush();let xt=$e.errors;if(0<xt.length){let Nt=await Promise.all(xt);if(Nt=Nt.filter(Yt=>Yt),0<Nt.length)throw Error(Nt.join(`
`))}return ft}finally{m.Gb=null}};m._OrtCreateSession=h(m._OrtCreateSession,()=>m._OrtCreateSession,A=>m._OrtCreateSession=A),m._OrtRun=M(h(m._OrtRun,()=>m._OrtRun,A=>m._OrtRun=A)),m._OrtRunWithBinding=M(h(m._OrtRunWithBinding,()=>m._OrtRunWithBinding,A=>m._OrtRunWithBinding=A)),m._OrtBindInput=h(m._OrtBindInput,()=>m._OrtBindInput,A=>m._OrtBindInput=A),le=void 0};m.jsepInit=(h,M)=>{if(le==null||le(),h==="webgpu"){[m.Hb,m.Vb,m.Zb,m.Ob,m.Yb,m.kb,m.$b,m.cc,m.Wb,m.Xb,m.ac]=M;let A=m.Hb;m.jsepRegisterBuffer=(W,oe,$e,ft)=>A.registerBuffer(W,oe,$e,ft),m.jsepGetBuffer=W=>A.getBuffer(W),m.jsepCreateDownloader=(W,oe,$e)=>A.createDownloader(W,oe,$e),m.jsepOnCreateSession=W=>{A.onCreateSession(W)},m.jsepOnReleaseSession=W=>{A.onReleaseSession(W)},m.jsepOnRunStart=W=>A.onRunStart(W),m.dc=(W,oe)=>{A.upload(W,oe)}}else if(h==="webnn"){[m.Hb,m.bc,m.Pb,m.jsepEnsureTensor,m.ec,m.jsepDownloadTensor]=M,m.jsepReleaseTensorId=m.Pb;let A=m.Hb;m.jsepOnRunStart=W=>A.onRunStart(W),m.jsepRegisterMLContext=(W,oe)=>{A.registerMLContext(W,oe)},m.jsepOnReleaseSession=W=>{A.onReleaseSession(W)},m.jsepCreateMLTensorDownloader=(W,oe)=>A.createMLTensorDownloader(W,oe),m.jsepRegisterMLTensor=(W,oe,$e)=>A.registerMLTensor(W,oe,$e),m.jsepCreateMLContext=W=>A.createMLContext(W),m.jsepRegisterMLConstant=(W,oe,$e,ft,xt)=>A.registerMLConstant(W,oe,$e,ft,xt,m.Fb)}};var Pe,Ee,De=Object.assign({},m),Qe=(h,M)=>{throw M},Je="";(Q||Z)&&(Z?Je=self.location.href:typeof document<"u"&&document.currentScript&&(Je=document.currentScript.src),zs&&(Je=zs),Je=Je.startsWith("blob:")?"":Je.substr(0,Je.replace(/[?#].*/,"").lastIndexOf("/")+1),Z&&(Ee=h=>{var M=new XMLHttpRequest;return M.open("GET",h,!1),M.responseType="arraybuffer",M.send(null),new Uint8Array(M.response)}),Pe=(h,M,A)=>{var W=new XMLHttpRequest;W.open("GET",h,!0),W.responseType="arraybuffer",W.onload=()=>{W.status==200||W.status==0&&W.response?M(W.response):A()},W.onerror=A,W.send(null)});var gt,It=console.log.bind(console),Qt=console.error.bind(console),Ms=It,ls=Qt;if(Object.assign(m,De),De=null,ue){let h=function(M){try{var A=M.data,W=A.cmd;if(W==="load"){let oe=[];self.onmessage=$e=>oe.push($e),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let $e of oe)h($e);self.onmessage=h};for(let $e of A.handlers)m[$e]&&!m[$e].proxy||(m[$e]=(...ft)=>{postMessage({Nb:"callHandler",pc:$e,args:ft})},$e=="print"&&(Ms=m[$e]),$e=="printErr"&&(ls=m[$e]));jt=A.wasmMemory,lr(),ss(A.wasmModule)}else if(W==="run"){xp(A.pthread_ptr,0,0,1,0,0),wp(A.pthread_ptr),Vf(),am(),ks||(nf(),ks=!0);try{Uf(A.start_routine,A.arg)}catch(oe){if(oe!="unwind")throw oe}}else W==="cancel"?Va()&&Kh(-1):A.target!=="setimmediate"&&(W==="checkMailbox"?ks&&Lh():W&&(ls(`worker: received unknown command ${W}`),ls(A)))}catch(oe){throw of(),oe}};var ss,ks=!1;ls=function(...M){M=M.join(" "),console.error(M)},self.alert=function(...M){postMessage({Nb:"alert",text:M.join(" "),rc:Va()})},m.instantiateWasm=(M,A)=>new Promise(W=>{ss=oe=>{oe=new WebAssembly.Instance(oe,sm()),A(oe),W()}}),self.onunhandledrejection=M=>{throw M.reason||M},self.onmessage=h}m.wasmBinary&&(gt=m.wasmBinary);var jt,ys,Ns,hs,bs,Ks,Pt,Xt,Vs,Tr,$r,fn,Dn,_n=!1;function lr(){var h=jt.buffer;m.HEAP8=hs=new Int8Array(h),m.HEAP16=Ks=new Int16Array(h),m.HEAPU8=bs=new Uint8Array(h),m.HEAPU16=Pt=new Uint16Array(h),m.HEAP32=Xt=new Int32Array(h),m.HEAPU32=Vs=new Uint32Array(h),m.HEAPF32=Tr=new Float32Array(h),m.HEAPF64=Dn=new Float64Array(h),m.HEAP64=$r=new BigInt64Array(h),m.HEAPU64=fn=new BigUint64Array(h)}if(!ue){if(!((jt=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof he))throw ls("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");lr()}var Dr=[],Un=[],op=[],Wo=0,jd=null;function Yp(){if(--Wo==0&&jd){var h=jd;jd=null,h()}}function no(h){throw ls(h="Aborted("+h+")"),_n=!0,Ns=1,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),D(h),h}var ip,Jp=h=>h.startsWith("data:application/octet-stream;base64,"),Zp=h=>h.startsWith("file://");function em(h){if(h==ip&&gt)return new Uint8Array(gt);if(Ee)return Ee(h);throw"both async and sync fetching of the wasm failed"}function tm(h,M,A){return function(W){if(!gt&&(Q||Z)){if(typeof fetch=="function"&&!Zp(W))return fetch(W,{credentials:"same-origin"}).then(oe=>{if(!oe.ok)throw`failed to load wasm binary file at '${W}'`;return oe.arrayBuffer()}).catch(()=>em(W));if(Pe)return new Promise((oe,$e)=>{Pe(W,ft=>oe(new Uint8Array(ft)),$e)})}return Promise.resolve().then(()=>em(W))}(h).then(W=>WebAssembly.instantiate(W,M)).then(A,W=>{ls(`failed to asynchronously prepare wasm: ${W}`),no(W)})}function sm(){return{a:{O:Nf,Aa:jf,b:Gf,aa:dm,B:mm,qa:fm,Y:gm,_:wm,ra:ym,oa:Mm,ha:bm,na:vm,L:Tm,Z:xm,W:Em,pa:Pm,X:Cm,va:Kf,F:qf,Q:Hf,P:Xf,E:Jf,u:Zf,q:e_,G:t_,A:l_,R:u_,ua:c_,ka:d_,U:h_,ba:p_,H:m_,ja:wp,ta:f_,t:__,Ba:g_,x:M_,o:b_,m:T_,c:_p,n:x_,k:C_,w:k_,p:S_,f:$_,s:I_,l:A_,e:O_,j:F_,i:D_,g:L_,d:z_,ea:B_,fa:R_,ga:j_,ca:Nm,da:Vm,T:N_,h:V_,D:U_,I:W_,M:G_,y:K_,sa:q_,V:H_,v:Wm,z:Q_,N:X_,S:Y_,za:J_,ya:Z_,la:qm,ma:Hm,$:dp,C:Qm,K:Xm,ia:Ym,J:Jm,a:jt,xa:cp,wa:tf,r:sg}}}var ap={916868:(h,M,A,W,oe)=>{if(m===void 0||!m.Fb)return 1;if((h=Ir(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=m.Fb.get(h)))return 2;if(M=Number(M>>>0),A=Number(A>>>0),W=Number(W>>>0),M+A>h.byteLength)return 3;try{let $e=h.subarray(M,M+A);switch(oe){case 0:o().set($e,W>>>0);break;case 1:m.dc(W,$e);break;default:return 4}return 0}catch{return 4}},917583:(h,M,A)=>{m.ec(h,o().subarray(M>>>0,M+A>>>0))},917646:()=>m.bc(),917687:h=>{m.Pb(h)},917723:()=>{m.Wb()},917754:()=>{m.Xb()},917783:()=>{m.ac()},917808:h=>m.Vb(h),917841:h=>m.Zb(h),917873:(h,M,A)=>{m.Ob(Number(h),Number(M),Number(A),!0)},917936:(h,M,A)=>{m.Ob(Number(h),Number(M),Number(A))},917993:()=>typeof wasmOffsetConverter<"u",918050:h=>{m.kb("Abs",h,void 0)},918101:h=>{m.kb("Neg",h,void 0)},918152:h=>{m.kb("Floor",h,void 0)},918205:h=>{m.kb("Ceil",h,void 0)},918257:h=>{m.kb("Reciprocal",h,void 0)},918315:h=>{m.kb("Sqrt",h,void 0)},918367:h=>{m.kb("Exp",h,void 0)},918418:h=>{m.kb("Erf",h,void 0)},918469:h=>{m.kb("Sigmoid",h,void 0)},918524:(h,M,A)=>{m.kb("HardSigmoid",h,{alpha:M,beta:A})},918603:h=>{m.kb("Log",h,void 0)},918654:h=>{m.kb("Sin",h,void 0)},918705:h=>{m.kb("Cos",h,void 0)},918756:h=>{m.kb("Tan",h,void 0)},918807:h=>{m.kb("Asin",h,void 0)},918859:h=>{m.kb("Acos",h,void 0)},918911:h=>{m.kb("Atan",h,void 0)},918963:h=>{m.kb("Sinh",h,void 0)},919015:h=>{m.kb("Cosh",h,void 0)},919067:h=>{m.kb("Asinh",h,void 0)},919120:h=>{m.kb("Acosh",h,void 0)},919173:h=>{m.kb("Atanh",h,void 0)},919226:h=>{m.kb("Tanh",h,void 0)},919278:h=>{m.kb("Not",h,void 0)},919329:(h,M,A)=>{m.kb("Clip",h,{min:M,max:A})},919398:h=>{m.kb("Clip",h,void 0)},919450:(h,M)=>{m.kb("Elu",h,{alpha:M})},919508:h=>{m.kb("Gelu",h,void 0)},919560:h=>{m.kb("Relu",h,void 0)},919612:(h,M)=>{m.kb("LeakyRelu",h,{alpha:M})},919676:(h,M)=>{m.kb("ThresholdedRelu",h,{alpha:M})},919746:(h,M)=>{m.kb("Cast",h,{to:M})},919804:h=>{m.kb("Add",h,void 0)},919855:h=>{m.kb("Sub",h,void 0)},919906:h=>{m.kb("Mul",h,void 0)},919957:h=>{m.kb("Div",h,void 0)},920008:h=>{m.kb("Pow",h,void 0)},920059:h=>{m.kb("Equal",h,void 0)},920112:h=>{m.kb("Greater",h,void 0)},920167:h=>{m.kb("GreaterOrEqual",h,void 0)},920229:h=>{m.kb("Less",h,void 0)},920281:h=>{m.kb("LessOrEqual",h,void 0)},920340:(h,M,A,W,oe)=>{m.kb("ReduceMean",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},920515:(h,M,A,W,oe)=>{m.kb("ReduceMax",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},920689:(h,M,A,W,oe)=>{m.kb("ReduceMin",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},920863:(h,M,A,W,oe)=>{m.kb("ReduceProd",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},921038:(h,M,A,W,oe)=>{m.kb("ReduceSum",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},921212:(h,M,A,W,oe)=>{m.kb("ReduceL1",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},921385:(h,M,A,W,oe)=>{m.kb("ReduceL2",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},921558:(h,M,A,W,oe)=>{m.kb("ReduceLogSum",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},921735:(h,M,A,W,oe)=>{m.kb("ReduceSumSquare",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},921915:(h,M,A,W,oe)=>{m.kb("ReduceLogSumExp",h,{keepDims:!!M,noopWithEmptyAxes:!!A,axes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},922095:h=>{m.kb("Where",h,void 0)},922148:(h,M,A)=>{m.kb("Transpose",h,{perm:M?Array.from(a().subarray(Number(M)>>>0,Number(A)>>>0)):[]})},922272:(h,M,A,W)=>{m.kb("DepthToSpace",h,{blocksize:M,mode:Ir(A),format:W?"NHWC":"NCHW"})},922405:(h,M,A,W)=>{m.kb("DepthToSpace",h,{blocksize:M,mode:Ir(A),format:W?"NHWC":"NCHW"})},922538:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct,Ls)=>{m.kb("ConvTranspose",h,{format:Nt?"NHWC":"NCHW",autoPad:M,dilations:[A],group:W,kernelShape:[oe],pads:[$e,ft],strides:[xt],wIsConst:()=>!!s()[Yt>>>0],outputPadding:ms?Array.from(a().subarray(Number(ms)>>>0,Number(Us)>>>0)):[],outputShape:er?Array.from(a().subarray(Number(er)>>>0,Number(ct)>>>0)):[],activation:Ir(Ls)})},922971:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct)=>{m.kb("ConvTranspose",h,{format:xt?"NHWC":"NCHW",autoPad:M,dilations:Array.from(a().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:W,kernelShape:Array.from(a().subarray(Number(oe)>>>0,2+(Number(oe)>>>0)>>>0)),pads:Array.from(a().subarray(Number($e)>>>0,4+(Number($e)>>>0)>>>0)),strides:Array.from(a().subarray(Number(ft)>>>0,2+(Number(ft)>>>0)>>>0)),wIsConst:()=>!!s()[Nt>>>0],outputPadding:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],outputShape:Us?Array.from(a().subarray(Number(Us)>>>0,Number(er)>>>0)):[],activation:Ir(ct)})},923632:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct,Ls)=>{m.kb("ConvTranspose",h,{format:Nt?"NHWC":"NCHW",autoPad:M,dilations:[A],group:W,kernelShape:[oe],pads:[$e,ft],strides:[xt],wIsConst:()=>!!s()[Yt>>>0],outputPadding:ms?Array.from(a().subarray(Number(ms)>>>0,Number(Us)>>>0)):[],outputShape:er?Array.from(a().subarray(Number(er)>>>0,Number(ct)>>>0)):[],activation:Ir(Ls)})},924065:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct)=>{m.kb("ConvTranspose",h,{format:xt?"NHWC":"NCHW",autoPad:M,dilations:Array.from(a().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:W,kernelShape:Array.from(a().subarray(Number(oe)>>>0,2+(Number(oe)>>>0)>>>0)),pads:Array.from(a().subarray(Number($e)>>>0,4+(Number($e)>>>0)>>>0)),strides:Array.from(a().subarray(Number(ft)>>>0,2+(Number(ft)>>>0)>>>0)),wIsConst:()=>!!s()[Nt>>>0],outputPadding:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],outputShape:Us?Array.from(a().subarray(Number(Us)>>>0,Number(er)>>>0)):[],activation:Ir(ct)})},924726:(h,M)=>{m.kb("GlobalAveragePool",h,{format:M?"NHWC":"NCHW"})},924817:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct)=>{m.kb("AveragePool",h,{format:ct?"NHWC":"NCHW",auto_pad:M,ceil_mode:A,count_include_pad:W,storage_order:oe,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ft)>>>0)):[],kernel_shape:xt?Array.from(a().subarray(Number(xt)>>>0,Number(Nt)>>>0)):[],pads:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],strides:Us?Array.from(a().subarray(Number(Us)>>>0,Number(er)>>>0)):[]})},925296:(h,M)=>{m.kb("GlobalAveragePool",h,{format:M?"NHWC":"NCHW"})},925387:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct)=>{m.kb("AveragePool",h,{format:ct?"NHWC":"NCHW",auto_pad:M,ceil_mode:A,count_include_pad:W,storage_order:oe,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ft)>>>0)):[],kernel_shape:xt?Array.from(a().subarray(Number(xt)>>>0,Number(Nt)>>>0)):[],pads:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],strides:Us?Array.from(a().subarray(Number(Us)>>>0,Number(er)>>>0)):[]})},925866:(h,M)=>{m.kb("GlobalMaxPool",h,{format:M?"NHWC":"NCHW"})},925953:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct)=>{m.kb("MaxPool",h,{format:ct?"NHWC":"NCHW",auto_pad:M,ceil_mode:A,count_include_pad:W,storage_order:oe,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ft)>>>0)):[],kernel_shape:xt?Array.from(a().subarray(Number(xt)>>>0,Number(Nt)>>>0)):[],pads:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],strides:Us?Array.from(a().subarray(Number(Us)>>>0,Number(er)>>>0)):[]})},926428:(h,M)=>{m.kb("GlobalMaxPool",h,{format:M?"NHWC":"NCHW"})},926515:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct)=>{m.kb("MaxPool",h,{format:ct?"NHWC":"NCHW",auto_pad:M,ceil_mode:A,count_include_pad:W,storage_order:oe,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ft)>>>0)):[],kernel_shape:xt?Array.from(a().subarray(Number(xt)>>>0,Number(Nt)>>>0)):[],pads:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],strides:Us?Array.from(a().subarray(Number(Us)>>>0,Number(er)>>>0)):[]})},926990:(h,M,A,W,oe)=>{m.kb("Gemm",h,{alpha:M,beta:A,transA:W,transB:oe})},927094:h=>{m.kb("MatMul",h,void 0)},927148:(h,M,A,W)=>{m.kb("ArgMax",h,{keepDims:!!M,selectLastIndex:!!A,axis:W})},927256:(h,M,A,W)=>{m.kb("ArgMin",h,{keepDims:!!M,selectLastIndex:!!A,axis:W})},927364:(h,M)=>{m.kb("Softmax",h,{axis:M})},927427:(h,M)=>{m.kb("Concat",h,{axis:M})},927487:(h,M,A,W,oe)=>{m.kb("Split",h,{axis:M,numOutputs:A,splitSizes:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},927643:h=>{m.kb("Expand",h,void 0)},927697:(h,M)=>{m.kb("Gather",h,{axis:Number(M)})},927768:(h,M)=>{m.kb("GatherElements",h,{axis:Number(M)})},927847:(h,M)=>{m.kb("GatherND",h,{batch_dims:Number(M)})},927926:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms)=>{m.kb("Resize",h,{antialias:M,axes:A?Array.from(a().subarray(Number(A)>>>0,Number(W)>>>0)):[],coordinateTransformMode:Ir(oe),cubicCoeffA:$e,excludeOutside:ft,extrapolationValue:xt,keepAspectRatioPolicy:Ir(Nt),mode:Ir(Yt),nearestMode:Ir(ms)})},928288:(h,M,A,W,oe,$e,ft)=>{m.kb("Slice",h,{starts:M?Array.from(a().subarray(Number(M)>>>0,Number(A)>>>0)):[],ends:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[],axes:$e?Array.from(a().subarray(Number($e)>>>0,Number(ft)>>>0)):[]})},928552:h=>{m.kb("Tile",h,void 0)},928604:(h,M,A)=>{m.kb("InstanceNormalization",h,{epsilon:M,format:A?"NHWC":"NCHW"})},928718:(h,M,A)=>{m.kb("InstanceNormalization",h,{epsilon:M,format:A?"NHWC":"NCHW"})},928832:h=>{m.kb("Range",h,void 0)},928885:(h,M)=>{m.kb("Einsum",h,{equation:Ir(M)})},928966:(h,M,A,W,oe)=>{m.kb("Pad",h,{mode:M,value:A,pads:W?Array.from(a().subarray(Number(W)>>>0,Number(oe)>>>0)):[]})},929109:(h,M,A,W,oe,$e)=>{m.kb("BatchNormalization",h,{epsilon:M,momentum:A,spatial:!!oe,trainingMode:!!W,format:$e?"NHWC":"NCHW"})},929278:(h,M,A,W,oe,$e)=>{m.kb("BatchNormalization",h,{epsilon:M,momentum:A,spatial:!!oe,trainingMode:!!W,format:$e?"NHWC":"NCHW"})},929447:(h,M,A)=>{m.kb("CumSum",h,{exclusive:Number(M),reverse:Number(A)})},929544:(h,M,A)=>{m.kb("DequantizeLinear",h,{axis:M,blockSize:A})},929634:(h,M,A,W,oe)=>{m.kb("GridSample",h,{align_corners:M,mode:Ir(A),padding_mode:Ir(W),format:oe?"NHWC":"NCHW"})},929804:(h,M,A,W,oe)=>{m.kb("GridSample",h,{align_corners:M,mode:Ir(A),padding_mode:Ir(W),format:oe?"NHWC":"NCHW"})},929974:(h,M,A,W,oe,$e,ft,xt,Nt)=>{m.kb("Attention",h,{numHeads:M,isUnidirectional:A,maskFilterValue:W,scale:oe,doRotary:$e,qkvHiddenSizes:ft?Array.from(a().subarray(Number(xt)>>>0,Number(xt)+ft>>>0)):[],pastPresentShareBuffer:!!Nt})},930246:h=>{m.kb("BiasAdd",h,void 0)},930301:h=>{m.kb("BiasSplitGelu",h,void 0)},930362:h=>{m.kb("FastGelu",h,void 0)},930418:(h,M,A,W,oe,$e,ft,xt,Nt,Yt,ms,Us,er,ct,Ls,xr)=>{m.kb("Conv",h,{format:Us?"NHWC":"NCHW",auto_pad:M,dilations:A?Array.from(a().subarray(Number(A)>>>0,Number(W)>>>0)):[],group:oe,kernel_shape:$e?Array.from(a().subarray(Number($e)>>>0,Number(ft)>>>0)):[],pads:xt?Array.from(a().subarray(Number(xt)>>>0,Number(Nt)>>>0)):[],strides:Yt?Array.from(a().subarray(Number(Yt)>>>0,Number(ms)>>>0)):[],w_is_const:()=>!!s()[Number(er)>>>0],activation:Ir(ct),activation_params:Ls?Array.from(g().subarray(Number(Ls)>>>0,Number(xr)>>>0)):[]})},931002:h=>{m.kb("Gelu",h,void 0)},931054:(h,M,A,W,oe,$e,ft,xt,Nt)=>{m.kb("GroupQueryAttention",h,{numHeads:M,kvNumHeads:A,scale:W,softcap:oe,doRotary:$e,rotaryInterleaved:ft,smoothSoftmax:xt,localWindowSize:Nt})},931271:(h,M,A,W)=>{m.kb("LayerNormalization",h,{axis:M,epsilon:A,simplified:!!W})},931382:(h,M,A,W)=>{m.kb("LayerNormalization",h,{axis:M,epsilon:A,simplified:!!W})},931493:(h,M,A,W,oe,$e)=>{m.kb("MatMulNBits",h,{k:M,n:A,accuracyLevel:W,bits:oe,blockSize:$e})},931620:(h,M,A,W,oe,$e)=>{m.kb("MultiHeadAttention",h,{numHeads:M,isUnidirectional:A,maskFilterValue:W,scale:oe,doRotary:$e})},931779:(h,M)=>{m.kb("QuickGelu",h,{alpha:M})},931843:(h,M,A,W,oe)=>{m.kb("RotaryEmbedding",h,{interleaved:!!M,numHeads:A,rotaryEmbeddingDim:W,scale:oe})},931982:(h,M,A)=>{m.kb("SkipLayerNormalization",h,{epsilon:M,simplified:!!A})},932084:(h,M,A)=>{m.kb("SkipLayerNormalization",h,{epsilon:M,simplified:!!A})},932186:(h,M,A,W)=>{m.kb("GatherBlockQuantized",h,{gatherAxis:M,quantizeAxis:A,blockSize:W})},932307:h=>{m.$b(h)},932341:(h,M)=>m.cc(Number(h),Number(M),m.Gb.hc,m.Gb.errors)};function jf(h,M,A){return Lm(async()=>{await m.Yb(Number(h),Number(M),Number(A))})}function Nf(){return typeof wasmOffsetConverter<"u"}function lp(h){this.name="ExitStatus",this.message=`Program terminated with exit(${h})`,this.status=h}var up=h=>{h.terminate(),h.onmessage=()=>{}},rm=h=>{oo.length==0&&(um(),lm(oo[0]));var M=oo.pop();if(!M)return 6;Ko.push(M),Ln[h.Bb]=M,M.Bb=h.Bb;var A={cmd:"run",start_routine:h.ic,arg:h.Rb,pthread_ptr:h.Bb};return M.postMessage(A,h.nc),0},Go=0,br=(h,M,...A)=>{for(var W=2*A.length,oe=Cp(),$e=Pp(8*W),ft=$e>>>3,xt=0;xt<A.length;xt++){var Nt=A[xt];typeof Nt=="bigint"?($r[ft+2*xt]=1n,$r[ft+2*xt+1]=Nt):($r[ft+2*xt]=0n,w()[ft+2*xt+1>>>0]=Nt)}return h=af(h,0,W,$e,M),qh(oe),h};function cp(h){if(ue)return br(0,1,h);if(Ns=h,!(0<Go)){for(var M of Ko)up(M);for(M of oo)up(M);oo=[],Ko=[],Ln=[],_n=!0}Qe(0,new lp(h))}function nm(h){if(ue)return br(1,0,h);dp(h)}var dp=h=>{if(Ns=h,ue)throw nm(h),"unwind";cp(h)},oo=[],Ko=[],om=[],Ln={},im=h=>{var M=h.Bb;delete Ln[M],oo.push(h),Ko.splice(Ko.indexOf(h),1),h.Bb=0,Ep(M)};function am(){om.forEach(h=>h())}var lm=h=>new Promise(M=>{h.onmessage=oe=>{var $e=(oe=oe.data).cmd;if(oe.targetThread&&oe.targetThread!=Va()){var ft=Ln[oe.targetThread];ft?ft.postMessage(oe,oe.transferList):ls(`Internal error! Worker sent a message "${$e}" to target pthread ${oe.targetThread}, but that thread no longer exists!`)}else $e==="checkMailbox"?Lh():$e==="spawnThread"?rm(oe):$e==="cleanupThread"?im(Ln[oe.thread]):$e==="killThread"?(oe=oe.thread,$e=Ln[oe],delete Ln[oe],up($e),Ep(oe),Ko.splice(Ko.indexOf($e),1),$e.Bb=0):$e==="cancelThread"?Ln[oe.thread].postMessage({cmd:"cancel"}):$e==="loaded"?(h.loaded=!0,M(h)):$e==="alert"?alert(`Thread ${oe.threadId}: ${oe.text}`):oe.target==="setimmediate"?h.postMessage(oe):$e==="callHandler"?m[oe.handler](...oe.args):$e&&ls(`worker sent an unknown command ${$e}`)},h.onerror=oe=>{throw ls(`worker sent an error! ${oe.filename}:${oe.lineno}: ${oe.message}`),oe};var A,W=[];for(A of[])m.hasOwnProperty(A)&&W.push(A);h.postMessage({cmd:"load",handlers:W,wasmMemory:jt,wasmModule:ys})});function um(){var h=new Worker(self.location.href.startsWith("file:")?new URL(r("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),r.b):new URL(self.location.href),{type:"module",workerData:"em-pthread",name:"em-pthread"});oo.push(h)}var Dh=h=>{for(;0<h.length;)h.shift()(m)},Vf=()=>{var h=Va(),M=p()[h+52>>>2>>>0];h=p()[h+56>>>2>>>0],uf(M,M-h),qh(M)},Uf=(h,M)=>{Go=0,h=cf(h,M),0<Go?Ns=h:Kh(h)};class Wf{constructor(M){this.Kb=M-24}}function Gf(h,M,A){var W=new Wf(h>>>=0);throw M>>>=0,A>>>=0,p()[W.Kb+16>>>2>>>0]=0,p()[W.Kb+4>>>2>>>0]=M,p()[W.Kb+8>>>2>>>0]=A,h}function cm(h,M,A,W){return ue?br(2,1,h,M,A,W):dm(h,M,A,W)}function dm(h,M,A,W){if(h>>>=0,M>>>=0,A>>>=0,W>>>=0,he===void 0)return ls("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var oe=[];return ue&&oe.length===0?cm(h,M,A,W):(h={ic:A,Bb:h,Rb:W,nc:oe},ue?(h.Nb="spawnThread",postMessage(h,oe),0):rm(h))}var hm=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,pm=(h,M,A)=>{var W=(M>>>=0)+A;for(A=M;h[A]&&!(A>=W);)++A;if(16<A-M&&h.buffer&&hm)return hm.decode(h.buffer instanceof he?h.slice(M,A):h.subarray(M,A));for(W="";M<A;){var oe=h[M++];if(128&oe){var $e=63&h[M++];if((224&oe)==192)W+=String.fromCharCode((31&oe)<<6|$e);else{var ft=63&h[M++];65536>(oe=(240&oe)==224?(15&oe)<<12|$e<<6|ft:(7&oe)<<18|$e<<12|ft<<6|63&h[M++])?W+=String.fromCharCode(oe):(oe-=65536,W+=String.fromCharCode(55296|oe>>10,56320|1023&oe))}}else W+=String.fromCharCode(oe)}return W},Ir=(h,M)=>(h>>>=0)?pm(o(),h,M):"";function mm(h,M,A){return ue?br(3,1,h,M,A):0}function fm(h,M){if(ue)return br(4,1,h,M)}var hp=h=>{for(var M=0,A=0;A<h.length;++A){var W=h.charCodeAt(A);127>=W?M++:2047>=W?M+=2:55296<=W&&57343>=W?(M+=4,++A):M+=3}return M},_m=(h,M,A,W)=>{if(!(0<W))return 0;var oe=A>>>=0;W=A+W-1;for(var $e=0;$e<h.length;++$e){var ft=h.charCodeAt($e);if(55296<=ft&&57343>=ft&&(ft=65536+((1023&ft)<<10)|1023&h.charCodeAt(++$e)),127>=ft){if(A>=W)break;M[A++>>>0]=ft}else{if(2047>=ft){if(A+1>=W)break;M[A++>>>0]=192|ft>>6}else{if(65535>=ft){if(A+2>=W)break;M[A++>>>0]=224|ft>>12}else{if(A+3>=W)break;M[A++>>>0]=240|ft>>18,M[A++>>>0]=128|ft>>12&63}M[A++>>>0]=128|ft>>6&63}M[A++>>>0]=128|63&ft}}return M[A>>>0]=0,A-oe},ja=(h,M,A)=>_m(h,o(),M,A);function gm(h,M){if(ue)return br(5,1,h,M)}function wm(h,M,A){if(ue)return br(6,1,h,M,A)}function ym(h,M,A){return ue?br(7,1,h,M,A):0}function Mm(h,M){if(ue)return br(8,1,h,M)}function bm(h,M,A){if(ue)return br(9,1,h,M,A)}function vm(h,M,A,W){if(ue)return br(10,1,h,M,A,W)}function Tm(h,M,A,W){if(ue)return br(11,1,h,M,A,W)}function xm(h,M,A,W){if(ue)return br(12,1,h,M,A,W)}function Em(h){if(ue)return br(13,1,h)}function Pm(h,M){if(ue)return br(14,1,h,M)}function Cm(h,M,A){if(ue)return br(15,1,h,M,A)}var km,io,Kf=()=>{no("")},zn=h=>{for(var M="";o()[h>>>0];)M+=km[o()[h++>>>0]];return M},pp={},mp={};function Wn(h,M,A={}){if(!("argPackAdvance"in M))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(W,oe,$e={}){var ft=oe.name;if(!W)throw new io(`type "${ft}" must have a positive integer typeid pointer`);if(mp.hasOwnProperty(W)){if($e.Tb)return;throw new io(`Cannot register type '${ft}' twice`)}mp[W]=oe,pp.hasOwnProperty(W)&&(oe=pp[W],delete pp[W],oe.forEach(xt=>xt()))}(h,M,A)}var Sm=(h,M,A)=>{switch(M){case 1:return A?W=>s()[W>>>0]:W=>o()[W>>>0];case 2:return A?W=>i()[W>>>1>>>0]:W=>d()[W>>>1>>>0];case 4:return A?W=>a()[W>>>2>>>0]:W=>p()[W>>>2>>>0];case 8:return A?W=>$r[W>>>3]:W=>fn[W>>>3];default:throw new TypeError(`invalid integer width (${M}): ${h}`)}};function qf(h,M,A){A>>>=0,Wn(h>>>=0,{name:M=zn(M>>>0),fromWireType:W=>W,toWireType:function(W,oe){if(typeof oe!="bigint"&&typeof oe!="number")throw oe=oe===null?"null":(W=typeof oe)=="object"||W==="array"||W==="function"?oe.toString():""+oe,new TypeError(`Cannot convert "${oe}" to ${this.name}`);return typeof oe=="number"&&(oe=BigInt(oe)),oe},argPackAdvance:ao,readValueFromPointer:Sm(M,A,M.indexOf("u")==-1),Eb:null})}var ao=8;function Hf(h,M,A,W){Wn(h>>>=0,{name:M=zn(M>>>0),fromWireType:function(oe){return!!oe},toWireType:function(oe,$e){return $e?A:W},argPackAdvance:ao,readValueFromPointer:function(oe){return this.fromWireType(o()[oe>>>0])},Eb:null})}var fp=[],Gn=[];function _p(h){9<(h>>>=0)&&--Gn[h+1]==0&&(Gn[h]=void 0,fp.push(h))}var dn=h=>{if(!h)throw new io("Cannot use deleted val. handle = "+h);return Gn[h]},gn=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let M=fp.pop()||Gn.length;return Gn[M]=h,Gn[M+1]=1,M}};function gp(h){return this.fromWireType(p()[h>>>2>>>0])}var Qf={name:"emscripten::val",fromWireType:h=>{var M=dn(h);return _p(h),M},toWireType:(h,M)=>gn(M),argPackAdvance:ao,readValueFromPointer:gp,Eb:null};function Xf(h){return Wn(h>>>0,Qf)}var Yf=(h,M)=>{switch(M){case 4:return function(A){return this.fromWireType(g()[A>>>2>>>0])};case 8:return function(A){return this.fromWireType(w()[A>>>3>>>0])};default:throw new TypeError(`invalid float width (${M}): ${h}`)}};function Jf(h,M,A){A>>>=0,Wn(h>>>=0,{name:M=zn(M>>>0),fromWireType:W=>W,toWireType:(W,oe)=>oe,argPackAdvance:ao,readValueFromPointer:Yf(M,A),Eb:null})}function Zf(h,M,A,W,oe){if(h>>>=0,A>>>=0,M=zn(M>>>0),oe===-1&&(oe=4294967295),oe=xt=>xt,W===0){var $e=32-8*A;oe=xt=>xt<<$e>>>$e}var ft=M.includes("unsigned")?function(xt,Nt){return Nt>>>0}:function(xt,Nt){return Nt};Wn(h,{name:M,fromWireType:oe,toWireType:ft,argPackAdvance:ao,readValueFromPointer:Sm(M,A,W!==0),Eb:null})}function e_(h,M,A){function W($e){var ft=p()[$e>>>2>>>0];return $e=p()[$e+4>>>2>>>0],new oe(s().buffer,$e,ft)}var oe=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][M];Wn(h>>>=0,{name:A=zn(A>>>0),fromWireType:W,argPackAdvance:ao,readValueFromPointer:W},{Tb:!0})}function t_(h,M){h>>>=0;var A=(M=zn(M>>>0))==="std::string";Wn(h,{name:M,fromWireType:function(W){var oe=p()[W>>>2>>>0],$e=W+4;if(A)for(var ft=$e,xt=0;xt<=oe;++xt){var Nt=$e+xt;if(xt==oe||o()[Nt>>>0]==0){if(ft=Ir(ft,Nt-ft),Yt===void 0)var Yt=ft;else Yt+="\0",Yt+=ft;ft=Nt+1}}else{for(Yt=Array(oe),xt=0;xt<oe;++xt)Yt[xt]=String.fromCharCode(o()[$e+xt>>>0]);Yt=Yt.join("")}return Rn(W),Yt},toWireType:function(W,oe){oe instanceof ArrayBuffer&&(oe=new Uint8Array(oe));var $e=typeof oe=="string";if(!($e||oe instanceof Uint8Array||oe instanceof Uint8ClampedArray||oe instanceof Int8Array))throw new io("Cannot pass non-string to std::string");var ft=A&&$e?hp(oe):oe.length,xt=Gh(4+ft+1),Nt=xt+4;if(p()[xt>>>2>>>0]=ft,A&&$e)ja(oe,Nt,ft+1);else if($e)for($e=0;$e<ft;++$e){var Yt=oe.charCodeAt($e);if(255<Yt)throw Rn(Nt),new io("String has UTF-16 code units that do not fit in 8 bits");o()[Nt+$e>>>0]=Yt}else for($e=0;$e<ft;++$e)o()[Nt+$e>>>0]=oe[$e];return W!==null&&W.push(Rn,xt),xt},argPackAdvance:ao,readValueFromPointer:gp,Eb(W){Rn(W)}})}var $m=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,s_=(h,M)=>{for(var A=h>>1,W=A+M/2;!(A>=W)&&d()[A>>>0];)++A;if(32<(A<<=1)-h&&$m)return $m.decode(o().slice(h,A));for(A="",W=0;!(W>=M/2);++W){var oe=i()[h+2*W>>>1>>>0];if(oe==0)break;A+=String.fromCharCode(oe)}return A},r_=(h,M,A)=>{if(A??(A=2147483647),2>A)return 0;var W=M;A=(A-=2)<2*h.length?A/2:h.length;for(var oe=0;oe<A;++oe){var $e=h.charCodeAt(oe);i()[M>>>1>>>0]=$e,M+=2}return i()[M>>>1>>>0]=0,M-W},n_=h=>2*h.length,o_=(h,M)=>{for(var A=0,W="";!(A>=M/4);){var oe=a()[h+4*A>>>2>>>0];if(oe==0)break;++A,65536<=oe?(oe-=65536,W+=String.fromCharCode(55296|oe>>10,56320|1023&oe)):W+=String.fromCharCode(oe)}return W},i_=(h,M,A)=>{if(M>>>=0,A??(A=2147483647),4>A)return 0;var W=M;A=W+A-4;for(var oe=0;oe<h.length;++oe){var $e=h.charCodeAt(oe);if(55296<=$e&&57343>=$e&&($e=65536+((1023&$e)<<10)|1023&h.charCodeAt(++oe)),a()[M>>>2>>>0]=$e,(M+=4)+4>A)break}return a()[M>>>2>>>0]=0,M-W},a_=h=>{for(var M=0,A=0;A<h.length;++A){var W=h.charCodeAt(A);55296<=W&&57343>=W&&++A,M+=4}return M};function l_(h,M,A){if(h>>>=0,M>>>=0,A=zn(A>>>=0),M===2)var W=s_,oe=r_,$e=n_,ft=xt=>d()[xt>>>1>>>0];else M===4&&(W=o_,oe=i_,$e=a_,ft=xt=>p()[xt>>>2>>>0]);Wn(h,{name:A,fromWireType:xt=>{for(var Nt,Yt=p()[xt>>>2>>>0],ms=xt+4,Us=0;Us<=Yt;++Us){var er=xt+4+Us*M;Us!=Yt&&ft(er)!=0||(ms=W(ms,er-ms),Nt===void 0?Nt=ms:(Nt+="\0",Nt+=ms),ms=er+M)}return Rn(xt),Nt},toWireType:(xt,Nt)=>{if(typeof Nt!="string")throw new io(`Cannot pass non-string to C++ string type ${A}`);var Yt=$e(Nt),ms=Gh(4+Yt+M);return p()[ms>>>2>>>0]=Yt/M,oe(Nt,ms+4,Yt+M),xt!==null&&xt.push(Rn,ms),ms},argPackAdvance:ao,readValueFromPointer:gp,Eb(xt){Rn(xt)}})}function u_(h,M){Wn(h>>>=0,{Ub:!0,name:M=zn(M>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var c_=()=>1;function d_(h){xp(h>>>0,!Z,1,!Q,131072,!1),am()}var Im=h=>{if(!_n)try{if(h(),!(0<Go))try{ue?Kh(Ns):dp(Ns)}catch(M){M instanceof lp||M=="unwind"||Qe(0,M)}}catch(M){M instanceof lp||M=="unwind"||Qe(0,M)}};function wp(h){h>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(a(),h>>>2,h).value.then(Lh),h+=128,Atomics.store(a(),h>>>2,1))}var Lh=()=>{var h=Va();h&&(wp(h),Im(lf))};function h_(h,M){(h>>>=0)==M>>>0?setTimeout(Lh):ue?postMessage({targetThread:h,cmd:"checkMailbox"}):(h=Ln[h])&&h.postMessage({cmd:"checkMailbox"})}var yp=[];function p_(h,M,A,W,oe){for(M>>>=0,W/=2,yp.length=W,A=oe>>>0>>>3,oe=0;oe<W;oe++)yp[oe]=$r[A+2*oe]?$r[A+2*oe+1]:w()[A+2*oe+1>>>0];return(M?ap[M]:rg[h])(...yp)}function m_(h){h>>>=0,ue?postMessage({cmd:"cleanupThread",thread:h}):im(Ln[h])}function f_(h){}var zh=(h,M)=>{var A=mp[h];if(A===void 0)throw h=rf(h),A=zn(h),Rn(h),new io(`${M} has unknown type ${A}`);return A},Am=(h,M,A)=>{var W=[];return h=h.toWireType(W,A),W.length&&(p()[M>>>2>>>0]=gn(W)),h};function __(h,M,A){return M>>>=0,A>>>=0,h=dn(h>>>0),M=zh(M,"emval::as"),Am(M,A,h)}function g_(h,M){return M>>>=0,h=dn(h>>>0),(M=zh(M,"emval::as")).toWireType(null,h)}var Bh=h=>{try{h()}catch(M){no(M)}},lo=0,Bn=null,Om=0,Rh=[],Fm={},Dm={},w_=0,Mp=null,y_=[];function Lm(h){return function(M){if(!_n){if(lo===0){var A=!1,W=!1;M((oe=0)=>{if(!_n&&(Om=oe,A=!0,W)){lo=2,Bh(()=>pf(Bn)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),oe=!1;try{var $e=function(){var Nt=a()[Bn+8>>>2>>>0];return Nt=ds[Dm[Nt]],--Go,Nt()}()}catch(Nt){$e=Nt,oe=!0}var ft=!1;if(!Bn){var xt=Mp;xt&&(Mp=null,(oe?xt.reject:xt.resolve)($e),ft=!0)}if(oe&&!ft)throw $e}}),W=!0,A||(lo=1,Bn=function(){var oe=Gh(65548),$e=oe+12;p()[oe>>>2>>>0]=$e,p()[oe+4>>>2>>>0]=$e+65536,$e=Rh[0];var ft=Fm[$e];return ft===void 0&&(ft=w_++,Fm[$e]=ft,Dm[ft]=$e),$e=ft,a()[oe+8>>>2>>>0]=$e,oe}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),Bh(()=>df(Bn)))}else lo===2?(lo=0,Bh(mf),Rn(Bn),Bn=null,y_.forEach(Im)):no(`invalid state: ${lo}`);return Om}}(M=>{h().then(M)})}function M_(h){return h>>>=0,Lm(()=>(h=dn(h)).then(gn))}var jh=[];function b_(h,M,A,W){return A>>>=0,W>>>=0,(h=jh[h>>>0])(null,M=dn(M>>>0),A,W)}var v_={},Nh=h=>{var M=v_[h];return M===void 0?zn(h):M};function T_(h,M,A,W,oe){return A>>>=0,W>>>=0,oe>>>=0,(h=jh[h>>>0])(M=dn(M>>>0),M[A=Nh(A)],W,oe)}var zm=()=>typeof globalThis=="object"?globalThis:Function("return this")();function x_(h){return(h>>>=0)==0?gn(zm()):(h=Nh(h),gn(zm()[h]))}var E_=h=>{var M=jh.length;return jh.push(h),M},P_=(h,M)=>{for(var A=Array(h),W=0;W<h;++W)A[W]=zh(p()[M+4*W>>>2>>>0],"parameter "+W);return A},Bm=(h,M)=>Object.defineProperty(M,"name",{value:h});function C_(h,M,A){var W=(M=P_(h,M>>>0)).shift();h--;var oe=`return function (obj, func, destructorsRef, args) {
`,$e=0,ft=[];A===0&&ft.push("obj");for(var xt=["retType"],Nt=[W],Yt=0;Yt<h;++Yt)ft.push("arg"+Yt),xt.push("argType"+Yt),Nt.push(M[Yt]),oe+=`  var arg${Yt} = argType${Yt}.readValueFromPointer(args${$e?"+"+$e:""});
`,$e+=M[Yt].argPackAdvance;return oe+=`  var rv = ${A===1?"new func":"func.call"}(${ft.join(", ")});
`,W.Ub||(xt.push("emval_returnValue"),Nt.push(Am),oe+=`  return emval_returnValue(retType, destructorsRef, rv);
`),xt.push(oe+`};
`),h=function(ms){var Us=Function;if(!(Us instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Us} which is not a function`);var er=Bm(Us.name||"unknownFunctionName",function(){});return er.prototype=Us.prototype,er=new er,(ms=Us.apply(er,ms))instanceof Object?ms:er}(xt)(...Nt),A=`methodCaller<(${M.map(ms=>ms.name).join(", ")}) => ${W.name}>`,E_(Bm(A,h))}function k_(h){return h=Nh(h>>>0),gn(m[h])}function S_(h,M){return M>>>=0,h=dn(h>>>0),M=dn(M),gn(h[M])}function $_(h){9<(h>>>=0)&&(Gn[h+1]+=1)}function I_(){return gn([])}function A_(h){h=dn(h>>>0);for(var M=Array(h.length),A=0;A<h.length;A++)M[A]=h[A];return gn(M)}function O_(h){return gn(Nh(h>>>0))}function F_(){return gn({})}function D_(h){for(var M=dn(h>>>=0);M.length;){var A=M.pop();M.pop()(A)}_p(h)}function L_(h,M,A){M>>>=0,A>>>=0,h=dn(h>>>0),M=dn(M),A=dn(A),h[M]=A}function z_(h,M){return M>>>=0,h=(h=zh(h>>>0,"_emval_take_value")).readValueFromPointer(M),gn(h)}function B_(h,M){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),M>>>=0,h=new Date(1e3*h),a()[M>>>2>>>0]=h.getUTCSeconds(),a()[M+4>>>2>>>0]=h.getUTCMinutes(),a()[M+8>>>2>>>0]=h.getUTCHours(),a()[M+12>>>2>>>0]=h.getUTCDate(),a()[M+16>>>2>>>0]=h.getUTCMonth(),a()[M+20>>>2>>>0]=h.getUTCFullYear()-1900,a()[M+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[M+28>>>2>>>0]=h}var Na=h=>h%4==0&&(h%100!=0||h%400==0),Rm=[0,31,60,91,121,152,182,213,244,274,305,335],jm=[0,31,59,90,120,151,181,212,243,273,304,334];function R_(h,M){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),M>>>=0,h=new Date(1e3*h),a()[M>>>2>>>0]=h.getSeconds(),a()[M+4>>>2>>>0]=h.getMinutes(),a()[M+8>>>2>>>0]=h.getHours(),a()[M+12>>>2>>>0]=h.getDate(),a()[M+16>>>2>>>0]=h.getMonth(),a()[M+20>>>2>>>0]=h.getFullYear()-1900,a()[M+24>>>2>>>0]=h.getDay();var A=(Na(h.getFullYear())?Rm:jm)[h.getMonth()]+h.getDate()-1|0;a()[M+28>>>2>>>0]=A,a()[M+36>>>2>>>0]=-60*h.getTimezoneOffset(),A=new Date(h.getFullYear(),6,1).getTimezoneOffset();var W=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(A!=W&&h.getTimezoneOffset()==Math.min(W,A)),a()[M+32>>>2>>>0]=h}function j_(h){h>>>=0;var M=new Date(a()[h+20>>>2>>>0]+1900,a()[h+16>>>2>>>0],a()[h+12>>>2>>>0],a()[h+8>>>2>>>0],a()[h+4>>>2>>>0],a()[h>>>2>>>0],0),A=a()[h+32>>>2>>>0],W=M.getTimezoneOffset(),oe=new Date(M.getFullYear(),6,1).getTimezoneOffset(),$e=new Date(M.getFullYear(),0,1).getTimezoneOffset(),ft=Math.min($e,oe);return 0>A?a()[h+32>>>2>>>0]=+(oe!=$e&&ft==W):0<A!=(ft==W)&&(oe=Math.max($e,oe),M.setTime(M.getTime()+6e4*((0<A?ft:oe)-W))),a()[h+24>>>2>>>0]=M.getDay(),A=(Na(M.getFullYear())?Rm:jm)[M.getMonth()]+M.getDate()-1|0,a()[h+28>>>2>>>0]=A,a()[h>>>2>>>0]=M.getSeconds(),a()[h+4>>>2>>>0]=M.getMinutes(),a()[h+8>>>2>>>0]=M.getHours(),a()[h+12>>>2>>>0]=M.getDate(),a()[h+16>>>2>>>0]=M.getMonth(),a()[h+20>>>2>>>0]=M.getYear(),h=M.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function Nm(h,M,A,W,oe,$e,ft){return ue?br(16,1,h,M,A,W,oe,$e,ft):-52}function Vm(h,M,A,W,oe,$e){if(ue)return br(17,1,h,M,A,W,oe,$e)}function N_(h,M,A,W){h>>>=0,M>>>=0,A>>>=0,W>>>=0;var oe=new Date().getFullYear(),$e=new Date(oe,0,1),ft=new Date(oe,6,1);oe=$e.getTimezoneOffset();var xt=ft.getTimezoneOffset(),Nt=Math.max(oe,xt);p()[h>>>2>>>0]=60*Nt,a()[M>>>2>>>0]=+(oe!=xt),$e=(h=Yt=>Yt.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])($e),ft=h(ft),xt<oe?(ja($e,A,17),ja(ft,W,17)):(ja($e,W,17),ja(ft,A,17))}var bp=[],Um=(h,M)=>{bp.length=0;for(var A;A=o()[h++>>>0];){var W=A!=105;M+=(W&=A!=112)&&M%8?4:0,bp.push(A==112?p()[M>>>2>>>0]:A==106?$r[M>>>3]:A==105?a()[M>>>2>>>0]:w()[M>>>3>>>0]),M+=W?8:4}return bp};function V_(h,M,A){return h>>>=0,M=Um(M>>>0,A>>>0),ap[h](...M)}function U_(h,M,A){return h>>>=0,M=Um(M>>>0,A>>>0),ap[h](...M)}var W_=()=>{},G_=()=>Date.now();function K_(h,M){return ls(Ir(h>>>0,M>>>0))}var Wm,q_=()=>{throw Go+=1,"unwind"};function H_(){return 4294901760}Wm=()=>performance.timeOrigin+performance.now();var Q_=()=>navigator.hardwareConcurrency;function X_(){return no("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Y_(h){h>>>=0;var M=o().length;if(h<=M||4294901760<h)return!1;for(var A=1;4>=A;A*=2){var W=M*(1+.2/A);W=Math.min(W,h+100663296);var oe=Math;W=Math.max(h,W);e:{oe=(oe.min.call(oe,4294901760,W+(65536-W%65536)%65536)-jt.buffer.byteLength+65535)/65536;try{jt.grow(oe),lr();var $e=1;break e}catch{}$e=void 0}if($e)return!0}return!1}var Vh=()=>(no("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Nd={},Gm=h=>{h.forEach(M=>{Vh()})};function J_(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),Gm(h),Nd.Qb=Vh(),Nd.fc=h,Nd.Qb}function Z_(h,M,A){if(h>>>=0,M>>>=0,Nd.Qb==h)var W=Nd.fc;else(W=Error().stack.toString().split(`
`))[0]=="Error"&&W.shift(),Gm(W);for(var oe=3;W[oe]&&Vh()!=h;)++oe;for(h=0;h<A&&W[h+oe];++h)a()[M+4*h>>>2>>>0]=Vh();return h}var vp,Tp={},Km=()=>{if(!vp){var h,M={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in Tp)Tp[h]===void 0?delete M[h]:M[h]=Tp[h];var A=[];for(h in M)A.push(`${h}=${M[h]}`);vp=A}return vp};function qm(h,M){if(ue)return br(18,1,h,M);h>>>=0,M>>>=0;var A=0;return Km().forEach((W,oe)=>{var $e=M+A;for(oe=p()[h+4*oe>>>2>>>0]=$e,$e=0;$e<W.length;++$e)s()[oe++>>>0]=W.charCodeAt($e);s()[oe>>>0]=0,A+=W.length+1}),0}function Hm(h,M){if(ue)return br(19,1,h,M);h>>>=0,M>>>=0;var A=Km();p()[h>>>2>>>0]=A.length;var W=0;return A.forEach(oe=>W+=oe.length+1),p()[M>>>2>>>0]=W,0}function Qm(h){return ue?br(20,1,h):52}function Xm(h,M,A,W){return ue?br(21,1,h,M,A,W):52}function Ym(h,M,A,W){return ue?br(22,1,h,M,A,W):70}var eg=[null,[],[]];function Jm(h,M,A,W){if(ue)return br(23,1,h,M,A,W);M>>>=0,A>>>=0,W>>>=0;for(var oe=0,$e=0;$e<A;$e++){var ft=p()[M>>>2>>>0],xt=p()[M+4>>>2>>>0];M+=8;for(var Nt=0;Nt<xt;Nt++){var Yt=o()[ft+Nt>>>0],ms=eg[h];Yt===0||Yt===10?((h===1?Ms:ls)(pm(ms,0)),ms.length=0):ms.push(Yt)}oe+=xt}return p()[W>>>2>>>0]=oe,0}var Zm=[31,29,31,30,31,30,31,31,30,31,30,31],ef=[31,28,31,30,31,30,31,31,30,31,30,31],tg=(h,M)=>{s().set(h,M>>>0)};function tf(h,M,A,W){function oe(ct,Ls,xr){for(ct=typeof ct=="number"?ct.toString():ct||"";ct.length<Ls;)ct=xr[0]+ct;return ct}function $e(ct,Ls){return oe(ct,Ls,"0")}function ft(ct,Ls){function xr(_f){return 0>_f?-1:0<_f?1:0}var qo;return(qo=xr(ct.getFullYear()-Ls.getFullYear()))===0&&(qo=xr(ct.getMonth()-Ls.getMonth()))===0&&(qo=xr(ct.getDate()-Ls.getDate())),qo}function xt(ct){switch(ct.getDay()){case 0:return new Date(ct.getFullYear()-1,11,29);case 1:return ct;case 2:return new Date(ct.getFullYear(),0,3);case 3:return new Date(ct.getFullYear(),0,2);case 4:return new Date(ct.getFullYear(),0,1);case 5:return new Date(ct.getFullYear()-1,11,31);case 6:return new Date(ct.getFullYear()-1,11,30)}}function Nt(ct){var Ls=ct.Cb;for(ct=new Date(new Date(ct.Db+1900,0,1).getTime());0<Ls;){var xr=ct.getMonth(),qo=(Na(ct.getFullYear())?Zm:ef)[xr];if(!(Ls>qo-ct.getDate())){ct.setDate(ct.getDate()+Ls);break}Ls-=qo-ct.getDate()+1,ct.setDate(1),11>xr?ct.setMonth(xr+1):(ct.setMonth(0),ct.setFullYear(ct.getFullYear()+1))}return xr=new Date(ct.getFullYear()+1,0,4),Ls=xt(new Date(ct.getFullYear(),0,4)),xr=xt(xr),0>=ft(Ls,ct)?0>=ft(xr,ct)?ct.getFullYear()+1:ct.getFullYear():ct.getFullYear()-1}h>>>=0,M>>>=0,A>>>=0,W>>>=0;var Yt=p()[W+40>>>2>>>0];for(var ms in W={lc:a()[W>>>2>>>0],kc:a()[W+4>>>2>>>0],Ib:a()[W+8>>>2>>>0],Mb:a()[W+12>>>2>>>0],Jb:a()[W+16>>>2>>>0],Db:a()[W+20>>>2>>>0],vb:a()[W+24>>>2>>>0],Cb:a()[W+28>>>2>>>0],sc:a()[W+32>>>2>>>0],jc:a()[W+36>>>2>>>0],mc:Yt?Ir(Yt):""},A=Ir(A),Yt={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})A=A.replace(new RegExp(ms,"g"),Yt[ms]);var Us="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),er="January February March April May June July August September October November December".split(" ");for(ms in Yt={"%a":ct=>Us[ct.vb].substring(0,3),"%A":ct=>Us[ct.vb],"%b":ct=>er[ct.Jb].substring(0,3),"%B":ct=>er[ct.Jb],"%C":ct=>$e((ct.Db+1900)/100|0,2),"%d":ct=>$e(ct.Mb,2),"%e":ct=>oe(ct.Mb,2," "),"%g":ct=>Nt(ct).toString().substring(2),"%G":Nt,"%H":ct=>$e(ct.Ib,2),"%I":ct=>((ct=ct.Ib)==0?ct=12:12<ct&&(ct-=12),$e(ct,2)),"%j":ct=>{for(var Ls=0,xr=0;xr<=ct.Jb-1;Ls+=(Na(ct.Db+1900)?Zm:ef)[xr++]);return $e(ct.Mb+Ls,3)},"%m":ct=>$e(ct.Jb+1,2),"%M":ct=>$e(ct.kc,2),"%n":()=>`
`,"%p":ct=>0<=ct.Ib&&12>ct.Ib?"AM":"PM","%S":ct=>$e(ct.lc,2),"%t":()=>"	","%u":ct=>ct.vb||7,"%U":ct=>$e(Math.floor((ct.Cb+7-ct.vb)/7),2),"%V":ct=>{var Ls=Math.floor((ct.Cb+7-(ct.vb+6)%7)/7);if(2>=(ct.vb+371-ct.Cb-2)%7&&Ls++,Ls)Ls==53&&((xr=(ct.vb+371-ct.Cb)%7)==4||xr==3&&Na(ct.Db)||(Ls=1));else{Ls=52;var xr=(ct.vb+7-ct.Cb-1)%7;(xr==4||xr==5&&Na(ct.Db%400-1))&&Ls++}return $e(Ls,2)},"%w":ct=>ct.vb,"%W":ct=>$e(Math.floor((ct.Cb+7-(ct.vb+6)%7)/7),2),"%y":ct=>(ct.Db+1900).toString().substring(2),"%Y":ct=>ct.Db+1900,"%z":ct=>{var Ls=0<=(ct=ct.jc);return ct=Math.abs(ct)/60,(Ls?"+":"-")+("0000"+(ct/60*100+ct%60)).slice(-4)},"%Z":ct=>ct.mc,"%%":()=>"%"},A=A.replace(/%%/g,"\0\0"),Yt)A.includes(ms)&&(A=A.replace(new RegExp(ms,"g"),Yt[ms](W)));return ms=function(ct){var Ls=Array(hp(ct)+1);return _m(ct,Ls,0,Ls.length),Ls}(A=A.replace(/\0\0/g,"%")),ms.length>M?0:(tg(ms,h),ms.length-1)}function sg(h,M,A,W){return tf(h>>>0,M>>>0,A>>>0,W>>>0)}ue||function(){for(var h=m.numThreads-1;h--;)um();Dr.unshift(()=>{Wo++,function(M){ue?M():Promise.all(oo.map(lm)).then(M)}(()=>Yp())})}();for(var sf=Array(256),Uh=0;256>Uh;++Uh)sf[Uh]=String.fromCharCode(Uh);km=sf,io=m.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},m.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},Gn.push(0,1,void 0,1,null,1,!0,1,!1,1),m.count_emval_handles=()=>Gn.length/2-5-fp.length;var rg=[cp,nm,cm,mm,fm,gm,wm,ym,Mm,bm,vm,Tm,xm,Em,Pm,Cm,Nm,Vm,qm,Hm,Qm,Xm,Ym,Jm],ds=function(){function h(A,W){return ds=A.exports,ds=function(){var oe=ds,$e={};for(let[ft,xt]of Object.entries(oe))$e[ft]=typeof xt=="function"?(...Nt)=>{Rh.push(ft);try{return xt(...Nt)}finally{_n||(Rh.pop(),Bn&&lo===1&&Rh.length===0&&(lo=0,Go+=1,Bh(hf),typeof Fibers<"u"&&Fibers.tc()))}}:xt;return $e}(),ds=function(){var oe=ds,$e=xt=>Nt=>xt(Nt)>>>0,ft=xt=>()=>xt()>>>0;return(oe=Object.assign({},oe)).Da=$e(oe.Da),oe.gb=ft(oe.gb),oe.ib=$e(oe.ib),oe.emscripten_main_runtime_thread_id=ft(oe.emscripten_main_runtime_thread_id),oe.tb=$e(oe.tb),oe.ub=ft(oe.ub),oe}(),om.push(ds.jb),Un.unshift(ds.Ca),ys=W,Yp(),ds}var M=sm();if(Wo++,m.instantiateWasm)try{return m.instantiateWasm(M,h)}catch(A){ls(`Module.instantiateWasm callback failed with error: ${A}`),D(A)}return ip||(ip=m.locateFile?Jp("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":m.locateFile?m.locateFile("ort-wasm-simd-threaded.jsep.wasm",Je):Je+"ort-wasm-simd-threaded.jsep.wasm":new URL(r("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),r.b).href),function(A,W){var oe=ip;return gt||typeof WebAssembly.instantiateStreaming!="function"||Jp(oe)||Zp(oe)||typeof fetch!="function"?tm(oe,A,W):fetch(oe,{credentials:"same-origin"}).then($e=>WebAssembly.instantiateStreaming($e,A).then(W,function(ft){return ls(`wasm streaming compile failed: ${ft}`),ls("falling back to ArrayBuffer instantiation"),tm(oe,A,W)}))}(M,function(A){h(A.instance,A.module)}).catch(D),{}}(),rf=h=>(rf=ds.Da)(h),nf=()=>(nf=ds.Ea)();m._OrtInit=(h,M)=>(m._OrtInit=ds.Fa)(h,M),m._OrtGetLastError=(h,M)=>(m._OrtGetLastError=ds.Ga)(h,M),m._OrtCreateSessionOptions=(h,M,A,W,oe,$e,ft,xt,Nt,Yt)=>(m._OrtCreateSessionOptions=ds.Ha)(h,M,A,W,oe,$e,ft,xt,Nt,Yt),m._OrtAppendExecutionProvider=(h,M)=>(m._OrtAppendExecutionProvider=ds.Ia)(h,M),m._OrtAddFreeDimensionOverride=(h,M,A)=>(m._OrtAddFreeDimensionOverride=ds.Ja)(h,M,A),m._OrtAddSessionConfigEntry=(h,M,A)=>(m._OrtAddSessionConfigEntry=ds.Ka)(h,M,A),m._OrtReleaseSessionOptions=h=>(m._OrtReleaseSessionOptions=ds.La)(h),m._OrtCreateSession=(h,M,A)=>(m._OrtCreateSession=ds.Ma)(h,M,A),m._OrtReleaseSession=h=>(m._OrtReleaseSession=ds.Na)(h),m._OrtGetInputOutputCount=(h,M,A)=>(m._OrtGetInputOutputCount=ds.Oa)(h,M,A),m._OrtGetInputName=(h,M)=>(m._OrtGetInputName=ds.Pa)(h,M),m._OrtGetOutputName=(h,M)=>(m._OrtGetOutputName=ds.Qa)(h,M),m._OrtFree=h=>(m._OrtFree=ds.Ra)(h),m._OrtCreateTensor=(h,M,A,W,oe,$e)=>(m._OrtCreateTensor=ds.Sa)(h,M,A,W,oe,$e),m._OrtGetTensorData=(h,M,A,W,oe)=>(m._OrtGetTensorData=ds.Ta)(h,M,A,W,oe),m._OrtReleaseTensor=h=>(m._OrtReleaseTensor=ds.Ua)(h),m._OrtCreateRunOptions=(h,M,A,W)=>(m._OrtCreateRunOptions=ds.Va)(h,M,A,W),m._OrtAddRunConfigEntry=(h,M,A)=>(m._OrtAddRunConfigEntry=ds.Wa)(h,M,A),m._OrtReleaseRunOptions=h=>(m._OrtReleaseRunOptions=ds.Xa)(h),m._OrtCreateBinding=h=>(m._OrtCreateBinding=ds.Ya)(h),m._OrtBindInput=(h,M,A)=>(m._OrtBindInput=ds.Za)(h,M,A),m._OrtBindOutput=(h,M,A,W)=>(m._OrtBindOutput=ds._a)(h,M,A,W),m._OrtClearBoundOutputs=h=>(m._OrtClearBoundOutputs=ds.$a)(h),m._OrtReleaseBinding=h=>(m._OrtReleaseBinding=ds.ab)(h),m._OrtRunWithBinding=(h,M,A,W,oe)=>(m._OrtRunWithBinding=ds.bb)(h,M,A,W,oe),m._OrtRun=(h,M,A,W,oe,$e,ft,xt)=>(m._OrtRun=ds.cb)(h,M,A,W,oe,$e,ft,xt),m._OrtEndProfiling=h=>(m._OrtEndProfiling=ds.db)(h),m._JsepOutput=(h,M,A)=>(m._JsepOutput=ds.eb)(h,M,A),m._JsepGetNodeName=h=>(m._JsepGetNodeName=ds.fb)(h);var Wh,Va=()=>(Va=ds.gb)(),Rn=m._free=h=>(Rn=m._free=ds.hb)(h),Gh=m._malloc=h=>(Gh=m._malloc=ds.ib)(h),xp=(h,M,A,W,oe,$e)=>(xp=ds.lb)(h,M,A,W,oe,$e),of=()=>(of=ds.mb)(),af=(h,M,A,W,oe)=>(af=ds.nb)(h,M,A,W,oe),Ep=h=>(Ep=ds.ob)(h),Kh=h=>(Kh=ds.pb)(h),lf=()=>(lf=ds.qb)(),uf=(h,M)=>(uf=ds.rb)(h,M),qh=h=>(qh=ds.sb)(h),Pp=h=>(Pp=ds.tb)(h),Cp=()=>(Cp=ds.ub)(),cf=m.dynCall_ii=(h,M)=>(cf=m.dynCall_ii=ds.wb)(h,M),df=h=>(df=ds.xb)(h),hf=()=>(hf=ds.yb)(),pf=h=>(pf=ds.zb)(h),mf=()=>(mf=ds.Ab)();function ff(){0<Wo||(ue?(F(m),ue||Dh(Un),startWorker(m)):(Dh(Dr),0<Wo||Wh||(Wh=!0,m.calledRun=!0,_n||(ue||Dh(Un),F(m),ue||Dh(op)))))}return m.___start_em_js=932469,m.___stop_em_js=932715,m.stackSave=()=>Cp(),m.stackRestore=h=>qh(h),m.stackAlloc=h=>Pp(h),m.setValue=function(h,M,A="i8"){switch(A.endsWith("*")&&(A="*"),A){case"i1":case"i8":s()[h>>>0]=M;break;case"i16":i()[h>>>1>>>0]=M;break;case"i32":a()[h>>>2>>>0]=M;break;case"i64":$r[h>>>3]=BigInt(M);break;case"float":g()[h>>>2>>>0]=M;break;case"double":w()[h>>>3>>>0]=M;break;case"*":p()[h>>>2>>>0]=M;break;default:no(`invalid type for setValue: ${A}`)}},m.getValue=function(h,M="i8"){switch(M.endsWith("*")&&(M="*"),M){case"i1":case"i8":return s()[h>>>0];case"i16":return i()[h>>>1>>>0];case"i32":return a()[h>>>2>>>0];case"i64":return $r[h>>>3];case"float":return g()[h>>>2>>>0];case"double":return w()[h>>>3>>>0];case"*":return p()[h>>>2>>>0];default:no(`invalid type for getValue: ${M}`)}},m.UTF8ToString=Ir,m.stringToUTF8=ja,m.lengthBytesUTF8=hp,jd=function h(){Wh||ff(),Wh||(jd=h)},ff(),m.PTR_SIZE=4,H}),pr=tr,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&tr()}),en,Qr,_r,qr,ns,xn,Gr,sr,Xr,B,c,l,n,u=v(()=>{ut(),en=typeof location>"u"?void 0:location.origin,Qr=()=>{var e;return(e=self.location.href)!=null&&e.startsWith("file:")?new URL(new URL(r("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),r.b).href,en).href:self.location.href},_r=Qr(),qr=()=>{if(_r&&!_r.startsWith("blob:"))return _r.substring(0,_r.lastIndexOf("/")+1)},ns=(e,t)=>{try{let s=t??_r;return(s?new URL(e,s):new URL(e)).origin===en}catch{return!1}},xn=(e,t)=>{let s=t??_r;try{return(s?new URL(e,s):new URL(e)).href}catch{return}},Gr=(e,t)=>`${t??"./"}${e}`,sr=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Xr=async e=>(await import(e)).default,B=(Jt(),E(Et)).default,c=async()=>{if(!_r)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ns(_r))return[void 0,B()];let e=await sr(_r);return[e,B(e)]},l=(zr(),E($s)).default,n=async(e,t,s)=>{if(!e&&!t&&l&&_r&&ns(_r))return[void 0,l];{let o="ort-wasm-simd-threaded.jsep.mjs",i=e??xn(o,t),d=s&&i&&!ns(i,t),a=d?await sr(i):i??Gr(o,t);return[d?a:void 0,await Xr(a)]}}}),_,O,N,X,ie,je,be,Ze,Ct=v(()=>{u(),O=!1,N=!1,X=!1,ie=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},je=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},be=async e=>{if(O)return Promise.resolve();if(N)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(X)throw new Error("previous call to 'initializeWebAssembly()' failed.");N=!0;let t=e.initTimeout,s=e.numThreads;if(!je())throw new Error("WebAssembly SIMD is not supported in the current environment.");let o=ie();s>1&&!o&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+s+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=s=1);let i=e.wasmPaths,d=typeof i=="string"?i:void 0,a=i==null?void 0:i.mjs,p=(a==null?void 0:a.href)??a,g=i==null?void 0:i.wasm,w=(g==null?void 0:g.href)??g,F=e.wasmBinary,[D,m]=await n(p,d,s>1),H=!1,Q=[];if(t>0&&Q.push(new Promise(Z=>{setTimeout(()=>{H=!0,Z()},t)})),Q.push(new Promise((Z,ue)=>{let he={numThreads:s};if(F)he.wasmBinary=F;else if(w||d)he.locateFile=le=>w??d+le;else if(p&&p.indexOf("blob:")!==0)he.locateFile=le=>new URL(le,p).href;else if(D){let le=qr();le&&(he.locateFile=Pe=>le+Pe)}m(he).then(le=>{N=!1,O=!0,_=le,Z(),D&&URL.revokeObjectURL(D)},le=>{N=!1,X=!0,ue(le)})})),await Promise.race(Q),H)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ze=()=>{if(O&&_)return _;throw new Error("WebAssembly is not initialized yet.")}}),qe,mt,bt,Ce=v(()=>{Ct(),qe=(e,t)=>{let s=Ze(),o=s.lengthBytesUTF8(e)+1,i=s._malloc(o);return s.stringToUTF8(e,i,o),t.push(i),i},mt=(e,t,s,o)=>{if(typeof e=="object"&&e!==null){if(s.has(e))throw new Error("Circular reference in options");s.add(e)}Object.entries(e).forEach(([i,d])=>{let a=t?t+i:i;if(typeof d=="object")mt(d,a+".",s,o);else if(typeof d=="string"||typeof d=="number")o(a,d.toString());else if(typeof d=="boolean")o(a,d?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof d}`)})},bt=e=>{let t=Ze(),s=t.stackSave();try{let o=t.PTR_SIZE,i=t.stackAlloc(2*o);t._OrtGetLastError(i,i+o);let d=Number(t.getValue(i,o===4?"i32":"i64")),a=t.getValue(i+o,"*"),p=a?t.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${d}, ERROR_MESSAGE: ${p}`)}finally{t.stackRestore(s)}}}),St,Kt=v(()=>{Ct(),Ce(),St=e=>{let t=Ze(),s=0,o=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let d=0;return(e==null?void 0:e.tag)!==void 0&&(d=qe(e.tag,o)),s=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,d),s===0&&bt("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&mt(e.extra,"",new WeakSet,(a,p)=>{let g=qe(a,o),w=qe(p,o);t._OrtAddRunConfigEntry(s,g,w)!==0&&bt(`Can't set a run config entry: ${a} - ${p}.`)}),[s,o]}catch(d){throw s!==0&&t._OrtReleaseRunOptions(s),o.forEach(a=>t._free(a)),d}}}),ps,gs,Zs,es,is,qs=v(()=>{Ct(),Ce(),ps=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},gs=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Zs=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(s=>(typeof s=="string"?s:s.name)==="webgpu")&&(e.enableMemPattern=!1)},es=(e,t,s)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o==null?void 0:o.deviceType;if(a){let p=qe("deviceType",s),g=qe(a,s);Ze()._OrtAddSessionConfigEntry(e,p,g)!==0&&bt(`Can't set a session config entry: 'deviceType' - ${a}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a!=null&&a.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${a.preferredLayout}`);let p=qe("preferredLayout",s),g=qe(a.preferredLayout,s);Ze()._OrtAddSessionConfigEntry(e,p,g)!==0&&bt(`Can't set a session config entry: 'preferredLayout' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let d=qe(i,s);Ze()._OrtAppendExecutionProvider(e,d)!==0&&bt(`Can't append execution provider: ${i}.`)}},is=e=>{let t=Ze(),s=0,o=[],i=e||{};Zs(i);try{let d=ps(i.graphOptimizationLevel??"all"),a=gs(i.executionMode??"sequential"),p=typeof i.logId=="string"?qe(i.logId,o):0,g=i.logSeverityLevel??2;if(!Number.isInteger(g)||g<0||g>4)throw new Error(`log serverity level is not valid: ${g}`);let w=i.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let F=typeof i.optimizedModelFilePath=="string"?qe(i.optimizedModelFilePath,o):0;if(s=t._OrtCreateSessionOptions(d,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,p,g,w,F),s===0&&bt("Can't create session options."),i.executionProviders&&es(s,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let D=qe("enableGraphCapture",o),m=qe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(s,D,m)!==0&&bt(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[D,m]of Object.entries(i.freeDimensionOverrides)){if(typeof D!="string")throw new Error(`free dimension override name must be a string: ${D}`);if(typeof m!="number"||!Number.isInteger(m)||m<0)throw new Error(`free dimension override value must be a non-negative integer: ${m}`);let H=qe(D,o);t._OrtAddFreeDimensionOverride(s,H,m)!==0&&bt(`Can't set a free dimension override: ${D} - ${m}.`)}return i.extra!==void 0&&mt(i.extra,"",new WeakSet,(D,m)=>{let H=qe(D,o),Q=qe(m,o);t._OrtAddSessionConfigEntry(s,H,Q)!==0&&bt(`Can't set a session config entry: ${D} - ${m}.`)}),[s,o]}catch(d){throw s!==0&&t._OrtReleaseSessionOptions(s)!==0&&bt("Can't release session options."),o.forEach(a=>t._free(a)),d}}}),Re,Mt,zt,kt,Hs,Os,Qs,Ys,Gt=v(()=>{Re=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Mt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},zt=(e,t)=>{let s=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],o=typeof t=="number"?t:t.reduce((i,d)=>i*d,1);return s>0?Math.ceil(o*s):void 0},kt=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Hs=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Os=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Qs=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Ys=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Ar,or=v(()=>{ut(),Ar=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let s=t.headers.get("Content-Length"),o=s?parseInt(s,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),d;try{d=new ArrayBuffer(o)}catch(p){if(p instanceof RangeError){let g=Math.ceil(o/65536);d=new WebAssembly.Memory({initial:g,maximum:g}).buffer}else throw p}let a=0;for(;;){let{done:p,value:g}=await i.read();if(p)break;let w=g.byteLength;new Uint8Array(d,a,w).set(g),a+=w}return new Uint8Array(d,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Nr,Vr,Ps,mr,vr,Er,cs,Ne=v(()=>{Gt(),Nr=["V","I","W","E","F"],Vr=(e,t)=>{console.log(`[${Nr[e]},${new Date().toISOString()}]${t}`)},vr=(e,t)=>{Ps=e,mr=t},Er=(e,t)=>{let s=Hs(e),o=Hs(Ps);s>=o&&Vr(s,typeof t=="function"?t():t)},cs=(...e)=>{mr&&Er(...e)}}),I,ae=v(()=>{Gt(),I=(e,t)=>new(kt(t))(e)}),ye=v(()=>{}),Fe,Ke,ht,Ft,Rt,Lt,qt,ws,Ws,Bs=v(()=>{Ne(),ye(),Fe=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ke=[],ht=e=>Math.ceil(Number(e)/16)*16,Ft=e=>{for(let t=0;t<Ke.length;t++){let s=Ke[t];if(e<=s)return s}return Math.ceil(e/16)*16},Rt=1,Lt=()=>Rt++,qt=async(e,t,s,o)=>{let i=ht(s),d=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,d,0,i),e.flush(),await d.mapAsync(GPUMapMode.READ);let p=d.getMappedRange();if(o){let g=o();return g.set(new Uint8Array(p,0,s)),g}else return new Uint8Array(p.slice(0,s))}finally{d.destroy()}},ws=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Fe)Ke.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let s=t.buffer,o=t.byteOffset,i=t.byteLength,d=ht(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),g=p.getMappedRange();new Uint8Array(g).set(new Uint8Array(s,o,i)),p.unmap();let w=this.backend.device.createCommandEncoder();w.copyBufferToBuffer(p,0,a.gpuData.buffer,0,d),this.backend.device.queue.submit([w.finish()]),p.destroy(),cs("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let s=this.storageCache.get(e);if(!s)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(t);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(s.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=ht(s.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(s.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,t,s){let o;if(s){if(o=s[0],e===s[1])return cs("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${o}, buffer is the same, skip.`),o;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else o=Lt();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:t}),cs("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),cs("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=Ft(e),o,i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||d){let p=(i?this.freeBuffers:this.freeUniformBuffers).get(s);p?p.length>0?o=p.pop():o=this.backend.device.createBuffer({size:s,usage:t}):o=this.backend.device.createBuffer({size:s,usage:t})}else o=this.backend.device.createBuffer({size:s,usage:t});let a={id:Lt(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(e)}),cs("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=typeof e=="bigint"?Number(e):e,s=this.storageCache.get(t);if(!s){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return cs("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${s.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(s.gpuData.buffer),s.originalSize}async download(e,t){let s=this.storageCache.get(Number(e));if(!s)throw new Error("data does not exist");await qt(this.backend,s.gpuData.buffer,s.originalSize,t)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Fe.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let s=this.freeBuffers.get(e.size)||[];t===void 0||s.length>=t?e.destroy():s.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let s=this.freeUniformBuffers.get(e.size)||[];t===void 0||s.length>=t?e.destroy():s.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(s=>{s.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(cs("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(s=>{s.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Ws=(...e)=>new ws(...e)}),gr,as,Ss=v(()=>{gr=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},as=e=>new gr(e)}),Ur,Pr,et,Br,hn,ur,Or,rs=v(()=>{Ur=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Pr=class{static calcShape(e,t,s=!1){let o=e.length,i=t.length;if(o===0)return t;if(i===0)return e;let d=Math.max(e.length,t.length),a=new Array(d);if(s){if(o<2||i<2)return;let p=Ur.calcMatMulShape([e[o-2],e[o-1]],[t[i-2],t[i-1]]);if(p===void 0)return;[a[d-2],a[d-1]]=p}for(let p=s?3:1;p<=d;p++){let g=o-p<0?1:e[o-p],w=i-p<0?1:t[i-p];if(g!==w&&g>1&&w>1)return;let F=Math.max(g,w);if(g&&w)a[d-p]=Math.max(g,w);else{if(F>1)return;a[d-p]=0}}return a}static isValidBroadcast(e,t){let s=e.length,o=t.length;if(s>o)return!1;for(let i=1;i<=s;i++)if(e[s-i]!==1&&e[s-i]!==t[o-i])return!1;return!0}},et=class Qh{static size(t){return Qh.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,s=4){let o=t.length;if(o===0)return[];let i=new Array(o),d=o-1;for(;d>=0;){if(t[d]%s===0){i[d]=t[d]/s;break}if(s%t[d]!==0)throw new Error("cannot convert shape");i[d]=1,s/=t[d],d--}for(d--;d>=0;d--)i[d]=t[d];return i}static sizeFromDimension(t,s){if(s<0||s>t.length)throw new Error(`invalid dimension of ${s} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Qh.getSizeFromDimensionRange(t,s,t.length)}static sizeToDimension(t,s){if(s<0||s>t.length)throw new Error(`invalid dimension of ${s} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Qh.getSizeFromDimensionRange(t,0,s)}static getSizeFromDimensionRange(t,s,o){let i=1;for(let d=s;d<o;d++){if(t[d]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[d])}return i}static computeStrides(t){let s=t.length;if(s===0)return[];if(s===1)return[1];let o=new Array(s);o[s-1]=1,o[s-2]=t[s-1];for(let i=s-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,s){if(t<-s&&t>=s)throw new Error("unsupported axis for this operation.");return t<0?t+s:t}static normalizeAxes(t,s){return t.map(o=>this.normalizeAxis(o,s??t.length))}static sortBasedOnPerm(t,s){return s?s.map(o=>t[o]):t.slice().reverse()}static padShape(t,s){let o=t.length;return t.map((i,d)=>i+s[d]+s[d+o])}static areEqual(t,s){return t.length!==s.length?!1:t.every((o,i)=>o===s[i])}},Br=class Vd{static adjustPoolAttributes(t,s,o,i,d,a){if(!t&&o.length!==s.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let p=0;p<s.length-2;p++)p>=o.length?o.push(s[p+2]):o[p]=s[p+2];for(let p=0;p<o.length;p++)if(p<i.length){if(i[p]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let p=0;p<o.length;p++)if(p<d.length){if(d[p]<0)throw new Error("dilations should be greater than or equal to 1")}else d.push(1);for(let p=0;p<o.length*2;p++)if(p<a.length){if(a[p]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let p=0;p<o.length;p++){if(o[p]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[p]>=o[p]||a[p+o.length]>=o[p])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,s,o,i,d,a,p){if(p){if(d.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let g=0;g<t.length-2;g++)Vd.adjustPadAndReturnShape(t[g+(a?1:2)],s[g],o[g],i[g],d,g,g+t.length-2,p)}}static computePoolOutputShape(t,s,o,i,d,a,p){if(s.length<=0)throw new Error("input shape must be of size greater than 0");let g=[s[0],s[1]];return Vd.computeShapeHelper(t,s,g,o,i,d,a,p),g}static computeConvOutputShape(t,s,o,i,d,a,p){if(t.length<=0||s.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let g=[t[0],s[0]];return Vd.computeShapeHelper(!1,t,g,o,i,d,a,p),g}static computeShapeHelper(t,s,o,i,d,a,p,g){if(t)for(let w=0;w<s.length-2;w++)o.push(1);else for(let w=0;w<s.length-2;w++)o.push(Vd.adjustPadAndReturnShape(s[w+2],i[w],d[w],a[w],p,w,w+s.length-2,g))}static adjustPadAndReturnShape(t,s,o,i,d,a,p,g){let w=o*(i-1)+1;if(g&&g!=="NOTSET")switch(g){case"VALID":return d[a]=0,d[p]=0,Math.floor((t-w)/s+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let F=((t+s-1)/s-1)*s+i-t;return d[a]=Math.floor(g==="SAME_LOWER"?(F+1)/2:F/2),d[p]=F-d[a],Math.floor((t+F-i)/s+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+d[a]+d[p]-w)/s+1)}},hn=class{static getShapeOfGemmResult(e,t,s,o,i){if(e.length!==2||s.length!==2)throw new Error("shape need to be of size 2");let d,a,p;t?(d=e[1],a=e[0]):(d=e[0],a=e[1]);let g=-1;if(o?(p=s[0],g=1):(p=s[1],g=0),s[g]!==a)throw new Error("dimension mismatch");if(d<=0||p<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Pr.isValidBroadcast(i,[d,p]))throw new Error("gemm: invalid bias shape for broadcast");return[d,p,a]}},ur=-34028234663852886e22,Or=34028234663852886e22}),Kr,tn,Gs,cr,Ut,vs,yr,dr,Cr,Zt,En,pt,ts,Wa,Ho,Ga,Ka,xs=v(()=>{Gt(),rs(),Kr=64,tn=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Gs=(e,t=1)=>{let s=tn(e,t);return typeof s=="string"?s:s[0]},cr=(e,t=1)=>{let s=tn(e,t);return typeof s=="string"?s:s[1]},Ut=(...e)=>{let t=[];return e.forEach(s=>{s.length!==0&&t.push({type:12,data:s},{type:12,data:et.computeStrides(s)})}),t},vs=e=>e%4===0?4:e%2===0?2:1,yr=(e="f32",t,s="0")=>!t||t===1?`${e}(${s})`:`vec${t}<${e}>(${s})`,dr=(e,t,s)=>e==="f32"?s:t===1?`f32(${s})`:`vec${t}<f32>(${s})`,Cr=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Zt=(e,t,s,o)=>e.startsWith("uniforms.")&&s>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:s>1?`${e}[${t}]`:e,En=(e,t,s,o,i)=>{let d=typeof s=="number",a=d?s:s.length,p=[...new Array(a).keys()],g=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,w=tn(t,i),F=typeof w=="string"?w:w[1],D=typeof w=="string"?w:w[0],m={indices:g,value:F,storage:D,tensor:t},H=Pt=>typeof Pt=="string"?Pt:`${Pt}u`,Q={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},Z=d?"uniforms.":"",ue=`${Z}${e}_shape`,he=`${Z}${e}_strides`,le="";for(let Pt=0;Pt<a-1;Pt++)le+=`
    let dim${Pt} = current / ${Zt(he,Pt,a)};
    let rest${Pt} = current % ${Zt(he,Pt,a)};
    indices[${Pt}] = dim${Pt};
    current = rest${Pt};
    `;le+=`indices[${a-1}] = current;`;let Pe=a<2?"":`
  fn o2i_${e}(offset: u32) -> ${m.indices} {
    var indices: ${m.indices};
    var current = offset;
    ${le}
    return indices;
  }`,Ee=Pt=>(Q.offsetToIndices=!0,a<2?Pt:`o2i_${e}(${Pt})`),De=[];if(a>=2)for(let Pt=a-1;Pt>=0;Pt--)De.push(`${Zt(he,Pt,a)} * (indices[${Pt}])`);let Qe=a<2?"":`
  fn i2o_${e}(indices: ${m.indices}) -> u32 {
    return ${De.join("+")};
  }`,Je=Pt=>(Q.indicesToOffset=!0,a<2?Pt:`i2o_${e}(${Pt})`),gt=(...Pt)=>a===0?"0u":`${m.indices}(${Pt.map(H).join(",")})`,It=(Pt,Xt)=>a<2?`${Pt}`:`${Zt(Pt,Xt,a)}`,Qt=(Pt,Xt,Vs)=>a<2?`${Pt}=${Vs};`:`${Zt(Pt,Xt,a)}=${Vs};`,Ms={},ls=(Pt,Xt)=>{Q.broadcastedIndicesToOffset=!0;let Vs=`${Xt.name}broadcastedIndicesTo${e}Offset`;if(Vs in Ms)return`${Vs}(${Pt})`;let Tr=[];for(let $r=a-1;$r>=0;$r--){let fn=Xt.indicesGet("outputIndices",$r+Xt.rank-a);Tr.push(`${It(he,$r)} * (${fn} % ${It(ue,$r)})`)}return Ms[Vs]=`fn ${Vs}(outputIndices: ${Xt.type.indices}) -> u32 {
             return ${Tr.length>0?Tr.join("+"):"0u"};
           }`,`${Vs}(${Pt})`},ss=(Pt,Xt)=>(()=>{if(m.storage===m.value)return`${e}[${Pt}]=${Xt};`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`${e}[${Pt}]=vec2<u32>(u32(${Xt}), select(0u, 0xFFFFFFFFu, ${Xt} < 0));`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`${e}[${Pt}]=vec2<u32>(u32(${Xt}), 0u);`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`${e}[${Pt}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Xt}));`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),ks=Pt=>(()=>{if(m.storage===m.value)return`${e}[${Pt}]`;if(m.storage==="vec2<u32>"&&m.value==="i32")return`i32(${e}[${Pt}].x)`;if(m.storage==="vec2<u32>"&&m.value==="u32")return`u32(${e}[${Pt}].x)`;if(m.storage==="u32"&&m.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${Pt}] & 0xFFu), bool(${e}[${Pt}] & 0xFF00u), bool(${e}[${Pt}] & 0xFF0000u), bool(${e}[${Pt}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${m.storage} and value type ${m.value} yet`)})(),jt=a<2?"":`
  fn get_${e}ByIndices(indices: ${m.indices}) -> ${F} {
    return ${ks(`i2o_${e}(indices)`)};
  }`,ys=a<2?"":(()=>{let Pt=p.map(Vs=>`d${Vs}: u32`).join(", "),Xt=p.map(Vs=>`d${Vs}`).join(", ");return`
  fn get_${e}(${Pt}) -> ${F} {
    return get_${e}ByIndices(${gt(Xt)});
  }`})(),Ns=(...Pt)=>{if(Pt.length!==a)throw new Error(`indices length must be ${a}`);let Xt=Pt.map(H).join(",");return a===0?ks("0u"):a===1?ks(Xt[0]):(Q.get=!0,Q.getByIndices=!0,Q.indicesToOffset=!0,`get_${e}(${Xt})`)},hs=Pt=>a<2?ks(Pt):(Q.getByIndices=!0,Q.indicesToOffset=!0,`get_${e}ByIndices(${Pt})`),bs=a<2?"":`
  fn set_${e}ByIndices(indices: ${m.indices}, value: ${F}) {
    ${ss(`i2o_${e}(indices)`,"value")}
  }`,Ks=a<2?"":(()=>{let Pt=p.map(Vs=>`d${Vs}: u32`).join(", "),Xt=p.map(Vs=>`d${Vs}`).join(", ");return`
  fn set_${e}(${Pt}, value: ${F}) {
    set_${e}ByIndices(${gt(Xt)}, value);
  }`})();return{impl:()=>{let Pt=[],Xt=!1;return Q.offsetToIndices&&(Pt.push(Pe),Xt=!0),Q.indicesToOffset&&(Pt.push(Qe),Xt=!0),Q.broadcastedIndicesToOffset&&(Object.values(Ms).forEach(Vs=>Pt.push(Vs)),Xt=!0),Q.set&&(Pt.push(Ks),Xt=!0),Q.setByIndices&&(Pt.push(bs),Xt=!0),Q.get&&(Pt.push(ys),Xt=!0),Q.getByIndices&&(Pt.push(jt),Xt=!0),!d&&Xt&&Pt.unshift(`const ${ue} = ${m.indices}(${s.join(",")});`,`const ${he} = ${m.indices}(${et.computeStrides(s).join(",")});`),Pt.join(`
`)},type:m,offsetToIndices:Ee,indicesToOffset:Je,broadcastedIndicesToOffset:ls,indices:gt,indicesGet:It,indicesSet:Qt,set:(...Pt)=>{if(Pt.length!==a+1)throw new Error(`indices length must be ${a}`);let Xt=Pt[a];if(typeof Xt!="string")throw new Error("value must be string");let Vs=Pt.slice(0,a).map(H).join(",");return a===0?ss("0u",Xt):a===1?ss(Vs[0],Xt):(Q.set=!0,Q.setByIndices=!0,Q.indicesToOffset=!0,`set_${e}(${Vs}, ${Xt})`)},setByOffset:ss,setByIndices:(Pt,Xt)=>a<2?ss(Pt,Xt):(Q.setByIndices=!0,Q.indicesToOffset=!0,`set_${e}ByIndices(${Pt}, ${Xt});`),get:Ns,getByOffset:ks,getByIndices:hs,usage:o,name:e,strides:he,shape:ue,rank:a}},pt=(e,t,s,o=1)=>En(e,t,s,"input",o),ts=(e,t,s,o=1)=>En(e,t,s,"output",o),Wa=(e,t,s)=>En(e,t,s,"atomicOutput",1),Ho=(e,t,s,o=1)=>En(e,t,s,"internal",o),Ga=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Kr){let t=typeof e=="number"?e:e[0],s=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||s>this.limits.maxComputeWorkgroupSizeY||o>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${s}, ${o}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*s*o>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${s}, ${o}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*s*o}u + local_idx;`;return`@compute @workgroup_size(${t}, ${s}, ${o})
  fn main(${d}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let s=e.usage==="input"?"read":"read_write",o=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${s}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,s=1){return this.uniforms.push({name:e,type:t,length:s}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:s,length:o}of this.uniforms)if(o&&o>4)s==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${s}>, ${Math.ceil(o/8)}>`):e.push(`${t}:array<vec4<${s}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?s:`vec${o}<${s}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Ka=(e,t)=>new Ga(e,t)}),qa,Qo,Xo,Ha,Qa,Yo,Yr,Xa,Jo,wn=v(()=>{Gt(),rs(),Ss(),xs(),qa=(e,t)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(t.length!==0&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},Qo=(e,t)=>t.length!==0?t:[...new Array(e).keys()].reverse(),Xo=(e,t)=>et.sortBasedOnPerm(e,Qo(e.length,t)),Ha=(e,t,s,o)=>{let i=`fn perm(i: ${o.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`;for(let d=0;d<t;++d)i+=`a[${e[d]}]=i[${d}];`;return i+="return a;}"},Qa=(e,t)=>{let s=[],o=[];for(let i=0;i<e.length;++i)e[i]!==1&&s.push(e[i]),e[t[i]]!==1&&o.push(t[i]);return{newShape:s,newPerm:o}},Yo=(e,t)=>{let s=0;for(let o=0;o<e.length;++o)if(t[e[o]]!==1){if(e[o]<s)return!1;s=e[o]}return!0},Yr=(e,t)=>{let s=e.dataType,o=e.dims.length,i=Qo(o,t),d=Xo(e.dims,i),a=e.dims,p=d,g=o<2||Yo(i,e.dims),w;if(g)return w=Q=>{let Z=pt("input",s,a,4),ue=ts("output",s,p,4);return`
  ${Q.registerUniform("output_size","u32").declareVariables(Z,ue)}
  ${Q.mainStart()}
    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let Q=et.size(d);return{outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(Q/64/4)},programUniforms:[{type:12,data:Math.ceil(Q/4)}]}},getShaderSource:w};let{newShape:F,newPerm:D}=Qa(e.dims,i),m=et.areEqual(D,[2,3,1]),H=et.areEqual(D,[3,1,2]);if(F.length===2||m||H){a=m?[F[0],F[1]*F[2]]:H?[F[0]*F[1],F[2]]:F,p=[a[1],a[0]];let Q=16;return w=Z=>{let ue=pt("a",s,a.length),he=ts("output",s,p.length);return`
  ${Z.registerUniform("output_size","u32").declareVariables(ue,he)}
  var<workgroup> tile : array<array<${he.type.value}, ${Q+1}>, ${Q}>;
  ${Z.mainStart([Q,Q,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${Q} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${Q}u + local_id.x;
    let input_row = workgroup_id_x * ${Q}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${ue.getByIndices(`${ue.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${Q}u + local_id.x;
    let output_row = workgroup_id_y * ${Q}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${he.setByIndices(`${he.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let Z=et.size(d);return{outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p[1]/Q),y:Math.ceil(p[0]/Q)},programUniforms:[{type:12,data:Z},...Ut(a,p)]}},getShaderSource:w}}return w=Q=>{let Z=pt("a",s,a.length),ue=ts("output",s,p.length);return`
  ${Q.registerUniform("output_size","u32").declareVariables(Z,ue)}

  ${Ha(i,o,Z,ue)}

  ${Q.mainStart()}
    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${ue.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${ue.setByOffset("global_idx",Z.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let Q=et.size(d);return{outputs:[{dims:d,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(Q/64)},programUniforms:[{type:12,data:Q},...Ut(a,p)]}},getShaderSource:w}},Xa=(e,t)=>{qa(e.inputs,t.perm),e.compute(Yr(e.inputs[0],t.perm))},Jo=e=>as({perm:e.perm})}),ho,Ya,Ja,Za,el,tl,sl,rl,Zo,nl,Jr,Pn,ol,Wd,il,Gd,al,ei,ll,ul,cl,Kd=v(()=>{Gt(),rs(),xs(),fo(),wn(),ho={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Ya={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ja={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Za={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},el=(e,t)=>{let s=[];for(let o=t-e;o<t;++o)s.push(o);return s},tl=(e,t)=>{let s=[],o=e.length;for(let d=0;d<o;d++)t.indexOf(d)===-1&&s.push(e[d]);let i=t.map(d=>e[d]);return[s,i]},sl=(e,t)=>{let s=e.length+t.length,o=[],i=0;for(let d=0;d<s;d++)t.indexOf(d)===-1?o.push(e[i++]):o.push(1);return o},rl=(e,t)=>{for(let s=0;s<e.length;++s)if(e[e.length-s-1]!==t-1-s)return!1;return!0},Zo=(e,t)=>{let s=[];if(!rl(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&s.push(o);e.forEach(o=>s.push(o))}return s},nl=(e,t,s,o,i,d,a)=>{let p=s[0].dims,g=et.size(d),w=et.size(a),F=pt("_A",s[0].dataType,p),D=ts("output",i,d),m=64;g===1&&(m=256);let H=`
          var<workgroup> aBestValues : array<f32, ${m}>;
       `,Q=Z=>`
        ${Z.registerUniform("reduceSize","u32").declareVariables(F,D)}
        ${H}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${Z.mainStart(m)}

          let outputIndex = global_idx / ${m};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Ja[o]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${m}) {
           let candidate = f32(${F.getByOffset("offset + k")});
           bestValue = ${ho[o]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${m}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Ya[o]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${D.setByOffset("outputIndex",`${o==="mean"?`${D.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${D.type.storage}(${Za[o]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${t};${m}`,inputDependencies:["type"]},getShaderSource:Q,getRunData:()=>({outputs:[{dims:d,dataType:i}],dispatchGroup:{x:g},programUniforms:[{type:12,data:w}]})}},Jr=(e,t,s,o)=>{let i=e.inputs.length===1?s:ti(e.inputs,s),d=i.axes;d.length===0&&!i.noopWithEmptyAxes&&(d=e.inputs[0].dims.map((H,Q)=>Q));let a=et.normalizeAxes(d,e.inputs[0].dims.length),p=a,g=e.inputs[0],w=Zo(p,e.inputs[0].dims.length);w.length>0&&(g=e.compute(Yr(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],p=el(p.length,g.dims.length));let[F,D]=tl(g.dims,p),m=F;i.keepDims&&(m=sl(F,a)),e.compute(nl(t,i.cacheKey,[g],o,e.inputs[0].dataType,m,D),{inputs:[g]})},Pn=(e,t)=>{Jr(e,"ReduceMeanShared",t,"mean")},ol=(e,t)=>{Jr(e,"ReduceL1Shared",t,"l1")},Wd=(e,t)=>{Jr(e,"ReduceL2Shared",t,"l2")},il=(e,t)=>{Jr(e,"ReduceLogSumExpShared",t,"logSumExp")},Gd=(e,t)=>{Jr(e,"ReduceMaxShared",t,"max")},al=(e,t)=>{Jr(e,"ReduceMinShared",t,"min")},ei=(e,t)=>{Jr(e,"ReduceProdShared",t,"prod")},ll=(e,t)=>{Jr(e,"ReduceSumShared",t,"sum")},ul=(e,t)=>{Jr(e,"ReduceSumSquareShared",t,"sumSquare")},cl=(e,t)=>{Jr(e,"ReduceLogSumShared",t,"logSum")}}),sn,po,mo,ti,rn,si,dl,hl,ri,pl,ml,ni,fl,_l,oi,nn,gl,ii,wl,yl,ai,Ml,bl,li,vl,Tl,fo=v(()=>{Gt(),rs(),Ss(),xs(),Kd(),sn=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},po=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],mo=(e,t,s,o,i,d,a=!1,p=!1)=>{let g=[],w=s[0].dims,F=w.length,D=et.normalizeAxes(i,F),m=!p&&D.length===0;w.forEach((Z,ue)=>{m||D.indexOf(ue)>=0?a&&g.push(1):g.push(Z)});let H=g.length,Q=et.size(g);return{name:e,shaderCache:t,getShaderSource:Z=>{let ue=[],he=pt("_A",s[0].dataType,F),le=ts("output",d,H),Pe=o(he,le,D),Ee=Pe[2];for(let De=0,Qe=0;De<F;De++)m||D.indexOf(De)>=0?(a&&Qe++,Ee=`for(var j${De}: u32 = 0; j${De} < ${w[De]}; j${De}++) {
                  ${Pe[2].includes("last_index")?`let last_index = j${De};`:""}
                  ${he.indicesSet("input_indices",De,`j${De}`)}
                  ${Ee}
                }`):(ue.push(`${he.indicesSet("input_indices",De,le.indicesGet("output_indices",Qe))};`),Qe++);return`

        ${Z.registerUniform("output_size","u32").declareVariables(he,le)}

        ${Z.mainStart()}
          ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${he.type.indices};
          let output_indices = ${le.offsetToIndices("global_idx")};

          ${ue.join(`
`)}
          ${Pe[0]}       // init ops for reduce max/min
          ${Pe[1]}
          ${Ee}
          ${Pe[3]}
          ${Pe.length===4?le.setByOffset("global_idx","value"):Pe.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:g,dataType:d}],dispatchGroup:{x:Math.ceil(Q/64)},programUniforms:[{type:12,data:Q},...Ut(w,g)]})}},ti=(e,t)=>{let s=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>s.push(Number(o))),as({axes:s,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},rn=(e,t,s,o)=>{let i=e.inputs,d=i.length===1?s:ti(i,s);e.compute(mo(t,{hint:d.cacheKey,inputDependencies:["rank"]},[i[0]],d.noopWithEmptyAxes&&d.axes.length===0?po:o,d.axes,i[0].dataType,d.keepDims,d.noopWithEmptyAxes),{inputs:[0]})},si=(e,t)=>{sn(e.inputs),rn(e,"ReduceLogSum",t,(s,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,"value = log(value);"])},dl=(e,t)=>{sn(e.inputs),rn(e,"ReduceL1",t,(s,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${s.getByIndices("input_indices")});`,""])},hl=(e,t)=>{sn(e.inputs),rn(e,"ReduceL2",t,(s,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},ri=(e,t)=>{sn(e.inputs),rn(e,"ReduceLogSumExp",t,(s,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${s.getByIndices("input_indices")});`,"value = log(value);"])},pl=(e,t)=>{sn(e.inputs),rn(e,"ReduceMax",t,(s,o,i)=>{let d=[];for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&d.push(s.indicesSet("input_indices",a,0));return[`${d.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = max(value, ${s.getByIndices("input_indices")});`,""]})},ml=(e,t)=>{sn(e.inputs),rn(e,"ReduceMean",t,(s,o,i)=>{let d=1;for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(d*=e.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${s.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${d});`]})},ni=(e,t)=>{sn(e.inputs),rn(e,"ReduceMin",t,(s,o,i)=>{let d=[];for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&d.push(`input_indices[${a}] = 0;`);return[`${d.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = min(value, ${s.getByIndices("input_indices")});`,""]})},fl=(e,t)=>{sn(e.inputs),rn(e,"ReduceProd",t,(s,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${s.getByIndices("input_indices")};`,""])},_l=(e,t)=>{sn(e.inputs),rn(e,"ReduceSum",t,(s,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,""])},oi=(e,t)=>{sn(e.inputs),rn(e,"ReduceSumSquare",t,(s,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += t * t;`,""])},nn=(e,t,s)=>{if(t.length===0)return s;let o=1,i=1;for(let d=0;d<t.length;d++)t.indexOf(d)===-1?o*=e[d]:i*=e[d];return i<32&&o>1024},gl=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ml(e,t):Pn(e,t)},ii=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?dl(e,t):ol(e,t)},wl=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?hl(e,t):Wd(e,t)},yl=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ri(e,t):il(e,t)},ai=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?pl(e,t):Gd(e,t)},Ml=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ni(e,t):al(e,t)},bl=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fl(e,t):ei(e,t)},li=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_l(e,t):ll(e,t)},vl=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?oi(e,t):ul(e,t)},Tl=(e,t)=>{nn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?si(e,t):cl(e,t)}}),ui,xl,ci,di,qd=v(()=>{Gt(),Ss(),fo(),ui=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},xl=(e,t)=>{ui(e.inputs);let s=(o,i,d)=>{let a=[];for(let p=0;p<o.rank;p++)(d.indexOf(p)>=0||d.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(mo("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],s,[t.axis],7,t.keepDims),{inputs:[0]})},ci=(e,t)=>{ui(e.inputs);let s=(o,i,d)=>{let a=[];for(let p=0;p<o.rank;p++)(d.indexOf(p)>=0||d.length===0)&&a.push(`input_indices[${p}] = 0;`);return[`${a.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(mo("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],s,[t.axis],7,t.keepDims),{inputs:[0]})},di=e=>as(e)}),hi,_o,El,pi,Pl,Kn,mi,Cl,fi=v(()=>{Gt(),rs(),ye(),xs(),hi=(e,t)=>{let s=e[0],o=e[1],i=e[2],d=e[3],a=e[4],p=e[5];if(a&&p)throw new Error("Attention cannot have both past and attention_bias");if(s.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let g=s.dims[0],w=s.dims[1],F=s.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(o.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(o.dims[0]!==F)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let D=i.dims[0]/3,m=D,H=m;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let Pe of t.qkvHiddenSizes)if(Pe%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");D=t.qkvHiddenSizes[0],m=t.qkvHiddenSizes[1],H=t.qkvHiddenSizes[2]}let Q=w;if(D!==m)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==D+m+H)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let Z=0;if(a){if(m!==H)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(a.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(a.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==g)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==m/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(Z=a.dims[3])}let ue=Q+Z,he=-1,le=0;if(d)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(p){if(p.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(p.dims[0]!==g||p.dims[1]!==t.numHeads||p.dims[2]!==w||p.dims[3]!==ue)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:g,sequenceLength:w,pastSequenceLength:Z,kvSequenceLength:Q,totalSequenceLength:ue,maxSequenceLength:he,inputHiddenSize:F,hiddenSize:D,vHiddenSize:H,headSize:Math.floor(D/t.numHeads),vHeadSize:Math.floor(H/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:le,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},_o=(e,t,s)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${s?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,El=(e,t,s,o,i,d,a,p)=>{let g=vs(a?1:d),w=64,F=d/g;F<w&&(w=32);let D=Math.ceil(d/g/w),m=[{type:12,data:t},{type:12,data:s},{type:12,data:o},{type:12,data:i},{type:12,data:F},{type:12,data:D}],H=Gs(e.dataType,g),Q=cr(1,g),Z=["type"];a&&Z.push("type"),p&&Z.push("type");let ue=he=>{let le=ts("x",e.dataType,e.dims,g),Pe=[le],Ee=a?pt("seq_lens",a.dataType,a.dims):void 0;Ee&&Pe.push(Ee);let De=p?pt("total_sequence_length_input",p.dataType,p.dims):void 0;De&&Pe.push(De);let Qe=cr(e.dataType),Je=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${w}>;
  var<workgroup> thread_sum: array<f32, ${w}>;
  ${he.registerUniforms(Je).declareVariables(...Pe)}
  ${he.mainStart([w,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${_o(Ee,De,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${w}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${Q}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${Q}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(g){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${g}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${w}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${Q}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${Q}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(g){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${g}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${w}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${le.type.value}(${Qe}(1.0) / ${Qe}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${Q}(x[offset + i]);
        x[offset + i] = ${le.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${a?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${le.type.value}(${Qe}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${w};${H};${g}`,inputDependencies:Z},getShaderSource:ue,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(d/w),y:i,z:t*s},programUniforms:m})}},pi=(e,t,s,o,i,d,a,p,g)=>{let w=a+d.kvSequenceLength,F=[d.batchSize,d.numHeads,d.sequenceLength,w],D=e>1&&o,m=d.kvNumHeads?d.kvNumHeads:d.numHeads,H=D?[d.batchSize,m,w,d.headSize]:void 0,Q=d.nReps?d.nReps:1,Z=d.scale===0?1/Math.sqrt(d.headSize):d.scale,ue=vs(d.headSize),he=d.headSize/ue,le=12,Pe={x:Math.ceil(w/le),y:Math.ceil(d.sequenceLength/le),z:d.batchSize*d.numHeads},Ee=[{type:12,data:d.sequenceLength},{type:12,data:he},{type:12,data:w},{type:12,data:d.numHeads},{type:12,data:d.headSize},{type:1,data:Z},{type:12,data:a},{type:12,data:d.kvSequenceLength},{type:12,data:Q}],De=D&&o&&et.size(o.dims)>0,Qe=["type","type"];De&&Qe.push("type"),i&&Qe.push("type"),p&&Qe.push("type"),g&&Qe.push("type");let Je=[{dims:F,dataType:t.dataType,gpuDataType:0}];D&&Je.push({dims:H,dataType:t.dataType,gpuDataType:0});let gt=It=>{let Qt=pt("q",t.dataType,t.dims,ue),Ms=pt("key",s.dataType,s.dims,ue),ls=[Qt,Ms];if(De){let bs=pt("past_key",o.dataType,o.dims,ue);ls.push(bs)}i&&ls.push(pt("attention_bias",i.dataType,i.dims));let ss=p?pt("seq_lens",p.dataType,p.dims):void 0;ss&&ls.push(ss);let ks=g?pt("total_sequence_length_input",g.dataType,g.dims):void 0;ks&&ls.push(ks);let jt=ts("output",t.dataType,F),ys=[jt];D&&ys.push(ts("present_key",t.dataType,H,ue));let Ns=cr(1,ue),hs=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${le}u;

  var<workgroup> tileQ: array<${Qt.type.storage}, ${le*le}>;
  var<workgroup> tileK: array<${Qt.type.storage}, ${le*le}>;
  ${It.registerUniforms(hs).declareVariables(...ls,...ys)}
  ${It.mainStart([le,le,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${Q===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${Q===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${_o(ss,ks,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${De&&D?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${D?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Ns}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${De&&D?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${D?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Ns}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(ue){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${ue}`)}})()};
        output[outputIdx] = ${jt.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${ue};${i!==void 0};${o!==void 0};${e}`,inputDependencies:Qe},getRunData:()=>({outputs:Je,dispatchGroup:Pe,programUniforms:Ee}),getShaderSource:gt}},Pl=(e,t,s,o,i,d,a=void 0,p=void 0)=>{let g=d+i.kvSequenceLength,w=i.nReps?i.nReps:1,F=i.vHiddenSize*w,D=e>1&&o,m=i.kvNumHeads?i.kvNumHeads:i.numHeads,H=D?[i.batchSize,m,g,i.headSize]:void 0,Q=[i.batchSize,i.sequenceLength,F],Z=12,ue={x:Math.ceil(i.vHeadSize/Z),y:Math.ceil(i.sequenceLength/Z),z:i.batchSize*i.numHeads},he=[{type:12,data:i.sequenceLength},{type:12,data:g},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:F},{type:12,data:d},{type:12,data:i.kvSequenceLength},{type:12,data:w}],le=D&&o&&et.size(o.dims)>0,Pe=["type","type"];le&&Pe.push("type"),a&&Pe.push("type"),p&&Pe.push("type");let Ee=[{dims:Q,dataType:t.dataType,gpuDataType:0}];D&&Ee.push({dims:H,dataType:t.dataType,gpuDataType:0});let De=Qe=>{let Je=pt("probs",t.dataType,t.dims),gt=pt("v",s.dataType,s.dims),It=[Je,gt];le&&It.push(pt("past_value",o.dataType,o.dims));let Qt=a?pt("seq_lens",a.dataType,a.dims):void 0;a&&It.push(Qt);let Ms=p?pt("total_sequence_length_input",p.dataType,p.dims):void 0;p&&It.push(Ms);let ls=[ts("output",t.dataType,Q)];D&&ls.push(ts("present_value",t.dataType,H));let ss=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${Z}u;
  var<workgroup> tileQ: array<${Je.type.value}, ${Z*Z}>;
  var<workgroup> tileV: array<${Je.type.value}, ${Z*Z}>;
  ${Qe.registerUniforms(ss).declareVariables(...It,...ls)}
  ${Qe.mainStart([Z,Z,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${w===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${w===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${_o(Qt,Ms,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${le&&D?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${D?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Je.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${le&&D?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${D?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${o!==void 0};${e}`,inputDependencies:Pe},getRunData:()=>({outputs:Ee,dispatchGroup:ue,programUniforms:he}),getShaderSource:De}},Kn=(e,t,s,o,i,d,a,p,g,w,F=void 0,D=void 0)=>{let m=Math.min(e.outputCount,1+(a?1:0)+(p?1:0)),H=m>1?w.pastSequenceLength:0,Q=H+w.kvSequenceLength,Z=g&&et.size(g.dims)>0?g:void 0,ue=[t,s];m>1&&a&&et.size(a.dims)>0&&ue.push(a),Z&&ue.push(Z),F&&ue.push(F),D&&ue.push(D);let he=e.compute(pi(m,t,s,a,Z,w,H,F,D),{inputs:ue,outputs:m>1?[-1,1]:[-1]})[0];e.compute(El(he,w.batchSize,w.numHeads,H,w.sequenceLength,Q,F,D),{inputs:F&&D?[he,F,D]:[he],outputs:[]});let le=[he,o];m>1&&p&&et.size(p.dims)>0&&le.push(p),F&&le.push(F),D&&le.push(D),e.compute(Pl(m,he,o,p,w,H,F,D),{inputs:le,outputs:m>1?[0,2]:[0]})},mi=(e,t)=>{let s=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,d=t.headSize,a=12,p={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},g=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:o},{type:12,data:i},{type:12,data:d},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],F=D=>{let m=ts("output_q",g[0].dataType,s),H=ts("output_k",g[0].dataType,s),Q=ts("output_v",g[0].dataType,s),Z=pt("input",g[0].dataType,g[0].dims),ue=pt("weight",g[1].dataType,g[1].dims),he=pt("bias",g[2].dataType,g[2].dims),le=Z.type.storage,Pe=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${a}u;
  var<workgroup> tileInput: array<${le}, ${a*a}>;
  var<workgroup> tileWeightQ: array<${le}, ${a*a}>;
  var<workgroup> tileWeightK: array<${le}, ${a*a}>;
  var<workgroup> tileWeightV: array<${le}, ${a*a}>;
  ${D.registerUniforms(Pe).declareVariables(Z,ue,he,m,H,Q)}
  ${D.mainStart([a,a,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${le}(0);
    var valueK = ${le}(0);
    var valueV = ${le}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:w}),getShaderSource:F},{inputs:g,outputs:[-1,-1,-1]})},Cl=(e,t)=>{let s=hi(e.inputs,t),[o,i,d]=mi(e,s);return Kn(e,o,i,d,e.inputs[4],void 0,void 0,void 0,e.inputs[5],s)}}),_i,kl,Sl,gi,Hd=v(()=>{tt(),Gt(),rs(),Ss(),xs(),_i=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let s=(o,i,d)=>{let a=i.length;if(a!==o.length)throw new Error(`${d}: num dimensions != ${a}`);i.forEach((p,g)=>{if(p!==o[g])throw new Error(`${d}: dim[${g}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);s(e[1].dims,o,"Invalid input scale"),s(e[2].dims,o,"Invalid input B"),s(e[3].dims,o,"Invalid input mean"),s(e[4].dims,o,"Invalid input var")}else s(e[1].dims,[1],"Invalid input scale"),s(e[2].dims,[1],"Invalid input B"),s(e[3].dims,[1],"Invalid input mean"),s(e[4].dims,[1],"Invalid input var")},kl=(e,t)=>{let{epsilon:s,spatial:o,format:i}=t,d=e[0].dims,a=o?vs(d[d.length-1]):1,p=i==="NHWC"&&d.length>1?a:1,g=et.size(d)/a,w=o,F=w?d.length:d,D=pt("x",e[0].dataType,e[0].dims,a),m=pt("scale",e[1].dataType,e[1].dims,p),H=pt("bias",e[2].dataType,e[2].dims,p),Q=pt("inputMean",e[3].dataType,e[3].dims,p),Z=pt("inputVar",e[4].dataType,e[4].dims,p),ue=ts("y",e[0].dataType,F,a),he=()=>{let Pe="";if(o)Pe=`let cOffset = ${d.length===1?"0u":i==="NHWC"?`outputIndices[${d.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")Pe=`
            ${ue.indicesSet("outputIndices","0","0")}
            let cOffset = ${ue.indicesToOffset("outputIndices")};`;else{Pe=`var cIndices = ${m.type.indices}(0);
                       cIndices[0] = outputIndices[${d.length-1}];`;for(let Ee=1;Ee<m.rank;Ee++)Pe+=`cIndices[${Ee}] = outputIndices[${Ee}];`;Pe+=`let cOffset = ${m.indicesToOffset("cIndices")};`}return Pe},le=Pe=>`
  const epsilon = ${s};
  ${Pe.registerUniform("outputSize","u32").declareVariables(D,m,H,Q,Z,ue)}
  ${Pe.mainStart()}
  ${Pe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${ue.offsetToIndices(`global_idx * ${a}`)};
    ${he()}
    let scale = ${m.getByOffset("cOffset")};
    let bias = ${H.getByOffset("cOffset")};
    let inputMean = ${Q.getByOffset("cOffset")};
    let inputVar = ${Z.getByOffset("cOffset")};
    let x = ${D.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${ue.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:le,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:w?[{type:12,data:g},...Ut(d)]:[{type:12,data:g}]})}},Sl=e=>as(e),gi=(e,t)=>{let{inputs:s,outputCount:o}=e,i=Sl({...t,outputCount:o});if(U.webgpu.validateInputContent&&_i(s,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(kl(s,i))}}),$l,wi,Il,Qd=v(()=>{rs(),xs(),$l=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},wi=e=>{let t=e[0].dims,s=e[0].dims[2],o=et.size(t)/4,i=e[0].dataType,d=pt("input",i,t,4),a=pt("bias",i,[s],4),p=pt("residual",i,t,4),g=ts("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:w=>`
  const channels = ${s}u / 4;
  ${w.declareVariables(d,a,p,g)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let value = ${d.getByOffset("global_idx")}
      + ${a.getByOffset("global_idx % channels")} + ${p.getByOffset("global_idx")};
    ${g.setByOffset("global_idx","value")}
  }`}},Il=e=>{$l(e.inputs),e.compute(wi(e.inputs))}}),yi,Rs,Al,Mi,Ol,Fl,bi,Dl,Ll,vi,zl,Bl,Ti,Rl,jl,xi,qn,Nl,go,Vl,Ei,Ul,Wl,Pi,Gl,Kl,Ci,ql,Hl,ki,Ql,Xl,Si,Yl,Jl,wo,Zl,$i,yo,eu,tu,su,ru,Ii,nu,Ai=v(()=>{Gt(),rs(),Ss(),xs(),yi=(e,t,s,o,i,d,a)=>{let p=Math.ceil(t/4),g="";typeof i=="string"?g=`${i}(a)`:g=i("a");let w=pt("inputData",s,[p],4),F=ts("outputData",o,[p],4),D=[{name:"vec_size",type:"u32"}];return a&&D.push(...a),`
      ${e.registerUniforms(D).declareVariables(w,F)}

  ${d??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${w.getByOffset("global_idx")};
    ${F.setByOffset("global_idx",g)}
  }`},Rs=(e,t,s,o,i,d=e.dataType,a,p)=>{let g=[{type:12,data:Math.ceil(et.size(e.dims)/4)}];return a&&g.push(...a),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:w=>yi(w,et.size(e.dims),e.dataType,d,s,o,p),getRunData:w=>({outputs:[{dims:e.dims,dataType:d}],dispatchGroup:{x:Math.ceil(et.size(w[0].dims)/64/4)},programUniforms:g})}},Al=e=>{e.compute(Rs(e.inputs[0],"Abs","abs"))},Mi=e=>{e.compute(Rs(e.inputs[0],"Acos","acos"))},Ol=e=>{e.compute(Rs(e.inputs[0],"Acosh","acosh"))},Fl=e=>{e.compute(Rs(e.inputs[0],"Asin","asin"))},bi=e=>{e.compute(Rs(e.inputs[0],"Asinh","asinh"))},Dl=e=>{e.compute(Rs(e.inputs[0],"Atan","atan"))},Ll=e=>{e.compute(Rs(e.inputs[0],"Atanh","atanh"))},vi=e=>as(e),zl=(e,t)=>{let s;switch(t.to){case 10:s="vec4<f16>";break;case 1:s="vec4<f32>";break;case 12:s="vec4<u32>";break;case 6:s="vec4<i32>";break;case 9:s="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Rs(e.inputs[0],"Cast",s,void 0,t.cacheKey,t.to))},Bl=e=>{let t,s,o=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=o?e[1].getFloat32Array()[0]:-34028234663852886e22,s=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=o?e[1].getUint16Array()[0]:64511,s=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return as({min:t,max:s})},Ti=(e,t)=>{let s=t||Bl(e.inputs),o=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${o}>(uniforms.min), vec4<${o}>(uniforms.max))`,void 0,s.cacheKey,void 0,[{type:e.inputs[0].dataType,data:s.min},{type:e.inputs[0].dataType,data:s.max}],[{name:"min",type:o},{name:"max",type:o}]),{inputs:[0]})},Rl=e=>{e.compute(Rs(e.inputs[0],"Ceil","ceil"))},jl=e=>{e.compute(Rs(e.inputs[0],"Cos","cos"))},xi=e=>{e.compute(Rs(e.inputs[0],"Cosh","cosh"))},qn=e=>as(e),Nl=(e,t)=>{let s=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`
  const elu_alpha_ = ${s}(${t.alpha});

  fn elu_f32(a: ${s}) -> ${s} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${s}>) -> vec4<${s}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},go=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Vl=e=>{let t=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"Erf",s=>`erf_vf32(${s})`,go(t)))},Ei=e=>{e.compute(Rs(e.inputs[0],"Exp","exp"))},Ul=e=>{e.compute(Rs(e.inputs[0],"Floor","floor"))},Wl=e=>{let t=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"Gelu",s=>`0.5 * ${s} * (1.0 + erf_vf32(${s} * 0.7071067811865475))`,go(t)))},Pi=(e,t)=>{let s=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${s}>(0.0))`,`const leaky_relu_alpha_ = ${s}(${t.alpha});`,t.cacheKey))},Gl=e=>{e.compute(Rs(e.inputs[0],"Not",t=>`!${t}`))},Kl=e=>{e.compute(Rs(e.inputs[0],"Neg",t=>`-${t}`))},Ci=e=>{e.compute(Rs(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},ql=e=>{let t=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"Relu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > vec4<${t}>(0.0))`))},Hl=e=>{e.compute(Rs(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ki=e=>as(e),Ql=(e,t)=>{let s=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"HardSigmoid",o=>`max(vec4<${s}>(0.0), min(vec4<${s}>(1.0), ${t.alpha} * ${o} + vec4<${s}>(${t.beta})))`,void 0,t.cacheKey))},Xl=e=>{e.compute(Rs(e.inputs[0],"Sin","sin"))},Si=e=>{e.compute(Rs(e.inputs[0],"Sinh","sinh"))},Yl=e=>{e.compute(Rs(e.inputs[0],"Sqrt","sqrt"))},Jl=e=>{e.compute(Rs(e.inputs[0],"Tan","tan"))},wo=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Zl=e=>{e.compute(Rs(e.inputs[0],"Tanh",wo))},$i=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${wo("v")};
}
`,yo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,eu=e=>{let t=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"FastGelu",yo,$i(t),void 0,e.inputs[0].dataType))},tu=(e,t)=>{let s=cr(e.inputs[0].dataType);return e.compute(Rs(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${s}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${s}>(${t.alpha});`,t.cacheKey)),0},su=e=>{e.compute(Rs(e.inputs[0],"Log","log"))},ru=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Ii=e=>`quick_gelu_impl(${e})`,nu=(e,t)=>{let s=cr(e.inputs[0].dataType);e.compute(Rs(e.inputs[0],"QuickGelu",Ii,ru(s,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),ou,iu,Oi,Xd=v(()=>{rs(),xs(),Ai(),ou=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},iu=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let s=pt("input",e[0].dataType,e[0].dims,4),o=pt("bias",e[0].dataType,[e[0].dims[2]],4),i=ts("output",e[0].dataType,t,4),d=et.size(t)/4,a=Gs(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)}}),getShaderSource:p=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${p.declareVariables(s,o,i)}

  ${go(a)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(d)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Oi=e=>{ou(e.inputs),e.compute(iu(e.inputs))}}),au,lu,on,Fi,uu,cu,du,hu,Di,pu,mu,Li,fu,Yd=v(()=>{Gt(),rs(),xs(),au=(e,t,s,o,i,d,a,p,g,w,F,D)=>{let m,H;typeof p=="string"?m=H=(le,Pe)=>`${p}((${le}),(${Pe}))`:typeof p=="function"?m=H=p:(m=p.scalar,H=p.vector);let Q=ts("outputData",F,o.length,4),Z=pt("aData",g,t.length,4),ue=pt("bData",w,s.length,4),he;if(i)if(d){let le=et.size(t)===1,Pe=et.size(s)===1,Ee=t.length>0&&t[t.length-1]%4===0,De=s.length>0&&s[s.length-1]%4===0;le||Pe?he=Q.setByOffset("global_idx",H(le?`${Z.type.value}(${Z.getByOffset("0")}.x)`:Z.getByOffset("global_idx"),Pe?`${ue.type.value}(${ue.getByOffset("0")}.x)`:ue.getByOffset("global_idx"))):he=`
            let outputIndices = ${Q.offsetToIndices("global_idx * 4u")};
            let offsetA = ${Z.broadcastedIndicesToOffset("outputIndices",Q)};
            let offsetB = ${ue.broadcastedIndicesToOffset("outputIndices",Q)};
            ${Q.setByOffset("global_idx",H(a||Ee?Z.getByOffset("offsetA / 4u"):`${Z.type.value}(${Z.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||De?ue.getByOffset("offsetB / 4u"):`${ue.type.value}(${ue.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else he=Q.setByOffset("global_idx",H(Z.getByOffset("global_idx"),ue.getByOffset("global_idx")));else{if(!d)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let le=(Pe,Ee,De="")=>{let Qe=`aData[indexA${Ee}][componentA${Ee}]`,Je=`bData[indexB${Ee}][componentB${Ee}]`;return`
            let outputIndices${Ee} = ${Q.offsetToIndices(`global_idx * 4u + ${Ee}u`)};
            let offsetA${Ee} = ${Z.broadcastedIndicesToOffset(`outputIndices${Ee}`,Q)};
            let offsetB${Ee} = ${ue.broadcastedIndicesToOffset(`outputIndices${Ee}`,Q)};
            let indexA${Ee} = offsetA${Ee} / 4u;
            let indexB${Ee} = offsetB${Ee} / 4u;
            let componentA${Ee} = offsetA${Ee} % 4u;
            let componentB${Ee} = offsetB${Ee} % 4u;
            ${Pe}[${Ee}] = ${De}(${m(Qe,Je)});
          `};F===9?he=`
            var data = vec4<u32>(0);
            ${le("data",0,"u32")}
            ${le("data",1,"u32")}
            ${le("data",2,"u32")}
            ${le("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:he=`
            ${le("outputData[global_idx]",0)}
            ${le("outputData[global_idx]",1)}
            ${le("outputData[global_idx]",2)}
            ${le("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(Z,ue,Q)}

        ${D??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${he}
      }`},lu=(e,t,s,o,i,d,a=s.dataType)=>{let p=s.dims.map(Z=>Number(Z)??1),g=o.dims.map(Z=>Number(Z)??1),w=!et.areEqual(p,g),F=p,D=et.size(p),m=!1,H=!1,Q=[w];if(w){let Z=Pr.calcShape(p,g,!1);if(!Z)throw new Error("Can't perform binary op on the given tensors");F=Z.slice(),D=et.size(F);let ue=et.size(p)===1,he=et.size(g)===1,le=p.length>0&&p[p.length-1]%4===0,Pe=g.length>0&&g[g.length-1]%4===0;Q.push(ue),Q.push(he),Q.push(le),Q.push(Pe);let Ee=1;for(let De=1;De<F.length;De++){let Qe=p[p.length-De],Je=g[g.length-De];if(Qe===Je)Ee*=Qe;else break}Ee%4===0?(H=!0,m=!0):(ue||he||le||Pe)&&(m=!0)}else m=!0;return Q.push(m),{name:e,shaderCache:{hint:t+Q.map(Z=>Z.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:Z=>au(Z,p,g,F,m,w,H,i,s.dataType,o.dataType,a,d),getRunData:()=>({outputs:[{dims:F,dataType:a}],dispatchGroup:{x:Math.ceil(D/64/4)},programUniforms:[{type:12,data:Math.ceil(et.size(F)/4)},...Ut(p,g,F)]})}},on=(e,t,s,o,i,d)=>{e.compute(lu(t,i??"",e.inputs[0],e.inputs[1],s,o,d))},Fi=e=>{on(e,"Add",(t,s)=>`${t}+${s}`)},uu=e=>{on(e,"Div",(t,s)=>`${t}/${s}`)},cu=e=>{on(e,"Equal",{scalar:(t,s)=>`u32(${t}==${s})`,vector:(t,s)=>`vec4<u32>(${t}==${s})`},void 0,void 0,9)},du=e=>{on(e,"Mul",(t,s)=>`${t}*${s}`)},hu=e=>{let t=pt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;on(e,"Pow",{scalar:(s,o)=>`pow_custom(${s},${o})`,vector:(s,o)=>`pow_vector_custom(${s},${o})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Di=e=>{on(e,"Sub",(t,s)=>`${t}-${s}`)},pu=e=>{on(e,"Greater",{scalar:(t,s)=>`u32(${t}>${s})`,vector:(t,s)=>`vec4<u32>(${t}>${s})`},void 0,void 0,9)},mu=e=>{on(e,"Less",{scalar:(t,s)=>`u32(${t}<${s})`,vector:(t,s)=>`vec4<u32>(${t}<${s})`},void 0,void 0,9)},Li=e=>{on(e,"GreaterOrEqual",{scalar:(t,s)=>`u32(${t}>=${s})`,vector:(t,s)=>`vec4<u32>(${t}>=${s})`},void 0,void 0,9)},fu=e=>{on(e,"LessOrEqual",{scalar:(t,s)=>`u32(${t}<=${s})`,vector:(t,s)=>`vec4<u32>(${t}<=${s})`},void 0,void 0,9)}}),zi,_u,gu,Bi,wu,yu,Mu=v(()=>{Gt(),rs(),Ss(),xs(),zi=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let s=0,o=e[s],i=o.dataType,d=o.dims.length;e.forEach((a,p)=>{if(p!==s){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==d)throw new Error("input tensors should have the same shape");a.dims.forEach((g,w)=>{if(w!==t&&g!==o.dims[w])throw new Error("non concat dimensions must match")})}})},_u=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,gu=(e,t)=>{let s=e.length,o=[];for(let i=0;i<s;++i){let d=t.setByOffset("global_idx",e[i].getByIndices("indices"));s===1?o.push(d):i===0?o.push(`if (inputIndex == ${i}u) { ${d} }`):i===s-1?o.push(`else { ${d} }`):o.push(`else if (inputIndex == ${i}) { ${d} }`)}return o.join(`
`)},Bi=(e,t,s,o)=>{let i=et.size(s),d=new Array(e.length),a=new Array(e.length),p=0,g=[],w=[],F=[{type:12,data:i}];for(let Z=0;Z<e.length;++Z)p+=e[Z].dims[t],d[Z]=p,w.push(e[Z].dims.length),a[Z]=pt(`input${Z}`,o,w[Z]),g.push("rank"),F.push({type:12,data:d[Z]});for(let Z=0;Z<e.length;++Z)F.push(...Ut(e[Z].dims));F.push(...Ut(s));let D=ts("output",o,s.length),m=D.indicesGet("indices",t),H=Array.from(Array(d.length).keys()).map(Z=>`uniforms.sizeInConcatAxis${Z}`).join(","),Q=Z=>`

  ${(()=>{Z.registerUniform("outputSize","u32");for(let ue=0;ue<e.length;ue++)Z.registerUniform(`sizeInConcatAxis${ue}`,"u32");return Z.declareVariables(...a,D)})()}

  ${_u(d.length,H)}

  ${Z.mainStart()}
    ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${D.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${m});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${d.length}u>(${H});
      ${m} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${gu(a,D)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:F}),getShaderSource:Q}},wu=(e,t)=>{let s=e.inputs,o=s[0].dims,i=et.normalizeAxis(t.axis,o.length);zi(s,i);let d=o.slice();d[i]=s.reduce((p,g)=>p+(g.dims.length>i?g.dims[i]:0),0);let a=s.filter(p=>et.size(p.dims)>0);e.compute(Bi(a,i,d,s[0].dataType),{inputs:a})},yu=e=>as({axis:e.axis})}),Cn,kn,pn,Ri,Sn=v(()=>{Gt(),rs(),Cn=(e,t,s="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${s}(uniforms.clip_min)), ${t}(${s}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${s}(uniforms.alpha) * value + ${s}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${s}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},kn=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},pn=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Ri=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[s,o]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:s,beta:o}}else if(t==="Clip"){let[s,o]=(e==null?void 0:e.activation_params)||[ur,Or];return{activation:t,clipMax:o,clipMin:s}}else if(t==="LeakyRelu"){let[s]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:s}}return{activation:t}}}),kr,ji,Ni=v(()=>{kr=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},ji=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Vi,Jd=v(()=>{Vi=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Hn,Ui,Mo=v(()=>{Gt(),rs(),xs(),Sn(),Hn=(e,t,s,o,i)=>{let d=o-s;return`
      ${Array.from({length:s}).map((a,p)=>`
      if (${Zt(t.shape,p,t.rank)} != 1) {
        ${t.indicesSet(e,p,Zt(i,p+d,o))}
      } else {
        ${t.indicesSet(e,p,0)}
      }`).join("")}
`},Ui=(e,t,s,o,i=!1,d)=>{let a=e[0].dims,p=e[1].dims,g=a[a.length-2],w=p[p.length-1],F=a[a.length-1],D=vs(w),m=vs(F),H=vs(g),Q=et.size(s)/D/H,Z=e.length>2,ue=o?o.slice(0,-2):s.slice(0,-2),he=[et.size(ue),g,w],le=[{type:12,data:Q},{type:12,data:g},{type:12,data:w},{type:12,data:F}];kn(t,le),le.push(...Ut(ue,a,p)),Z&&le.push(...Ut(e[2].dims)),le.push(...Ut(he));let Pe=Ee=>{let De=Ho("batch_dims",e[0].dataType,ue.length),Qe=pt("a",e[0].dataType,a.length,m),Je=pt("b",e[1].dataType,p.length,D),gt=ts("output",e[0].dataType,he.length,D),It=Gs(gt.type.tensor),Qt=Cn(t,gt.type.value,It),Ms=[Qe,Je],ls="";if(Z){let jt=i?D:1;Ms.push(pt("bias",e[2].dataType,e[2].dims.length,jt)),ls=`${i?`value += bias[col / ${jt}];`:`value += ${gt.type.value}(bias[row + i]);`}`}let ss=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];pn(t,ss);let ks=()=>{let jt=`var a_data: ${Qe.type.value};`;for(let ys=0;ys<m;ys++)jt+=`
              let b_data${ys} = b[(b_offset + (k + ${ys}) * uniforms.N + col) / ${D}];`;for(let ys=0;ys<H;ys++){jt+=`a_data = a[(a_offset + (row + ${ys}) * uniforms.K + k) / ${m}];`;for(let Ns=0;Ns<m;Ns++)jt+=`
            values[${ys}] = fma(${Je.type.value}(a_data${m===1?"":`[${Ns}]`}), b_data${Ns}, values[${ys}]);
`}return jt};return`
  ${Ee.registerUniforms(ss).registerInternalVariables(De).declareVariables(...Ms,gt)}
  ${Ee.mainStart()}
    ${Ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${D})) * ${D};
    var index1 = global_idx / (uniforms.N / ${D});
    let stride1 = uniforms.M / ${H};
    let row = (index1 % stride1) * ${H};
    let batch = index1 / stride1;

    ${s.length===2?"":`let batch_indices = ${De.offsetToIndices("batch")};`}

    var a_indices: ${Qe.type.indices};
    ${Hn("a_indices",Qe,Qe.rank-2,De.rank,"batch_indices")}
    ${Qe.indicesSet("a_indices",Qe.rank-2,0)}
    ${Qe.indicesSet("a_indices",Qe.rank-1,0)}
    let a_offset = ${Qe.indicesToOffset("a_indices")};

    var b_indices: ${Je.type.indices};
    ${Hn("b_indices",Je,Je.rank-2,De.rank,"batch_indices")}
    ${Je.indicesSet("b_indices",Je.rank-2,0)}
    ${Je.indicesSet("b_indices",Je.rank-1,0)}
    let b_offset = ${Je.indicesToOffset("b_indices")};
    var values: array<${gt.type.value}, ${H}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${m}) {
      ${ks()}
    }
    for (var i = 0u; i < ${H}u; i++) {
      var value = values[i];
      ${ls}
      ${Qt}
      let cur_indices = ${gt.type.indices}(batch, row + i, col);
      let offset = ${gt.indicesToOffset("cur_indices")};
      ${gt.setByOffset(`offset / ${D}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${D};${m};${H};${i}`,inputDependencies:Z?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:d?d(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Q/64)},programUniforms:le}),getShaderSource:Pe}}}),bu,vu,Wi,bo,Tu,Gi,Ki,vo,qi=v(()=>{Gt(),rs(),xs(),Sn(),Mo(),Ni(),bu=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,vu=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Wi=(e,t,s="f32",o,i=!1,d=32,a=!1,p=32)=>{let g=t[1]*e[1],w=t[0]*e[0],F=i?g:d,D=i?d:g,m=F/t[0],H=d/t[1];if(!((i&&m===4&&e[1]===4||!i&&(m===3||m===4))&&F%t[0]===0&&d%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${m} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${m} must be 3 or 4.
  tileAWidth ${F} must be divisible by workgroupSize[0]${t[0]}. tileInner ${d} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${m}<${s}>, ${F/m}>, ${D}>;
var<workgroup> mm_Bsub: array<array<vec4<${s}>, ${w/e[0]}>, ${d}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${m};
const tileInner = ${d};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${a?"0":"i32(globalId.z)"};
  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${g};

  let num_tiles = ${a?`${Math.ceil(p/d)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};

  var acc: array<vec4<${s}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${H};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${bu(i,o)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${H}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${m===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${vu(i,m)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},bo=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Tu=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Gi=(e,t,s="f32",o,i=!1,d=32,a=!1,p=32,g=!1)=>{let w=e[1]*t[1],F=e[0]*t[0],D=i?w:d,m=i?d:w;if(!(m%t[1]===0&&D%t[0]===0&&d%t[1]===0))throw new Error(`tileAHight ${m} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${D} must be divisible by workgroupSize[0]${t[0]}, tileInner ${d} must be divisible by workgroupSize[1]${t[1]}`);let H=m/t[1],Q=D/t[0],Z=d/t[1],ue=g?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${w};
    let globalColStart = i32(workgroupId.x) * ${F};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${D}; inputCol = inputCol + ${t[0]}) {
          ${bo(i,o)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${F}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${o?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${s}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${w};

let tileRowA = i32(localId.y) * ${H};
let tileColA = i32(localId.x) * ${Q};
let tileRowB = i32(localId.y) * ${Z};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${H}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${Q}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${bo(i,o)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${Z}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${o?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${s}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Tu(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${s}, ${D}>, ${m}>;
  var<workgroup> mm_Bsub : array<array<${s}, ${F}>, ${d}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${d};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${a?"0":"i32(globalId.z)"};
    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${a?`${Math.ceil(p/d)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${a?`i32(globalId.z) * ${p}`:"0"};

    var acc : array<array<${s}, colPerThread>, rowPerThread>;
    ${ue}
  }
`},Ki=(e,t,s,o,i=!1)=>{let[d,a,p,g]=o,w=Gs(o[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${d.type.indices}) -> ${kr(e,w)} {
      var value = ${kr(e,w)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${a.type.indices};
        ${Hn("aIndices",a,a.rank-2,d.rank,"batchIndices")}
        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${d.type.indices}) -> ${kr(e,w)} {
      var value = ${kr(e,w)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${p.type.indices};
        ${Hn("bIndices",p,p.rank-2,d.rank,"batchIndices")}
        ${p.indicesSet("bIndices",p.rank-2,"u32(row)")}
        ${p.indicesSet("bIndices",p.rank-1,"u32(colIn)")}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${kr(e,w)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${i?"bias[colIn]":`${kr(e,w)}(bias[row])`};`:""}
        ${s}
        ${g.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},vo=(e,t,s,o,i=!1,d)=>{let a=e[0].dims,p=e[1].dims,g=a.slice(0,-2),w=p.slice(0,-2),F=o?o.slice(0,-2):s.slice(0,-2),D=et.size(F),m=a[a.length-2],H=a[a.length-1],Q=p[p.length-1],Z=H%4===0&&Q%4===0,ue=m<=8?[4,1,1]:[4,4,1],he=[8,8,1],le=[Math.ceil(Q/he[0]/ue[0]),Math.ceil(m/he[1]/ue[1]),Math.ceil(D/he[2]/ue[2])],Pe=Z?4:1,Ee=[...g,m,H/Pe],De=Ee.length,Qe=[...w,H,Q/Pe],Je=Qe.length,gt=[D,m,Q/Pe],It=[{type:6,data:m},{type:6,data:Q},{type:6,data:H}];kn(t,It),It.push(...Ut(F,Ee,Qe));let Qt=["rank","rank"],Ms=e.length>2;Ms&&(It.push(...Ut(e[2].dims)),Qt.push("rank")),It.push(...Ut(gt));let ls=ss=>{let ks=F.length,jt=Ho("batchDims",e[0].dataType,ks,1),ys=Gs(e[0].dataType),Ns=pt("a",e[0].dataType,De,Pe),hs=pt("b",e[1].dataType,Je,Pe),bs=ts("result",e[0].dataType,gt.length,Pe),Ks=[Ns,hs];if(Ms){let $r=i?Pe:1;Ks.push(pt("bias",e[2].dataType,e[2].dims.length,$r))}let Pt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];pn(t,Pt);let Xt=Gs(bs.type.tensor),Vs=Cn(t,bs.type.value,Xt),Tr=Ki(Pe,Ms,Vs,[jt,Ns,hs,bs],i);return`
  ${ss.registerUniforms(Pt).registerInternalVariables(jt).declareVariables(...Ks,bs)}
  ${Tr}
  ${Z?Wi(ue,he,ys,jt):Gi(ue,he,ys,jt)}
                   `};return{name:"MatMul",shaderCache:{hint:`${ue};${t.activation};${Z};${i}`,inputDependencies:Qt},getRunData:()=>({outputs:[{dims:d?d(s):s,dataType:e[0].dataType}],dispatchGroup:{x:le[0],y:le[1],z:le[2]},programUniforms:It}),getShaderSource:ls}}}),Hi,xu,Zd=v(()=>{Gt(),Ne(),xs(),Sn(),Ni(),Jd(),qi(),Hi=(e,t,s,o,i=!1,d,a=4,p=4,g=4,w="f32")=>{let F=It=>{switch(It){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${It} is not supported.`)}},D=It=>{switch(It){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${It} is not supported.`)}},m=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,H=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,Q=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",Z=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",ue=e?"row":"col",he=e?"col":"row",le=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${ue} / outWidth;
    let outCol = ${ue} % outWidth;

    let WRow = ${he} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${he} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${he} % inChannels;
    var resData = ${kr(a,w)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${Q} && xCol >= 0 && xCol < ${Z}) {
      ${m}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${F(a)}
    }
    return resData;`,Pe=e?t&&o?`
    let col = colIn * ${a};
    ${le}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${le}
    }
    return ${kr(a,w)}(0.0);`:o&&s?`
    let col = colIn * ${a};
    ${le}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${le}
    }
    return ${kr(a,w)}(0.0);`,Ee=e?o&&s?D(p):`
    let col = colIn * ${p};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${D(p)}
    }
    return ${kr(p,w)}(0.0);`:`
    let col = colIn * ${p};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${D(p)}
    }
    return ${kr(p,w)}(0.0);`,De=kr(g,w),Qe=kr(e?a:p,w),Je=kr(e?p:a,w),gt=Cn(d,De,w);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Qe} {
      ${e?Pe:Ee}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Je} {
      ${e?Ee:Pe}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${De}) {
      let col = colIn * ${g};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${H}
      ${ji(i)}
      ${gt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},xu=(e,t,s,o,i,d,a,p,g)=>{let w=t.format==="NHWC",F=w?e[0].dims[3]:e[0].dims[1],D=s[0],m=w?s[2]:s[3],H=w?s[1]:s[2],Q=w?s[3]:s[1],Z=w&&(F%4===0||F%3===0)&&Q%4===0,ue=w?Q:m*H,he=w?m*H:Q,le=[8,8,1],Pe=o<=8?[4,1,1]:[4,4,1],Ee=[Math.ceil(ue/le[0]/Pe[0]),Math.ceil(he/le[1]/Pe[1]),Math.ceil(D/le[2]/Pe[2])];cs("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${Ee}`);let De=Z?w&&F%4!==0?3:4:1,Qe=le[1]*Pe[1],Je=le[0]*Pe[0],gt=Math.max(le[0]*De,le[1]),It=o%Qe===0,Qt=i%Je===0,Ms=d%gt===0,ls=Z?[De,4,4]:[1,1,1],ss=[{type:6,data:o},{type:6,data:i},{type:6,data:d},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];kn(t,ss),ss.push(...Ut(e[0].dims,e[1].dims));let ks=["rank","rank"];a&&(ss.push(...Ut(e[2].dims)),ks.push("rank")),ss.push(...Ut(s));let jt=ys=>{let Ns=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];pn(t,Ns);let hs=Z?4:1,bs=Gs(e[0].dataType),Ks=`
      fn setOutputAtIndex(flatIndex : i32, value : ${Z?`vec4<${bs}>`:bs}) {
        result[flatIndex] = ${Z?`vec4<${bs}>`:bs}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${Z?`vec4<${bs}>`:bs}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${Z?"/ 4":""}, value);
      }`,Pt=pt("x",e[0].dataType,e[0].dims.length,De===3?1:De),Xt=pt("w",e[1].dataType,e[1].dims.length,hs),Vs=[Pt,Xt],Tr=ts("result",e[0].dataType,s.length,hs);if(a){let $r=pt("bias",e[2].dataType,e[2].dims.length,hs);Vs.push($r),Ks+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Z?`vec4<${bs}>`:bs} {
          return bias[coords.${w?"w":"y"}${Z?"/ 4":""}];
        }`}return`
        ${Vi("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ys.registerUniforms(Ns).declareVariables(...Vs,Tr)}
        ${Ks}
        ${Hi(w,It,Qt,Ms,a,t,ls[0],ls[1],ls[2],bs)}
        ${Z?Wi(Pe,le,bs,void 0,!w,gt):Gi(Pe,le,bs,void 0,!w,gt,!1,void 0,p)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${De};${Z};${It};${Qt};${Ms};${Qe};${Je};${gt}`,inputDependencies:ks},getRunData:()=>({outputs:[{dims:g?g(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Ee[0],y:Ee[1],z:Ee[2]},programUniforms:ss}),getShaderSource:jt}}}),Qi,Xi,Qn,Yi,Ji,Eu,Zi,Pu,eh=v(()=>{Gt(),Ne(),rs(),xs(),Sn(),Ni(),Qi=e=>{let t=1;for(let s=0;s<e.length;s++)t*=e[s];return t},Xi=e=>typeof e=="number"?[e,e,e]:e,Qn=(e,t)=>t<=1?e:e+(e-1)*(t-1),Yi=(e,t,s,o=1)=>{let i=Qn(t,o);return Math.floor((e[0]*(s-1)-s+i)/2)},Ji=(e,t,s,o,i)=>{i==null&&(i=Yi(e,t[0],o[0]));let d=[0,0,0,s];for(let a=0;a<3;a++)e[a]+2*i>=t[a]&&(d[a]=Math.trunc((e[a]-t[a]+2*i)/o[a]+1));return d},Eu=(e,t,s,o,i,d,a,p,g,w)=>{let F,D,m,H;if(e==="VALID"&&(e=0),typeof e=="number"){F={top:e,bottom:e,left:e,right:e,front:e,back:e};let Q=Ji([t,s,o,1],[p,g,w],1,[i,d,a],e);D=Q[0],m=Q[1],H=Q[2]}else if(Array.isArray(e)){if(!e.every((Z,ue,he)=>Z===he[0]))throw Error(`Unsupported padding parameter: ${e}`);F={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let Q=Ji([t,s,o,1],[p,g,w],1,[i,d,a],e[0]);D=Q[0],m=Q[1],H=Q[2]}else if(e==="SAME_UPPER"){D=Math.ceil(t/i),m=Math.ceil(s/d),H=Math.ceil(o/a);let Q=(D-1)*i+p-t,Z=(m-1)*d+g-s,ue=(H-1)*a+w-o,he=Math.floor(Q/2),le=Q-he,Pe=Math.floor(Z/2),Ee=Z-Pe,De=Math.floor(ue/2),Qe=ue-De;F={top:Pe,bottom:Ee,left:De,right:Qe,front:he,back:le}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:F,outDepth:D,outHeight:m,outWidth:H}},Zi=(e,t,s,o,i,d=!1,a="channelsLast")=>{let p,g,w,F,D;if(a==="channelsLast")[p,g,w,F,D]=e;else if(a==="channelsFirst")[p,D,g,w,F]=e;else throw new Error(`Unknown dataFormat ${a}`);let[m,,H,Q,Z]=t,[ue,he,le]=Xi(s),[Pe,Ee,De]=Xi(o),Qe=Qn(H,Pe),Je=Qn(Q,Ee),gt=Qn(Z,De),{padInfo:It,outDepth:Qt,outHeight:Ms,outWidth:ls}=Eu(i,g,w,F,ue,he,le,Qe,Je,gt),ss=d?m*D:m,ks=[0,0,0,0,0];return a==="channelsFirst"?ks=[p,ss,Qt,Ms,ls]:a==="channelsLast"&&(ks=[p,Qt,Ms,ls,ss]),{batchSize:p,dataFormat:a,inDepth:g,inHeight:w,inWidth:F,inChannels:D,outDepth:Qt,outHeight:Ms,outWidth:ls,outChannels:ss,padInfo:It,strideDepth:ue,strideHeight:he,strideWidth:le,filterDepth:H,filterHeight:Q,filterWidth:Z,effectiveFilterDepth:Qe,effectiveFilterHeight:Je,effectiveFilterWidth:gt,dilationDepth:Pe,dilationHeight:Ee,dilationWidth:De,inShape:e,outShape:ks,filterShape:t}},Pu=(e,t,s,o,i,d)=>{let a=d==="channelsLast";a?e[0].dims[3]:e[0].dims[1];let p=[64,1,1],g={x:s.map((ue,he)=>he)},w=[Math.ceil(Qi(g.x.map(ue=>s[ue]))/p[0]),1,1];cs("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${w}`);let F=1,D=et.size(s),m=[{type:12,data:D},{type:12,data:o},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];kn(t,m),m.push(...Ut(e[0].dims,e[1].dims));let H=["rank","rank"],Q=e.length===3;Q&&(m.push(...Ut(e[2].dims)),H.push("rank")),m.push(...Ut(s));let Z=ue=>{let he=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:o.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];pn(t,he);let le=1,Pe=Gs(e[0].dataType),Ee=pt("x",e[0].dataType,e[0].dims.length,F),De=pt("W",e[1].dataType,e[1].dims.length,le),Qe=[Ee,De],Je=ts("result",e[0].dataType,s.length,le),gt="";if(Q){let Ms=pt("bias",e[2].dataType,e[2].dims.length,le);Qe.push(Ms),gt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${Pe} {
          return bias[${a?Zt("coords",4,5):Zt("coords",1,5)}];
        }`}let It=kr(F,Pe),Qt=Cn(t,It,Pe);return`
            ${gt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${Ee.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${De.getByIndices("aIndices")};
            }
          ${ue.registerUniforms(he).declareVariables(...Qe,Je)}
          ${ue.mainStart()}
          ${ue.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Je.offsetToIndices("global_idx")};
              let batch = ${Zt("coords",0,Ee.rank)};
              let d2 = ${a?Zt("coords",Ee.rank-1,Ee.rank):Zt("coords",1,Ee.rank)};
              let xFRCCorner = vec3<u32>(${a?Zt("coords",1,Ee.rank):Zt("coords",2,Ee.rank)},
              ${a?Zt("coords",2,Ee.rank):Zt("coords",3,Ee.rank)},
              ${a?Zt("coords",3,Ee.rank):Zt("coords",4,Ee.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${a?Zt("uniforms.x_shape",1,Ee.rank):Zt("uniforms.x_shape",2,Ee.rank)};
              let xShapeZ = ${a?Zt("uniforms.x_shape",2,Ee.rank):Zt("uniforms.x_shape",3,Ee.rank)};
              let xShapeW = ${a?Zt("uniforms.x_shape",3,Ee.rank):Zt("uniforms.x_shape",4,Ee.rank)};
              let xShapeU = ${a?Zt("uniforms.x_shape",4,Ee.rank):Zt("uniforms.x_shape",1,Ee.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${a?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${a?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${a?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${a?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${Q?"value = value + getBiasByOutputCoords(coords)":""};
              ${Qt}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${a};${F};${Q}`,inputDependencies:H},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:m}),getShaderSource:Z}}}),Cu,ku,ea=v(()=>{Gt(),rs(),xs(),Sn(),Cu=(e,t,s,o)=>{let i=e.length>2,d=i?"value += b[output_channel];":"",a=e[0].dims,p=e[1].dims,g=t.format==="NHWC",w=g?s[3]:s[1],F=w/t.group,D=g&&F>=4?vs(w):1,m=et.size(s)/D,H=[{type:12,data:m},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:F}];kn(t,H),H.push(...Ut(a,[p[0],p[1],p[2],p[3]/D]));let Q=i?["rank","rank","rank"]:["rank","rank"];H.push(...Ut([s[0],s[1],s[2],s[3]/D]));let Z=ue=>{let he=ts("output",e[0].dataType,s.length,D),le=Gs(he.type.tensor),Pe=Cn(t,he.type.value,le),Ee=pt("x",e[0].dataType,a.length),De=pt("w",e[1].dataType,p.length,D),Qe=[Ee,De];i&&Qe.push(pt("b",e[2].dataType,e[2].dims,D));let Je=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];pn(t,Je);let gt=g?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${Ee.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${De.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${Ee.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${De.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${ue.registerUniforms(Je).declareVariables(...Qe,he)}

  ${ue.mainStart()}
    ${ue.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${he.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${g?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${g?1:2}], outputIndices[${g?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${D} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${g?2:1}];

    var value: ${he.type.value} = ${he.type.value}(0);
    ${gt}
    ${d}
    ${Pe}
    ${he.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${D}`,inputDependencies:Q},getRunData:()=>({outputs:[{dims:o?o(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:H}),getShaderSource:Z}},ku=(e,t,s,o)=>{let i=e.length>2,d=vs(s[3]),a=vs(s[2]),p=et.size(s)/d/a,g=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/d],w=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/d],F=[s[0],s[1],s[2],s[3]/d],D=[{type:12,data:p},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];kn(t,D),D.push(...Ut(g,w,F));let m=(a-1)*t.strides[1]+w[1],H=Q=>{let Z=ts("output",e[0].dataType,F.length,d),ue=Gs(Z.type.tensor),he=Cn(t,Z.type.value,ue),le=pt("x",e[0].dataType,g.length,d),Pe=pt("w",e[1].dataType,w.length,d),Ee=[le,Pe];i&&Ee.push(pt("b",e[2].dataType,e[2].dims,d));let De=i?"value += b[output_channel];":"",Qe=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return pn(t,Qe),`
  ${Q.registerUniforms(Qe).declareVariables(...Ee,Z)}
  ${Q.mainStart()}
    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${a}u;
    let col = (index1 % width1) * ${a}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${le.type.value}, ${m}>;
    var values: array<${Z.type.value}, ${a}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${w[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${m}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${le.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${le.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${w[1]}; w_width++) {
          let w_val = ${Pe.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${a}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${a}u; i++) {
      var value = values[i];
      ${De}
      ${he}
      ${Z.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${d};${a};${m};${w[0]};${w[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(s):s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:D}),getShaderSource:H}}}),Su,To,$u,xo,ta,Eo,Iu,Au,Po,th=v(()=>{rs(),Zd(),eh(),qi(),ea(),Sn(),Mo(),wn(),Su=(e,t,s,o,i,d)=>{let a=e[0],p=e.slice(d?1:2,d?3:4),g=p.length,w=t[0],F=t.slice(2).map((m,H)=>m+(m-1)*(s[H]-1)),D=p.map((m,H)=>m+o[H]+o[H+g]).map((m,H)=>Math.floor((m-F[H]+i[H])/i[H]));return D.splice(0,0,a),D.splice(d?3:1,0,w),D},To=[2,3,1,0],$u=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let s=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(s!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},xo=(e,t)=>{let s=e.kernelShape.slice();s.length<t[1].dims.length-2&&s.push(...Array(t[1].dims.length-2-s.length).fill(0));for(let d=2;d<t[1].dims.length;++d)s[d-2]===0&&(s[d-2]=t[1].dims[d]);let o=e.pads.slice();Br.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,s,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:s,pads:o}),i},ta=e=>{let t=Ri(e),s=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,d=e.group,a=e.kernel_shape,p=e.pads,g=e.strides,w=e.w_is_const();return{autoPad:o,format:s,dilations:i,group:d,kernelShape:a,pads:p,strides:g,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},Eo=(e,t,s,o)=>{let i=s.format==="NHWC",d=Su(t[0].dims,t[1].dims,s.dilations,s.pads,s.strides,i);if(s.group!==1){let Qe=[t[0]];if(i){let Je=e.kernelCustomData.wT??e.compute(Yr(t[1],To),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Je),Qe.push(Je)}else Qe.push(t[1]);t.length===3&&Qe.push(t[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===s.group&&t[1].dims[1]===1&&s.dilations[0]===1&&s.dilations[1]===1?e.compute(ku(Qe,s,d,o),{inputs:Qe}):e.compute(Cu(Qe,s,d,o),{inputs:Qe});return}let a=t.length===3,p=t[0].dims[i?1:2],g=t[0].dims[i?2:3],w=t[0].dims[i?3:1],F=t[1].dims[2],D=t[1].dims[3],m=d[i?1:2],H=d[i?2:3],Q=d[i?3:1],Z=i&&F===p&&D===g&&s.pads[0]===0&&s.pads[1]===0;if(Z||F===1&&D===1&&s.dilations[0]===1&&s.dilations[1]===1&&s.strides[0]===1&&s.strides[1]===1&&s.pads[0]===0&&s.pads[1]===0){let Qe=d[0],Je,gt,It,Qt=[];if(i){let ss=e.kernelCustomData.wT??e.compute(Yr(t[1],To),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];if(s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ss),Z){let ks=p*g*w;Je=t[0].reshape([1,Qe,ks]),gt=ss.reshape([1,ks,Q]),It=[1,Qe,Q]}else Je=t[0].reshape([Qe,p*g,w]),gt=ss.reshape([1,w,Q]),It=[Qe,m*H,Q];Qt.push(Je),Qt.push(gt)}else Je=t[0].reshape([Qe,w,p*g]),gt=t[1].reshape([1,Q,w]),It=[Qe,Q,m*H],Qt.push(gt),Qt.push(Je);a&&Qt.push(t[2]);let Ms=It[2],ls=Qt[0].dims[Qt[0].dims.length-1];Ms<8&&ls<8?e.compute(Ui(Qt,s,d,It,i,o),{inputs:Qt}):e.compute(vo(Qt,s,d,It,i,o),{inputs:Qt});return}let ue=!0,he=e.kernelCustomData.wT??e.compute(Yr(t[1],To),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=he);let le=[t[0],he];a&&le.push(t[2]);let Pe=i?m*H:Q,Ee=i?Q:m*H,De=F*D*w;e.compute(xu(le,s,d,Pe,Ee,De,a,ue,o),{inputs:le})},Iu=(e,t)=>{let s=t.format==="NHWC",o=[e.inputs[0].reshape(s?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],d=[1].concat(t.strides),a=[1].concat(t.dilations),p=[1].concat(t.kernelShape),g=xo({...t,pads:i,strides:d,dilations:a,kernelShape:p},o);Eo(e,o,g,w=>s?[w[0],w[2],w[3]]:[w[0],w[1],w[3]])},Au=(e,t,s)=>{let o=s.format==="NHWC"?"channelsLast":"channelsFirst",i=xo(s,t),d=s.autoPad==="NOTSET"?s.pads:s.autoPad,a=Zi(t[0].dims,t[1].dims,s.strides,s.dilations,d,!1,o);e.compute(Pu(t,i,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],o))},Po=(e,t)=>{if($u(e.inputs,t),e.inputs[0].dims.length===3)Iu(e,t);else if(e.inputs[0].dims.length===5)Au(e,e.inputs,t);else{let s=xo(t,e.inputs);Eo(e,e.inputs,s)}}}),Ou,sh=v(()=>{Gt(),Ne(),rs(),xs(),Ou=(e,t,s)=>{let o=e.length>2,i=t.outputShape,d=t.format==="NHWC",a=t.group,p=e[1].dims,g=p[2]/a,w=p[3],F=d?vs(g):1,D=d?vs(w):1,m=d?w===1?F:D:1,H=et.size(i)/D,Q=[Math.ceil(H/64),1,1];cs("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${Q}`);let Z=["rank","rank"],ue=[t.strides[0],t.strides[1]],he=[t.kernelShape[d?1:2],t.kernelShape[d?2:3]],le=[t.dilations[0],t.dilations[1]],Pe=[he[0]+(t.dilations[0]<=1?0:(t.kernelShape[d?1:2]-1)*(t.dilations[0]-1)),he[1]+(t.dilations[1]<=1?0:(t.kernelShape[d?2:3]-1)*(t.dilations[1]-1))],Ee=[Pe[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),Pe[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],De=[{type:12,data:H},{type:12,data:ue},{type:12,data:he},{type:12,data:le},{type:12,data:Pe},{type:6,data:Ee},{type:12,data:g},{type:12,data:w},...Ut(e[0].dims,e[1].dims)];o&&(De.push(...Ut(e[2].dims)),Z.push("rank")),De.push(...Ut(i));let Qe=Je=>{let gt=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:ue.length},{name:"filter_dims",type:"u32",length:he.length},{name:"dilations",type:"u32",length:he.length},{name:"effective_filter_dims",type:"u32",length:Pe.length},{name:"pads",type:"i32",length:Ee.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],It=Gs(e[0].dataType),Qt=d?1:2,Ms=d?2:3,ls=d?3:1,ss=pt("W",e[1].dataType,e[1].dims.length,m),ks=pt("Dy",e[0].dataType,e[0].dims.length,F),jt=[ks,ss];o&&jt.push(pt("bias",e[2].dataType,[i[ls]].length,D));let ys=ts("result",e[0].dataType,i.length,D),Ns=()=>{let bs="";if(F===1)bs+=`
        let w_offset = ${ss.indicesToOffset(`${ss.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${ss.getByOffset(`w_offset / ${m}`)};
        dotProd = dotProd + xValue * wValue;`;else if(w===1)bs+=`
          let wValue = ${ss.getByOffset(`${ss.indicesToOffset(`${ss.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${m}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let Ks=0;Ks<F;Ks++)bs+=`
            let wValue${Ks} = ${ss.getByOffset(`${ss.indicesToOffset(`${ss.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${Ks}, wOutChannel)`)} / ${m}`)};
            dotProd = dotProd + xValue[${Ks}] * wValue${Ks};`;return bs},hs=`
            let outputIndices = ${ys.offsetToIndices(`global_idx * ${D}`)};
            let batch = ${ys.indicesGet("outputIndices",0)};
            let d1 = ${ys.indicesGet("outputIndices",ls)};
            let r = ${ys.indicesGet("outputIndices",Qt)};
            let c = ${ys.indicesGet("outputIndices",Ms)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${ys.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${It}(dyRCorner) + ${It}(wR)) / ${It}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${It}(uniforms.Dy_shape[${Qt}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${It}(dyCCorner) + ${It}(wC)) / ${It}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${It}(uniforms.Dy_shape[${Ms}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${F}) {
                  let xValue = ${d?ks.getByOffset(`${ks.indicesToOffset(`${ks.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${F}`):ks.get("batch","inputChannel","idyR","idyC")};
                  ${Ns()}
                  inputChannel = inputChannel + ${F};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${o?` + bias[d1 / ${D}]`:""};
            ${ys.setByOffset("global_idx","value")};
          `;return`
    ${Je.registerUniforms(gt).declareVariables(...jt,ys)}
      ${Je.mainStart()}
      ${Je.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${hs}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${F}${m}${D}${w===1}`,inputDependencies:Z},getRunData:()=>({dispatchGroup:{x:Q[0],y:Q[1],z:Q[2]},outputs:[{dims:s?s(i):i,dataType:e[0].dataType}],programUniforms:De}),getShaderSource:Qe}}}),Fu,sa,Du,ra,na,Lu,oa,ia,zu,rh=v(()=>{sh(),Sn(),wn(),Fu=(e,t,s,o,i,d)=>(e-1)*t+s+(o-1)*i+1-d,sa=(e,t,s,o,i)=>{let d=Math.floor(e/2);t==="SAME_UPPER"?(s[o]=d,s[i]=e-d):t==="SAME_LOWER"&&(s[o]=e-d,s[i]=d)},Du=(e,t,s,o,i,d,a,p,g,w)=>{let F=e.length-2,D=w.length===0;g.length<F&&g.push(...Array(F-g.length).fill(0));let m=e[0],H=t[p?3:1]*i;for(let Q=0,Z=e.length-F-(p?1:0);Q<F;++Q,++Z){let ue=e[Z],he=D?ue*a[Q]:w[Q],le=Fu(ue,a[Q],d[Q],t[Z],s[Q],he);sa(le,o,d,Q,Q+F),D&&w.push(a[Q]*(ue-1)+g[Q]+(t[Z]-1)*s[Q]+1-d[Q]-d[Q+F])}w.splice(0,0,m),w.splice(p?3:1,0,H)},ra=(e,t)=>{let s=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((D,m)=>D*m,1)===0){s.length=0;for(let D=2;D<t[1].dims.length;++D)s.push(t[1].dims[D])}let o=e.format==="NHWC";s.splice(0,0,t[1].dims[0]),s.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),d=e.outputShape.slice(),a=e.outputPadding.slice(),p=t[0].dims,g=e.dilations.slice();if(g.reduce((D,m)=>D+m,0)===0){let D=t[0].dims.length-2;g=new Array(D).fill(1)}let w=e.strides.slice();if(w.reduce((D,m)=>D+m,0)===0){let D=t[0].dims.length-2;w=new Array(D).fill(1)}Du(p,s,g,e.autoPad,e.group,i,w,o,a,d);let F=Object.assign({},e);return Object.assign(F,{kernelShape:s,pads:i,outputPadding:a,outputShape:d,dilations:g,strides:w}),F},na=e=>{let t=Ri(e),s=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,d=e.group,a=e.kernelShape,p=e.pads,g=e.strides,w=e.wIsConst(),F=e.outputPadding,D=e.outputShape;return{autoPad:o,format:s,dilations:i,group:d,kernelShape:a,outputPadding:F,outputShape:D,pads:p,strides:g,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},Lu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let s=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(s!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let d=e[0].dims.length-2;if(t.dilations.reduce((a,p)=>a+p,0)>0&&t.dilations.length!==d)throw new Error(`dilations should be ${d}D`);if(t.strides.reduce((a,p)=>a+p,0)>0&&t.strides.length!==d)throw new Error(`strides should be ${d}D`);if(t.pads.reduce((a,p)=>a+p,0)>0&&t.pads.length!==d*2)throw new Error(`pads should be ${d*2}D`);if(t.outputPadding.length!==d&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${d}D`);if(t.kernelShape.reduce((a,p)=>a+p,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},oa=(e,t,s,o)=>{let i=e.kernelCustomData.wT??e.compute(Yr(t[1],[2,3,0,1]),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let d=[t[0],i];t.length===3&&d.push(t[2]),e.compute(Ou(d,s,o),{inputs:d})},ia=(e,t)=>{let s=t.format==="NHWC",o=[e.inputs[0].reshape(s?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let d=t.dilations;(d.length===0||d[0]===0)&&(d=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let p=t.pads;p.length===0&&(p=[0,0]),p=[0,p[0],0,p[1]],a=[1].concat(a),d=[1].concat(d),i=[1].concat(i);let g=t.outputPadding;g=[0].concat(g);let w=ra({...t,pads:p,strides:a,dilations:d,kernelShape:i,outputPadding:g},o);oa(e,o,w,F=>s?[F[0],F[2],F[3]]:[F[0],F[1],F[3]])},zu=(e,t)=>{if(Lu(e.inputs,t),e.inputs[0].dims.length===3)ia(e,t);else{let s=ra(t,e.inputs);oa(e,e.inputs,s)}}}),aa,Bu,Ru,nh=v(()=>{Gt(),rs(),Ss(),xs(),aa=(e,t,s,o)=>{let i=et.size(t),d=t.length,a=pt("input",e,d),p=ts("output",e,d),g=s.dataType===6?s.getInt32Array()[0]:Number(s.getBigInt64Array()[0]),w=et.normalizeAxis(g,d),F=D=>{let m=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,H=Zt("uniforms.input_shape","uniforms.axis",d),Q=o.reverse?m+(o.exclusive?" + 1":""):"0",Z=o.reverse?H:m+(o.exclusive?"":" + 1");return`
                ${D.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,p)}
                ${D.mainStart()}
                  ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${p.offsetToIndices("global_idx")};
                  var sum = ${p.type.value}(0);
                  let first : i32 = ${Q};
                  let last : i32 = ${Z};
                  for (var i : i32 = first; i < last; i++) {
                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${a.getByIndices("inputIndices")};
                  }
                  ${p.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:w},...Ut(t,t)]}),getShaderSource:F}},Bu=(e,t)=>{let s=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(aa(o,s,i,t),{inputs:[0]})},Ru=e=>{let t=e.exclusive===1,s=e.reverse===1;return as({exclusive:t,reverse:s})}}),ju,la,Nu,Vu,Uu,oh=v(()=>{Gt(),rs(),Ss(),xs(),ju=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},la=(e,t,s,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`);for(let d=0;d<t;++d)i.push(s.indicesSet("a",e[d],`i[${d}]`));return i.push("return a;}"),i.join(`
`)},Nu=(e,t)=>{let s,o,i,d,a,p,g=t.format==="NHWC",w=t.blocksize,F=t.mode==="DCR";g?([s,o,i,d]=e.dims,a=F?[s,o,i,w,w,d/w**2]:[s,o,i,d/w**2,w,w],p=F?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([s,o,i,d]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=F?[s,w,w,d/w**2,o,i]:[s,d/w**2,w,w,o,i],p=F?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let D=e.reshape(a),m=D.dims.length,H=e.dataType,Q=pt("a",H,m),Z=ts("output",H,m),ue=he=>`
  ${he.registerUniform("output_size","u32").declareVariables(Q,Z)}

  ${la(p,m,Q,Z)}

  ${he.mainStart()}
    ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${Z.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${Z.setByOffset("global_idx",Q.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:he=>{let le=g?[s,o*w,i*w,d/w**2]:[s,d/w**2,o*w,i*w],Pe=et.size(le),Ee=D.dims,De=et.sortBasedOnPerm(Ee,p);return{outputs:[{dims:le,dataType:he[0].dataType}],dispatchGroup:{x:Math.ceil(Pe/64)},programUniforms:[{type:12,data:Pe},...Ut(Ee,De)]}},getShaderSource:ue}},Vu=(e,t)=>{ju(e.inputs),e.compute(Nu(e.inputs[0],t))},Uu=e=>as({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Co,Xn,ko,Wu,Gu,ua,Ku,ca,yn,qu,Hu,ih=v(()=>{Gt(),rs(),Ss(),xs(),Co="[a-zA-Z]|\\.\\.\\.",Xn="("+Co+")+",ko="^"+Xn+"$",Wu="("+Xn+",)*"+Xn,Gu="^"+Wu+"$",ua=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let s=this.symbolToIndices.get(e);s===void 0?s=[t]:s.push(t),this.symbolToIndices.set(e,s)}},Ku=class{constructor(e,t){var i;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[s,o]=t.includes("->")?t.split("->",2):[t,""];if(!s.match(RegExp(Gu)))throw new Error("Invalid LHS term");if(s.split(",").forEach((d,a)=>{let p=e[a].dims.slice();if(!d.match(RegExp(ko)))throw new Error("Invalid LHS term");let g=this.processTerm(d,!0,p,a);this.lhs.push(g)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([d,a])=>a.count===1||d==="...").map(([d])=>d).join("");else if(!o.match(RegExp(Xn)))throw new Error("Invalid RHS");(i=o.match(RegExp(Co,"g")))==null||i.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(d);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,t,s){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==t&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(s)}else o={count:1,dimValue:t,inputIndices:[s]};this.symbolToInfo.set(e,o)}processTerm(e,t,s,o=-1){let i=s.length,d=!1,a=[],p=0;if(!e.match(RegExp(ko))&&!t&&e!=="")throw new Error("Invalid LHS term");let g=e.match(RegExp(Co,"g")),w=new ua(o);return g==null||g.forEach((F,D)=>{if(F==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let m=i-g.length+1;if(m<0)throw new Error("Ellipsis out of bounds");if(a=s.slice(p,p+m),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let H=0;H<a.length;H++){let Q=String.fromCharCode(48+H);w.addSymbol(Q,D+H),this.addSymbol(Q,s[p++],o)}}else w.addSymbol(F,D+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(F,s[p++],o)}),w}},ca=e=>e+"_max",yn=(e,t,s,o)=>{let i=e.map(w=>w.length).map((w,F)=>pt(`input${F}`,t,w)),d=et.size(o),a=ts("output",t,o.length),p=[...s.symbolToInfo.keys()].filter(w=>!s.rhs.symbolToIndices.has(w)),g=w=>{let F=[],D="var prod = 1.0;",m="var sum = 0.0;",H="sum += prod;",Q=[],Z=[],ue=[],he=[],le=s.symbolToInfo.size===s.rhs.symbolToIndices.size;s.symbolToInfo.forEach((Ee,De)=>{var Qe;if(s.rhs.symbolToIndices.has(De)){let Je=(Qe=s.rhs.symbolToIndices.get(De))==null?void 0:Qe[0];Je!==void 0&&s.lhs.forEach((gt,It)=>{if(Ee.inputIndices.includes(It)){let Qt=gt.symbolToIndices.get(De);if(Qt===void 0)throw new Error("Invalid symbol error");Qt.forEach(Ms=>{F.push(`${i[It].indicesSet(`input${It}Indices`,Ms,a.indicesGet("outputIndices",Je))}`)})}})}else s.lhs.forEach((Je,gt)=>{if(Ee.inputIndices.includes(gt)){let It=Je.symbolToIndices.get(De);if(It===void 0)throw new Error("Invalid symbol error");It.forEach(Qt=>{Q.push(`${i[gt].indicesSet(`input${gt}Indices`,Qt,`${De}`)}`)}),he.push(`prod *= ${i[gt].getByIndices(`input${gt}Indices`)};`)}}),Z.push(`for(var ${De}: u32 = 0; ${De} < uniforms.${ca(De)}; ${De}++) {`),ue.push("}")});let Pe=le?[...F,`let sum = ${i.map((Ee,De)=>Ee.getByIndices(`input${De}Indices`)).join(" * ")};`]:[...F,m,...Z,...Q,D,...he,H,...ue];return`
            ${w.registerUniforms(p.map(Ee=>({name:`${ca(Ee)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${w.mainStart()}
            ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((Ee,De)=>`var input${De}Indices: ${i[De].type.indices};`).join(`
`)}
            ${Pe.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:s.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let w=p.filter(D=>s.symbolToInfo.has(D)).map(D=>{var m;return{type:12,data:((m=s.symbolToInfo.get(D))==null?void 0:m.dimValue)||0}});w.push({type:12,data:d});let F=e.map((D,m)=>[...Ut(D)]).reduce((D,m)=>D.concat(m),w);return F.push(...Ut(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:F}},getShaderSource:g}},qu=(e,t)=>{let s=new Ku(e.inputs,t.equation),o=s.outputDims,i=e.inputs.map((d,a)=>d.dims);e.compute(yn(i,e.inputs[0].dataType,s,o))},Hu=e=>{let t=e.equation.replace(/\s+/g,"");return as({equation:t})}}),Qu,So,Xu,Yu,Ju,ah=v(()=>{Gt(),rs(),xs(),Qu=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,s=Array.from(e[1].getBigInt64Array(),Number),o=s.length<t.length?0:s.length-t.length,i=t.length<s.length?0:t.length-s.length;for(;o<s.length&&i<t.length;++o,++i)if(s[o]!==t[i]&&s[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},So=(e,t)=>{let s=e.length-t.length,o=[];for(let i=0;i<s;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+s]:t[i]);return o},Xu=(e,t)=>e.length>t.length?So(e,t):So(t,e),Yu=e=>{let t=e[0].dims,s=Array.from(e[1].getBigInt64Array(),Number),o=Xu(t,s),i=e[0].dataType,d=i===9||et.size(t)===1,a=i===9||t.length>0&&t[t.length-1]%4===0?4:1,p=d||o.length>0&&o[o.length-1]%4===0?4:1,g=Math.ceil(et.size(o)/p),w=D=>{let m=pt("input",i,t.length,a),H=ts("output",i,o.length,p),Q;if(i===9){let Z=(ue,he,le="")=>`
          let outputIndices${he} = ${H.offsetToIndices(`outputOffset + ${he}u`)};
          let offset${he} = ${m.broadcastedIndicesToOffset(`outputIndices${he}`,H)};
          let index${he} = offset${he} / 4u;
          let component${he} = offset${he} % 4u;
          ${ue}[${he}] = ${le}(${m.getByOffset(`index${he}`)}[component${he}]);
        `;Q=`
        let outputOffset = global_idx * ${p};
        var data = vec4<u32>(0);
        ${Z("data",0,"u32")}
        ${Z("data",1,"u32")}
        ${Z("data",2,"u32")}
        ${Z("data",3,"u32")}
        ${H.setByOffset("global_idx","data")}
      }`}else Q=`
        let outputIndices = ${H.offsetToIndices(`global_idx * ${p}`)};
        let inputOffset = ${m.broadcastedIndicesToOffset("outputIndices",H)};
        let data = ${H.type.value}(${m.getByOffset(`inputOffset / ${a}`)});
        ${H.setByOffset("global_idx","data")}
      }`;return`
    ${D.registerUniform("vec_size","u32").declareVariables(m,H)}
    ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${Q}`},F=[{type:12,data:g},...Ut(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length};${a}${p}`,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:F})}},Ju=e=>{Qu(e.inputs),e.compute(Yu(e.inputs),{inputs:[0]})}}),$o,Zu,lh=v(()=>{Gt(),rs(),xs(),Ai(),$o=e=>{let t=e[0].dataType,s=et.size(e[0].dims),o=et.size(e[1].dims),i=o%4===0,d=a=>{let p=pt("x",t,[1],4),g=pt("bias",t,[1],4),w=ts("y",t,[1],4),F=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],D=H=>`
      let bias${H}_offset: u32 = (global_idx * 4 + ${H}) % uniforms.bias_size;
      let bias${H} = ${g.getByOffset(`bias${H}_offset / 4`)}[bias${H}_offset % 4];`,m=i?`
      let bias = ${g.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${D(0)}${D(1)}${D(2)}${D(3)}
      let bias = ${p.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(F).declareVariables(p,g,w)}

    ${$i(cr(t))}

    ${a.mainStart(Kr)}
      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${p.getByOffset("global_idx")};
      ${m}
      let x_in = x + bias;
      ${w.setByOffset("global_idx",yo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:d,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(s/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(s/Kr/4)}})}},Zu=e=>{e.inputs.length<2||et.size(e.inputs[1].dims)===0?eu(e):e.compute($o(e.inputs))}}),ec,Yn,tc,sc,uh=v(()=>{Gt(),rs(),Ss(),xs(),ec=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Yn=(e,t)=>{let s=e[0].dims,o=e[1].dims,i=s.length,d=et.normalizeAxis(t.axis,i),a=s.slice(0);a.splice(d,1,...o);let p=s[d],g=e[0].dataType===9?4:1,w=Math.ceil(et.size(a)/g),F=[{type:12,data:w},{type:6,data:p},{type:12,data:d},...Ut(e[0].dims,e[1].dims,a)],D=m=>{let H=pt("data",e[0].dataType,e[0].dims.length,g),Q=pt("inputIndices",e[1].dataType,e[1].dims.length),Z=ts("output",e[0].dataType,a.length,g),ue=le=>{let Pe=o.length,Ee=`var indicesIndices${le}  = ${Q.type.indices}(0);`;for(let De=0;De<Pe;De++)Ee+=`${Pe>1?`indicesIndices${le}[${De}]`:`indicesIndices${le}`} = ${a.length>1?`outputIndices${le}[uniforms.axis + ${De}]`:`outputIndices${le}`};`;Ee+=`
          var idx${le} = ${Q.getByIndices(`indicesIndices${le}`)};
          if (idx${le} < 0) {
            idx${le} = idx${le} + uniforms.axisDimLimit;
          }
          var dataIndices${le} : ${H.type.indices};
        `;for(let De=0,Qe=0;De<i;De++)De===d?(Ee+=`${i>1?`dataIndices${le}[${De}]`:`dataIndices${le}`} = u32(idx${le});`,Qe+=Pe):(Ee+=`${i>1?`dataIndices${le}[${De}]`:`dataIndices${le}`} = ${a.length>1?`outputIndices${le}[${Qe}]`:`outputIndices${le}`};`,Qe++);return Ee},he;if(e[0].dataType===9){let le=(Pe,Ee,De="")=>`
          let outputIndices${Ee} = ${Z.offsetToIndices(`outputOffset + ${Ee}u`)};
          ${ue(Ee)};
          let offset${Ee} = ${H.indicesToOffset(`dataIndices${Ee}`)};
          let index${Ee} = offset${Ee} / 4u;
          let component${Ee} = offset${Ee} % 4u;
          ${Pe}[${Ee}] = ${De}(${H.getByOffset(`index${Ee}`)}[component${Ee}]);
        `;he=`
        let outputOffset = global_idx * ${g};
        var value = vec4<u32>(0);
        ${le("value",0,"u32")}
        ${le("value",1,"u32")}
        ${le("value",2,"u32")}
        ${le("value",3,"u32")}
        ${Z.setByOffset("global_idx","value")}
      `}else he=`
      let outputIndices = ${Z.offsetToIndices("global_idx")};
      ${ue("")};
      let value = ${H.getByIndices("dataIndices")};
      ${Z.setByOffset("global_idx","value")};
      `;return`
      ${m.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(H,Q,Z)}
      ${m.mainStart()}
        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${he}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:F}),getShaderSource:D}},tc=e=>as({axis:e.axis}),sc=(e,t)=>{let s=e.inputs;ec(s),e.compute(Yn(e.inputs,t))}}),rc,Io,nc,ch=v(()=>{Gt(),rs(),xs(),rc=(e,t,s,o,i,d,a,p,g)=>{let w=[{type:12,data:d},{type:12,data:o},{type:12,data:i},{type:12,data:s},{type:12,data:a},{type:12,data:p},{type:12,data:g}],F=[d];w.push(...Ut(t.dims,F));let D=m=>{let H=pt("indices_data",t.dataType,t.dims.length),Q=ts("input_slice_offsets_data",12,1,1),Z=[H,Q],ue=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:s.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${m.registerUniforms(ue).declareVariables(...Z)}
  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${s.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${s.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:F,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:w}),getShaderSource:D},{inputs:[t],outputs:[-1]})[0]},Io=(e,t)=>{let s=e.inputs,o=s[0].dims,i=s[0].dataType,d=s[1].dims,a=d[d.length-1],p=et.sizeToDimension(d,d.length-1),g=et.sizeFromDimension(o,t.batchDims+a),w=et.sizeToDimension(o,t.batchDims),F=et.sizeFromDimension(o,t.batchDims),D=p/w,m=new Array(a),H=g;for(let Ee=0;Ee<a;++Ee)m[a-1-Ee]=H,H*=o[t.batchDims+a-1-Ee];let Q=rc(e,s[1],m,t.batchDims,o,p,D,F,a),Z=t.batchDims+a;if(Z>o.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let ue=d.slice(0,-1).concat(o.slice(Z)),he=et.size(ue),le=[{type:12,data:he},{type:12,data:g},...Ut(s[0].dims,Q.dims,ue)],Pe=Ee=>{let De=pt("data",s[0].dataType,s[0].dims.length),Qe=pt("slice_offsets",12,Q.dims.length),Je=ts("output",s[0].dataType,ue.length);return`
          ${Ee.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(De,Qe,Je)}
            ${Ee.mainStart()}
            ${Ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:ue,dataType:i}],dispatchGroup:{x:Math.ceil(he/64)},programUniforms:le}),getShaderSource:Pe},{inputs:[s[0],Q]})},nc=e=>({batchDims:e.batch_dims,cacheKey:""})}),oc,dh,ic,ac,hh=v(()=>{Gt(),rs(),Ss(),xs(),oc=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let s=et.normalizeAxis(t.quantizeAxis,e[0].dims.length),o=t.blockSize,i=e[0],d=e[2],a=e.length===4?e[3]:void 0;if(d.dims.length!==i.dims.length||!i.dims.map((p,g)=>g===s?Math.ceil(p/o)===d.dims[g]:p===d.dims[g]).reduce((p,g)=>p&&g,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==d.dims.length||!a.dims.map((p,g)=>p===d.dims[g]).reduce((p,g)=>p&&g,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},dh=(e,t)=>{let s=e[0].dims,o=e[1].dims,i=s.length,d=et.normalizeAxis(t.gatherAxis,i),a=et.normalizeAxis(t.quantizeAxis,i),p=s.slice(0);p.splice(d,1,...o);let g=et.size(p),w=e[2].dataType,F=e[0].dataType===22,D=[{type:12,data:g},{type:12,data:a},{type:12,data:d},{type:12,data:t.blockSize},...Ut(...e.map((H,Q)=>H.dims),p)],m=H=>{let Q=pt("data",e[0].dataType,e[0].dims.length),Z=pt("inputIndices",e[1].dataType,e[1].dims.length),ue=pt("scales",e[2].dataType,e[2].dims.length),he=e.length>3?pt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,le=ts("output",w,p.length),Pe=[Q,Z,ue];he&&Pe.push(he);let Ee=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${H.registerUniforms(Ee).declareVariables(...Pe,le)}
        ${H.mainStart()}
        let output_indices = ${le.offsetToIndices("global_idx")};
        var indices_indices = ${Z.type.indices}(0);
        ${o.length>1?`
          for (var i: u32 = 0; i < ${o.length}; i++) {
            let index = ${le.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${Z.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${le.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${Q.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${le.indicesGet("output_indices","i")};
          ${Q.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${Z.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${s[d]};
        }
        ${Q.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${p.length}; i++) {
          let index = ${le.indicesGet("output_indices",`i + ${o.length} - 1`)};
          ${Q.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${Q.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${Q.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${F?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${ue.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${ue.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${ue.getByIndices("scale_indices")};
        ${he?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${he.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${he.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${F?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${cr(w)}(quantized_data - zero_point) * scale;
        ${le.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((H,Q)=>Q!==1).map(H=>H.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(H,Q)=>"rank")},getRunData:()=>({outputs:[{dims:p,dataType:w}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:D}),getShaderSource:m}},ic=(e,t)=>{let s=e.inputs;oc(s,t),e.compute(dh(e.inputs,t))},ac=e=>as({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),jn,lc,uc,cc,ph=v(()=>{Gt(),rs(),Ss(),xs(),jn=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},lc=(e,t)=>{let s=e[0].dims,o=e[0].dataType,i=s.length,d=e[1].dims,a=e[1].dataType,p=et.normalizeAxis(t.axis,i),g=s[p],w=d.slice(0),F=et.size(w),D=pt("input",o,i),m=pt("indicesInput",a,d.length),H=ts("output",o,w.length),Q=[{type:12,data:F},{type:6,data:g},{type:12,data:p}];return Q.push(...Ut(s,d,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:Q}),getShaderSource:Z=>`
      ${Z.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(D,m,H)}
      ${Z.mainStart()}
      ${Z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${H.offsetToIndices("global_idx")};

      var idx = ${m.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${D.type.indices}(outputIndices);
      ${D.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${D.getByIndices("inputIndices")};

      ${H.setByOffset("global_idx","value")};
  }`}},uc=e=>as({axis:e.axis}),cc=(e,t)=>{let s=e.inputs;jn(s),e.compute(lc(e.inputs,t))}}),dc,hc,pc,Ao,Yh=v(()=>{Gt(),rs(),xs(),dc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},hc=(e,t)=>{let s=e[0].dims.slice(),o=e[1].dims.slice(),[i,d,a]=hn.getShapeOfGemmResult(s,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),p=[i,d];if(!p)throw new Error("Can't use gemm on the given tensors");let g=16,w=Math.ceil(d/g),F=Math.ceil(i/g),D=!0,m=et.size(p),H=[{type:12,data:D?w:m},{type:12,data:i},{type:12,data:d},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],Q=["type","type"];e.length===3&&(H.push(...Ut(e[2].dims)),Q.push("rank")),H.push(...Ut(p));let Z=he=>{let le="";t.transA&&t.transB?le="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?le="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?le="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(le="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let Pe=t.alpha===1?"":"value *= uniforms.alpha;",Ee=pt("a",e[0].dataType,e[0].dims),De=pt("b",e[1].dataType,e[1].dims),Qe=Ee.type.value,Je=null,gt=[Ee,De];e.length===3&&(Je=pt("c",e[2].dataType,e[2].dims.length),gt.push(Je));let It=ts("output",e[0].dataType,p.length);gt.push(It);let Qt=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${he.registerUniforms(Qt).declareVariables(...gt)}

  ${he.mainStart()}
    ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${Qe}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${le}
    }

    ${Pe}
    ${Je!=null?`let cOffset = ${Je.broadcastedIndicesToOffset("vec2(m, n)",It)}; value += ${Qe}(uniforms.beta) * ${Je.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},ue=he=>{let le=pt("a",e[0].dataType,e[0].dims),Pe=pt("b",e[1].dataType,e[1].dims),Ee=null,De=[le,Pe];e.length===3&&(Ee=pt("c",e[2].dataType,e[2].dims.length),De.push(Ee));let Qe=ts("output",e[0].dataType,p.length);De.push(Qe);let Je=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],gt="",It="";t.transA&&t.transB?(It=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${le.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${Pe.type.value}(0);
      }
      `,gt="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(It=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${le.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${Pe.type.value}(0);
      }
      `,gt="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(It=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${le.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${Pe.type.value}(0);
      }
      `,gt="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(It=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${le.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${Pe.type.value}(0);
      }
      `,gt="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let Qt=t.alpha===1?"":"value *= uniforms.alpha;";return`
  ${he.registerUniforms(Je).declareVariables(...De)}
  var<workgroup> tile_a: array<array<${le.type.storage}, ${g}>, ${g}>;
  var<workgroup> tile_b: array<array<${Pe.type.storage}, ${g}>, ${g}>;
  ${he.mainStart([g,g,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${g};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${g};
    let num_tiles = (uniforms.K - 1) / ${g} + 1;
    var k_start = 0u;
    var value = ${Qe.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${It}
      k_start = k_start + ${g};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${g}; k++) {
        ${gt}
      }
      workgroupBarrier();
    }

    ${Qt}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${Ee!=null?`let cOffset = ${Ee.broadcastedIndicesToOffset("vec2(m, n)",Qe)}; value += ${Qe.type.value}(uniforms.beta) * ${Ee.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return D?{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:Q},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:w*F},programUniforms:H}),getShaderSource:ue}:{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:Q},getRunData:()=>({outputs:[{dims:p,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:H}),getShaderSource:Z}},pc=e=>{let t=e.transA,s=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:s,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Ao=(e,t)=>{dc(e.inputs),e.compute(hc(e.inputs,t))}}),un,mn,$n,In,mc,da,fc,_c,ha,gc,wc,pa,yc,Mc,ma=v(()=>{Gt(),rs(),Ss(),xs(),[un,mn,$n,In]=[0,1,2,3],mc=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},da=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,fc=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,_c=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,ha=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,gc=(e,t,s)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {
     var pixel = ${t}(0);
     var indices = vec4<u32>(0);
     indices[${un}] = batch;
     indices[${mn}] = channel;`+(()=>{switch(s.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${$n}] = u32(r);
            indices[${In}] = u32(c);
          }
        `;case"border":return`
          indices[${$n}] = u32(clamp(r, 0, H - 1));
          indices[${In}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${$n}] = gs_reflect(r, border[1], border[3]);
          indices[${In}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${s.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,wc=(e,t,s)=>(()=>{switch(s.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${un}], indices[${mn}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${un}], indices[${mn}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${un}], indices[${mn}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${un}], indices[${mn}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${un}], indices[${mn}], border);

          let dx2 = ${t}(f32(x2) - x);
          let dx1 = ${t}(x - f32(x1));
          let dy2 = ${t}(f32(y2) - y);
          let dy1 = ${t}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${t}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${un}], indices[${mn}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${s.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,pa=(e,t)=>{let s=pt("x",e[0].dataType,e[0].dims.length),o=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=pt("grid",e[1].dataType,o.length,2),d=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];t.format==="NHWC"&&(d=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[un,mn,$n,In]=[0,3,1,2]);let a=ts("output",e[0].dataType,d.length),p=s.type.value,g=et.size(d),w=[{type:12,data:g},...Ut(e[0].dims,o,d)],F=D=>`
  ${D.registerUniform("output_size","u32").declareVariables(s,i,a)}
  ${da}
  ${fc(p)}
  ${_c(t)}
  ${ha(t)}
  ${gc(s,p,t)}

  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${$n}]);
      let W_in = i32(uniforms.x_shape[${In}]);

      ${t.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${a.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${un}], indices[${$n}], indices[${In}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${wc(a,p,t)}
  }`;return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:D=>{let m=et.size(d);return{outputs:[{dims:d,dataType:D[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}},getShaderSource:F}},yc=(e,t)=>{mc(e.inputs),e.compute(pa(e.inputs,t))},Mc=e=>as({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Wr,bc,vc,fa,_a,An,mh,Tc=v(()=>{Gt(),rs(),Ss(),ye(),fi(),xs(),wn(),Wr=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,bc=(e,t)=>{let s=e[0],o=Wr(e,1),i=Wr(e,2),d=Wr(e,3),a=Wr(e,4),p=Wr(e,5),g=Wr(e,6),w=Wr(e,7);if(s.dims.length!==3&&s.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let F=s.dims[0],D=s.dims[1],m=s.dims.length===3?s.dims[2]:t.numHeads*s.dims[4],H=D,Q=0,Z=0,ue=Math.floor(m/t.numHeads);if(g&&w&&et.size(g.dims)&&et.size(w.dims)){if(g.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(g.dims[0]!==F||g.dims[1]!==t.numHeads||g.dims[3]!==ue)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(w.dims[0]!==F||w.dims[1]!==t.numHeads||w.dims[3]!==ue)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(g.dims[2]!==w.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(w.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');Q=g.dims[2],Z=g.dims[2]}else if(g&&et.size(g.dims)||w&&et.size(w.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let he;if(o&&et.size(o.dims)>0){if(s.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(o.dims.length<3||o.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==o.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(o.dims.length===3){if(o.dims[2]!==s.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');he=2,H=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==ue)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');he=5,H=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==ue)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');he=0,H=o.dims[2]}}else{if(s.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(s.dims[2]!==t.numHeads||s.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');he=3}if(d&&et.size(d.dims)>0){if(d.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&o.dims.length===5&&o.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let le=Q+H,Pe=0;if(a&&et.size(a.dims)>0){Pe=8;let Je=a.dims;throw Je.length===1?Je[0]===F?Pe=1:Je[0]===3*F+2&&(Pe=3):Je.length===2&&Je[0]===F&&Je[1]===le&&(Pe=5),Pe===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let Ee=!1,De=m;if(i&&et.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(H!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');De=i.dims[2]}else{if(H!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');De=i.dims[1]*i.dims[3],Ee=!0}}let Qe=!1;if(a&&et.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(p&&et.size(p.dims)>0){if(p.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(p.dims[0]!==F||p.dims[1]!==t.numHeads||p.dims[2]!==D||p.dims[3]!==le)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:F,sequenceLength:D,pastSequenceLength:Q,kvSequenceLength:H,totalSequenceLength:le,maxSequenceLength:Z,inputHiddenSize:0,hiddenSize:m,vHiddenSize:De,headSize:ue,vHeadSize:Math.floor(De/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:Pe,scale:t.scale,broadcastResPosBias:Qe,passPastInKv:Ee,qkvFormat:he}},vc=e=>as({...e}),fa=as({perm:[0,2,1,3]}),_a=(e,t,s,o,i,d,a)=>{let p=[o,i,d],g=et.size(p),w=[{type:12,data:g},{type:12,data:a},{type:12,data:d}],F=D=>{let m=ts("qkv_with_bias",t.dataType,p),H=pt("qkv",t.dataType,p),Q=pt("bias",s.dataType,p),Z=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${D.registerUniforms(Z).declareVariables(H,Q,m)}
  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:w}),getShaderSource:F},{inputs:[t,s],outputs:[-1]})[0]},An=(e,t,s,o,i,d,a,p)=>{let g=d;if(a&&et.size(a.dims)>0){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return g=_a(e,d,a,t,o,s*i,p),g=g.reshape([t,o,s,i]),s===1||o===1?g:e.compute(Yr(g,fa.perm),{inputs:[g],outputs:[-1]})[0]}else return d.dims.length===3&&(g=d.reshape([t,o,s,i])),s===1||o===1?g:e.compute(Yr(g,fa.perm),{inputs:[g],outputs:[-1]})[0]},mh=(e,t)=>{let s=bc(e.inputs,t),o=e.inputs[0],i=Wr(e.inputs,1),d=Wr(e.inputs,2),a=Wr(e.inputs,3),p=Wr(e.inputs,4),g=Wr(e.inputs,5),w=Wr(e.inputs,6),F=Wr(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let D=i&&d&&i.dims.length===4&&d.dims.length===4,m=An(e,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,o,a,0);if(D)return Kn(e,m,i,d,p,void 0,w,F,g,s);if(!i||!d)throw new Error("key and value must be provided");let H=An(e,s.batchSize,s.numHeads,s.kvSequenceLength,s.headSize,i,a,s.hiddenSize),Q=An(e,s.batchSize,s.numHeads,s.kvSequenceLength,s.vHeadSize,d,a,2*s.hiddenSize);Kn(e,m,H,Q,p,void 0,w,F,g,s)}}),xc,ga,Ec,Pc,Oo,Cc,kc,wa=v(()=>{Gt(),rs(),Ss(),xs(),xc=e=>{if(!e||e.length<1)throw new Error("too few inputs")},ga=(e,t)=>{let s=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>s.push(Number(i))),o=s.length),as({numOutputs:o,axis:t.axis,splitSizes:s})},Ec=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${Zt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,Pc=e=>{let t=e.length,s=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?s.push(i):o===0?s.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?s.push(`else { ${i} }`):s.push(`else if (output_number == ${o}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${s.join(`
`)}
      }`},Oo=(e,t)=>{let s=e[0].dims,o=et.size(s),i=e[0].dataType,d=et.normalizeAxis(t.axis,s.length),a=new Array(t.numOutputs),p=pt("input",i,s.length),g=new Array(t.numOutputs),w=[],F=[],D=0,m=[{type:12,data:o}];for(let Q=0;Q<t.numOutputs;Q++){D+=t.splitSizes[Q],g[Q]=D;let Z=s.slice();Z[d]=t.splitSizes[Q],F.push(Z),a[Q]=ts(`output${Q}`,i,Z.length),w.push({dims:F[Q],dataType:e[0].dataType})}m.push({type:12,data:g},...Ut(s,...F));let H=Q=>`
  ${Q.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",g.length).declareVariables(p,...a)}
  ${Ec(g.length)}
  ${Pc(a)}

  ${Q.mainStart()}
    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${p.offsetToIndices("global_idx")};
    var index = ${p.indicesGet("indices",d)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Zt("uniforms.size_in_split_axis","output_number - 1u",g.length)};
      ${p.indicesSet("indices",d,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:H,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:m})}},Cc=(e,t)=>{xc(e.inputs);let s=e.inputs.length===1?t:ga(e.inputs,t);e.compute(Oo(e.inputs,s),{inputs:[0]})},kc=e=>{let t=e.axis,s=e.splitSizes,o=e.numOutputs<0?s.length:e.numOutputs;if(o!==s.length)throw new Error("numOutputs and splitSizes lengh must be equal");return as({axis:t,numOutputs:o,splitSizes:s})}}),fh,_h,Fo,ya,gh=v(()=>{Ss(),fi(),Tc(),wa(),wn(),fh=(e,t)=>{if(t.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let s=e[0],o=e[1],i=e[2],d=e[3],a=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(s.dims.length!==3&&s.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=!1,g=s.dims[0],w=s.dims[1],F=s.dims.length===3?p?s.dims[2]/3:s.dims[2]:t.numHeads*s.dims[4],D=w,m=0,H=!o||o.dims.length===0,Q=Math.floor(H?F/(t.numHeads+2*t.kvNumHeads):F/t.numHeads);H&&(F=Q*t.numHeads);let Z=d&&d.dims.length!==0,ue=a&&a.dims.length!==0;if(Z&&d.dims.length===4&&d.dims[0]===g&&d.dims[1]!==t.kvNumHeads&&d.dims[2]===t.kvNumHeads&&d.dims[3]===Q)throw new Error("BSNH pastKey/pastValue is not supported");if(Z&&ue){if(d.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(a.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');m=d.dims[2]}else if(Z||ue)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let he=1;if(o&&o.dims.length>0){if(s.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(o.dims.length<3||o.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==o.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(o.dims.length===3){if(s.dims[2]%o.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');D=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==Q)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');D=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==Q)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');D=o.dims[2]}}else{if(s.dims.length!==3&&s.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(s.dims.length===5&&(s.dims[2]!==t.numHeads||s.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');he=3}let le=0,Pe=!1,Ee=t.kvNumHeads?Q*t.kvNumHeads:F;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(D!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Ee=i.dims[2]}else{if(D!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');Ee=i.dims[1]*i.dims[3],Pe=!0}}let De=e.length>4?e[5]:void 0;if(De&&De.dims.length!==1&&De.dims[0]!==g)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:g,sequenceLength:w,pastSequenceLength:m,kvSequenceLength:D,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:F,vHiddenSize:Ee,headSize:Q,vHeadSize:Math.floor(Ee/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:le,scale:t.scale,broadcastResPosBias:!1,passPastInKv:Pe,qkvFormat:he}},_h=as({perm:[0,2,1,3]}),Fo=(e,t,s)=>{let o=t,i=s.kvNumHeads;return t.dims.length===3&&s.kvSequenceLength!==0&&(o=t.reshape([s.batchSize,s.kvSequenceLength,i,s.headSize]),o=e.compute(Yr(o,_h.perm),{inputs:[o],outputs:[-1]})[0]),o},ya=(e,t)=>{var ue;let s=fh(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((ue=e.inputs[1])==null?void 0:ue.dims.length)===5)throw new Error("Packed KV is not implemented");let o=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,d=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,a=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,p=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,g=e.inputs.length>4?e.inputs[5]:void 0,w=e.inputs.length>5?e.inputs[6]:void 0,F=s.kvNumHeads?s.kvNumHeads:s.numHeads,D=as({axis:2,numOutputs:3,splitSizes:[s.numHeads*s.headSize,F*s.headSize,F*s.headSize]}),[m,H,Q]=!i&&!d?e.compute(Oo([o],D),{inputs:[o],outputs:[-1,-1,-1]}):[o,i,d],Z=An(e,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,m,void 0,0);Kn(e,Z,Fo(e,H,s),Fo(e,Q,s),void 0,void 0,a,p,void 0,s,g,w)}}),Ma,ba,Sc,$c,Ic=v(()=>{Gt(),rs(),wn(),xs(),Ma=(e,t,s,o,i,d,a,p)=>{let g=vs(d),w=g===1?"f32":`vec${g}f`,F=g===1?"vec2f":`mat2x${g}f`,D=i*a,m=64;D===1&&(m=256);let H=[i,a,d/g],Q=[i,a,2],Z=["rank","type","type"],ue=[];ue.push(...Ut(H,Q));let he=le=>{let Pe=pt("x",t.dataType,3,g),Ee=pt("scale",s.dataType,s.dims),De=pt("bias",o.dataType,o.dims),Qe=ts("output",1,3,2),Je=[Pe,Ee,De,Qe];return`
  var<workgroup> workgroup_shared : array<${F}, ${m}>;
  const workgroup_size = ${m}u;
  ${le.declareVariables(...Je)}
  ${le.mainStart(m)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${w}(0);
    var squared_sum = ${w}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${w}(${Pe.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${F}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Cr("workgroup_shared[0][0]",g)} / f32(hight * ${g});
      let squared_sum_final = ${Cr("workgroup_shared[0][1]",g)} / f32(hight * ${g});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${p}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${g};${p};${m}`,inputDependencies:Z},getRunData:()=>({outputs:[{dims:Q,dataType:1}],dispatchGroup:{x:D},programUniforms:ue}),getShaderSource:he},{inputs:[t,s,o],outputs:[-1]})[0]},ba=(e,t,s)=>{let o=t[0].dims,i=o,d=2,a=o[0],p=o[1],g=et.sizeFromDimension(o,d),w=vs(g),F=et.size(i)/w,D=Ma(e,t[0],t[1],t[2],a,g,p,s.epsilon),m=[a,p,g/w],H=[a,p],Q=["type","none"],Z=ue=>{let he=pt("x",t[0].dataType,m.length,w),le=pt("scale_shift",1,H.length,2),Pe=ts("output",t[0].dataType,m.length,w),Ee=[he,le,Pe];return`
  ${ue.registerUniform("output_size","u32").declareVariables(...Ee)}
  ${ue.mainStart()}
  ${ue.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${Pe.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${le.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${he.getByOffset("global_idx")} * ${Pe.type.value}(scale_shift.x) + ${Pe.type.value}(scale_shift.y);
      ${Pe.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${w}`,inputDependencies:Q},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(F/64)},programUniforms:[{type:12,data:F},...Ut(m,H,m)]}),getShaderSource:Z},{inputs:[t[0],D]})},Sc=(e,t,s)=>{let o=t[0].dims,i=o,d=o[0],a=o[o.length-1],p=et.sizeFromDimension(o,1)/a,g=vs(a),w=et.size(i)/g,F=[{type:12,data:p},{type:12,data:Math.floor(a/g)}],D=["type","type"],m=!1,H=[0,o.length-1];for(let he=0;he<o.length-2;he++)m=m||o[he+1]!==1,H.push(he+1);m=m&&o[o.length-1]!==1;let Q=m?e.compute(Yr(e.inputs[0],H),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:o.length},(he,le)=>o[H[le]])),Z=Ma(e,Q,t[1],t[2],d,p,a,s.epsilon),ue=he=>{let le=Gs(t[0].dataType),Pe=g===1?"vec2f":`mat${g}x2f`,Ee=Je=>{let gt=Je===0?"x":"y",It=g===1?"f32":`vec${g}f`;switch(g){case 1:return`${le}(${It}(scale.${gt}))`;case 2:return`vec2<${le}>(${It}(scale[0].${gt}, scale[1].${gt}))`;case 4:return`vec4<${le}>(${It}(scale[0].${gt}, scale[1].${gt}, scale[2].${gt}, scale[3].${gt}))`;default:throw new Error(`Not supported compoents ${g}`)}},De=pt("input",t[0].dataType,t[0].dims,g),Qe=ts("output",t[0].dataType,i,g);return`
  @group(0) @binding(0) var<storage, read> input : array<${De.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${Pe}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${Qe.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${he.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${Ee(0)}, ${Ee(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${g}`,inputDependencies:D},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:F}),getShaderSource:ue},{inputs:[t[0],Z]})},$c=(e,t)=>{t.format==="NHWC"?Sc(e,e.inputs,t):ba(e,e.inputs,t)}}),Ac,Oc,va,wh=v(()=>{Gt(),rs(),xs(),Ac=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Oc=(e,t,s)=>{let o=t.simplified,i=e[0].dims,d=e[1],a=!o&&e[2],p=i,g=et.normalizeAxis(t.axis,i.length),w=et.sizeToDimension(i,g),F=et.sizeFromDimension(i,g),D=et.size(d.dims),m=a?et.size(a.dims):0;if(D!==F||a&&m!==F)throw new Error(`Size of X.shape()[axis:] == ${F}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${D} and bias size of ${m}`);let H=[];for(let De=0;De<i.length;++De)De<g?H.push(i[De]):H.push(1);let Q=vs(F),Z=["type","type"],ue=[{type:12,data:w},{type:1,data:F},{type:12,data:Math.floor(F/Q)},{type:1,data:t.epsilon}];a&&Z.push("type");let he=s>1,le=s>2,Pe=De=>{let Qe=Gs(e[0].dataType),Je=[pt("x",e[0].dataType,e[0].dims,Q),pt("scale",d.dataType,d.dims,Q)];a&&Je.push(pt("bias",a.dataType,a.dims,Q)),Je.push(ts("output",e[0].dataType,p,Q)),he&&Je.push(ts("mean_data_output",1,H)),le&&Je.push(ts("inv_std_output",1,H));let gt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${De.registerUniforms(gt).declareVariables(...Je)}
  ${De.mainStart()}
    ${De.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${yr("f32",Q)};
    var mean_square_vector = ${yr("f32",Q)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${dr(Qe,Q,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Cr("mean_vector",Q)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Cr("mean_square_vector",Q)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${dr(Qe,Q,"x[j + offset]")};
      let f32scale = ${dr(Qe,Q,"scale[j]")};
      output[j + offset] = ${Je[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale
        ${a?`+ ${dr(Qe,Q,"bias[j]")}`:""}
      );
    }

    ${he?"mean_data_output[global_idx] = mean":""};
    ${le?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},Ee=[{dims:p,dataType:e[0].dataType}];return he&&Ee.push({dims:H,dataType:1}),le&&Ee.push({dims:H,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${Q};${s};${o}`,inputDependencies:Z},getRunData:()=>({outputs:Ee,dispatchGroup:{x:Math.ceil(w/64)},programUniforms:ue}),getShaderSource:Pe}},va=(e,t)=>{Ac(e.inputs),e.compute(Oc(e.inputs,t,e.outputCount))}}),Fc,Dc,yh=v(()=>{rs(),Mo(),qi(),Fc=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Dc=e=>{Fc(e.inputs);let t=Pr.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let s=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];if(s<8&&o<8)e.compute(Ui(e.inputs,{activation:""},t));else{let i=t[t.length-2],d=et.size(e.inputs[0].dims.slice(0,-2)),a=et.size(e.inputs[1].dims.slice(0,-2));if(d!==1&&i===1&&a===1){let p=e.inputs[0].reshape([1,d,o]),g=e.inputs[1].reshape([1,o,s]),w=[1,d,s],F=[p,g];e.compute(vo(F,{activation:""},t,w),{inputs:F})}else e.compute(vo(e.inputs,{activation:""},t))}}}),Lc,zc,Bc,Rc,jc,Nc=v(()=>{Gt(),rs(),Ss(),xs(),Lc=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let s=e[0],o=s.dims.length;if(s.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),d=t.blockSize/8*t.bits,a=e[1];if(!et.areEqual(a.dims,[t.n,i,d]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(et.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let g=e[3].dims,w=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(et.size(g)!==w)throw new Error("zeroPoints input size error.")}},zc=(e,t)=>{let s=e[0].dims,o=s.length,i=s[o-2],d=t.k,a=t.n,p=s.slice(0,o-2),g=et.size(p),w=e[1].dims[2]/4,F=e[0].dataType,D=vs(t.k),m=vs(w),H=vs(a),Q=p.concat([i,a]),Z=i>1&&a/H%2===0?2:1,ue=et.size(Q)/H/Z,he=64,le=[],Pe=[g,i,d/D],Ee=et.convertShape(e[1].dims).slice();Ee.splice(-1,1,w/m),le.push(...Ut(Pe)),le.push(...Ut(Ee)),le.push(...Ut(e[2].dims)),e.length===4&&le.push(...Ut(et.convertShape(e[3].dims)));let De=[g,i,a/H];le.push(...Ut(De));let Qe=Je=>{let gt=Pe.length,It=pt("a",e[0].dataType,gt,D),Qt=pt("b",12,Ee.length,m),Ms=pt("scales",e[2].dataType,e[2].dims.length),ls=[It,Qt,Ms],ss=e.length===4?pt("zero_points",12,e[3].dims.length):void 0;ss&&ls.push(ss);let ks=De.length,jt=ts("output",e[0].dataType,ks,H),ys=Gs(e[0].dataType),Ns=(()=>{switch(D){case 1:return`array<${ys}, 8>`;case 2:return`mat4x2<${ys}>`;case 4:return`mat2x4<${ys}>`;default:throw new Error(`${D}-component is not supported.`)}})(),hs=()=>{let Pt=`
          // reuse a data
            var input_offset = ${It.indicesToOffset(`${It.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Ns};
            for (var j: u32 = 0; j < ${8/D}; j++) {
              a_data[j] = ${It.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Xt=0;Xt<H*Z;Xt++)Pt+=`
            b_value = ${m===1?`b${Xt}_data`:`b${Xt}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Ns}(${Array.from({length:4},(Vs,Tr)=>`${ys}(b_value_lower[${Tr}]), ${ys}(b_value_upper[${Tr}])`).join(", ")});
            b_dequantized_values = ${D===1?`${Ns}(${Array.from({length:8},(Vs,Tr)=>`(b_quantized_values[${Tr}] - ${ss?`zero_point${Xt}`:"zero_point"}) * scale${Xt}`).join(", ")});`:`(b_quantized_values - ${Ns}(${Array(8).fill(`${ss?`zero_point${Xt}`:"zero_point"}`).join(",")})) * scale${Xt};`};
            workgroup_shared[local_id.x * ${Z} + ${Math.floor(Xt/H)}]${H>1?`[${Xt%H}]`:""} += ${Array.from({length:8/D},(Vs,Tr)=>`${D===1?`a_data[${Tr}] * b_dequantized_values[${Tr}]`:`dot(a_data[${Tr}], b_dequantized_values[${Tr}])`}`).join(" + ")};
          `;return Pt},bs=()=>{let Pt=`
            var col_index = col * ${H};
            ${ss?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ys}(8);`}
            `;for(let Xt=0;Xt<H*Z;Xt++)Pt+=`
            let scale${Xt} = ${Ms.getByOffset("col_index * nBlocksPerCol + block")};
            ${ss?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${ss.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Xt} = ${ys}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Pt},Ks=()=>{let Pt=`col_index = col * ${H};`;for(let Xt=0;Xt<H*Z;Xt++)Pt+=`
            let b${Xt}_data = ${Qt.getByIndices(`${Qt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Pt+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Ns};
            var b_dequantized_values: ${Ns};`,Pt};return`
        var<workgroup> workgroup_shared: array<${jt.type.value}, ${Z*he}>;
        ${Je.declareVariables(...ls,jt)}
        ${Je.mainStart([he,1,1])}
          let output_indices = ${jt.offsetToIndices(`(global_idx / ${he}) * ${Z}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${he}) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/D};
            ${bs()}
            for (var word: u32 = 0; word < ${w}; word += ${m}) {
              ${Ks()}
              for (var i: u32 = 0; i < ${m}; i++) {
                ${hs()}
                word_offset += ${8/D};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${Z}) {
            var output_value: ${jt.type.value} = ${jt.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${he}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${Z};
            }
            ${jt.setByIndices(`${jt.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${D};${m};${H};${Z};${he}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:Q,dataType:F}],dispatchGroup:{x:ue},programUniforms:le}),getShaderSource:Qe}},Bc=(e,t)=>{let s=e[0].dims,o=s.length,i=s[o-2],d=t.k,a=t.n,p=s.slice(0,o-2),g=et.size(p),w=e[1].dims[2]/4,F=e[0].dataType,D=vs(t.k),m=vs(w),H=p.concat([i,a]),Q=128,Z=a%8===0?8:a%4===0?4:1,ue=Q/Z,he=ue*m*8,le=he/D,Pe=he/t.blockSize,Ee=et.size(H)/Z,De=[],Qe=[g,i,d/D],Je=et.convertShape(e[1].dims).slice();Je.splice(-1,1,w/m),De.push(...Ut(Qe)),De.push(...Ut(Je)),De.push(...Ut(e[2].dims)),e.length===4&&De.push(...Ut(et.convertShape(e[3].dims)));let gt=[g,i,a];De.push(...Ut(gt));let It=Qt=>{let Ms=Qe.length,ls=pt("a",e[0].dataType,Ms,D),ss=pt("b",12,Je.length,m),ks=pt("scales",e[2].dataType,e[2].dims.length),jt=[ls,ss,ks],ys=e.length===4?pt("zero_points",12,e[3].dims.length):void 0;ys&&jt.push(ys);let Ns=gt.length,hs=ts("output",e[0].dataType,Ns),bs=Gs(e[0].dataType),Ks=()=>{switch(D){case 1:return`
          let a_data0 = vec4<${bs}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${bs}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${bs}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${bs}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${D}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${ls.type.value}, ${le}>;
        var<workgroup> inter_results: array<array<${hs.type.value}, ${ue}>, ${Z}>;
        ${Qt.declareVariables(...jt,hs)}
        ${Qt.mainStart([ue,Z,1])}
          let output_indices = ${hs.offsetToIndices(`workgroup_index * ${Z}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${Pe} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${le};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${le}; a_offset += ${Q})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${ls.getByIndices(`${ls.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${ls.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${Pe} + local_id.x;
            ${ys?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${ys.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${bs}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${bs}(8);`}
            let scale = ${ks.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${ss.getByIndices(`${ss.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/D};
            for (var i: u32 = 0; i < ${m}; i++) {
              ${Ks()}
              let b_value = ${m===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${bs}>(${Array.from({length:4},(Pt,Xt)=>`${bs}(b_value_lower[${Xt}]), ${bs}(b_value_upper[${Xt}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${bs}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Pt,Xt)=>`${`dot(a_data${Xt}, b_dequantized_values[${Xt}])`}`).join(" + ")};
              word_offset += ${8/D};
            }
            workgroupBarrier();
          }

          if (local_idx < ${Z}) {
            var output_value: ${hs.type.value} = ${hs.type.value}(0);
            for (var b = 0u; b < ${ue}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${hs.setByIndices(`${hs.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${D};${m};${ue};${Z}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:H,dataType:F}],dispatchGroup:{x:Ee},programUniforms:De}),getShaderSource:It}},Rc=(e,t)=>{Lc(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Bc(e.inputs,t)):e.compute(zc(e.inputs,t))},jc=e=>as(e)}),Vc,Uc,Ta,Wc,Gc,Xs,Mh,bh,vh,Kc=v(()=>{Gt(),rs(),xs(),Vc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Uc=(e,t,s)=>{let o="";for(let i=t-1;i>=0;--i)o+=`
            k = i32(${e.indicesGet("indices",i)}) - ${Zt("uniforms.pads",i,s)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Zt("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${Zt("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `},Ta=(e,t,s)=>{let o="";for(let i=t-1;i>=0;--i)o+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Zt("uniforms.pads",i,s)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Zt("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Zt("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Zt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Wc=(e,t,s)=>{let o="";for(let i=t-1;i>=0;--i)o+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Zt("uniforms.pads",i,s)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Zt("uniforms.x_shape",i,t)})) {
                  k = i32(${Zt("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${Zt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Gc=(e,t,s)=>{let o="";for(let i=t-1;i>=0;--i)o+=`
                k = i32(${e.indicesGet("indices",i)}) - ${Zt("uniforms.pads",i,s)};
                if (k < 0)  {
                  k += i32(${Zt("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${Zt("uniforms.x_shape",i,t)})) {
                  k -= i32(${Zt("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${Zt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Xs=(e,t,s)=>{switch(s.mode){case 0:return Uc(e,t,s.pads.length);case 1:return Ta(e,t,s.pads.length);case 2:return Wc(e,t,s.pads.length);case 3:return Gc(e,t,s.pads.length);default:throw new Error("Invalid mode")}},Mh=(e,t)=>{let s=et.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=et.size(s),d=[{type:12,data:i},{type:6,data:t.pads}],a=e.length>=3&&e[2].data;t.mode===0&&d.push({type:a?e[2].dataType:1,data:t.value}),d.push(...Ut(e[0].dims,s));let p=["rank"],g=w=>{let F=ts("output",e[0].dataType,s.length),D=pt("x",e[0].dataType,o.length),m=D.type.value,H=Xs(F,o.length,t),Q=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&Q.push({name:"constant_value",type:a?m:"f32"}),`
            ${w.registerUniforms(Q).declareVariables(D,F)}
            ${w.mainStart()}
            ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${F.offsetToIndices("global_idx")};

            var value = ${m}(0);
            ${H}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}${a}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(et.size(s)/64)},programUniforms:d}),getShaderSource:g}},bh=(e,t)=>{if(e.length>1){let s=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,d=new Int32Array(2*i).fill(0);if(e.length>=4){let p=e[3].getBigInt64Array();for(let g=0;g<p.length;g++)d[Number(p[g])]=Number(s[g]),d[Number(p[g])+i]=Number(s[g+p.length])}else s.forEach((p,g)=>d[Number(g)]=Number(p));let a=[];return d.forEach(p=>a.push(p)),{mode:t.mode,value:o,pads:a}}else return t},vh=(e,t)=>{Vc(e.inputs);let s=bh(e.inputs,t);e.compute(Mh(e.inputs,s),{inputs:[0]})}}),Jn,xa,Ea,Pa,Do,Ca,Th,ka,Sa,$a,xh,qc,Hc,Qc,Ia,Xc,Yc,Jc,Zc,Eh=v(()=>{tt(),Gt(),rs(),xs(),Jn=e=>{if(U.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},xa=(e,t,s)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let d=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),p=t.strides.slice(),g=d?t.dilations.slice():[],w=t.pads.slice();Br.adjustPoolAttributes(s,i,a,p,g,w);let F=Br.computePoolOutputShape(s,i,p,g,a,w,t.autoPad),D=Object.assign({},t);d?Object.assign(D,{kernelShape:a,strides:p,pads:w,dilations:g,cacheKey:t.cacheKey}):Object.assign(D,{kernelShape:a,strides:p,pads:w,cacheKey:t.cacheKey});let m=F.slice();return m.push(m.splice(1,1)[0]),[D,o?m:F]},Ea=(e,t)=>{let s=t.format==="NHWC",o=et.size(e),i=et.size(t.kernelShape),d=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let p=t.kernelShape[t.kernelShape.length-1],g=t.strides[t.strides.length-1],w=t.pads[t.pads.length/2-1],F=t.pads[t.pads.length-1],D=!!(w+F);d.push({type:12,data:p},{type:12,data:g},{type:12,data:w},{type:12,data:F}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let m=!1;if(t.kernelShape.length===2){let H=t.kernelShape[t.kernelShape.length-2],Q=t.strides[t.strides.length-2],Z=t.pads[t.pads.length/2-2],ue=t.pads[t.pads.length-2];m=!!(Z+ue),d.push({type:12,data:H},{type:12,data:Q},{type:12,data:Z},{type:12,data:ue}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[d,a,!0,D,m]}else{if(s)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let p=et.computeStrides(t.kernelShape);d.push({type:12,data:p},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:p.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let g=t.pads.reduce((w,F)=>w+F);return[d,a,!!g,!1,!1]}},Pa=(e,t,s,o,i,d,a,p,g,w,F,D)=>{let m=i.format==="NHWC",H=t.type.value,Q=ts("output",t.type.tensor,o);if(i.kernelShape.length<=2){let Z="",ue="",he="",le=s-(m?2:1);if(F?Z=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${le}] = indices[${le}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${le}] < 0 || xIndices[${le}]
                      >= uniforms.x_shape[${le}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${d}
                }`:Z=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${le}] = indices[${le}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${d}
                }`,i.kernelShape.length===2){let Pe=s-(m?3:2);D?ue=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${Pe}] = indices[${Pe}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${Pe}] < 0 || xIndices[${Pe}] >= uniforms.x_shape[${Pe}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:ue=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${Pe}] = indices[${Pe}] * uniforms.sh - uniforms.phStart + j;
                `,he=`
              }
            `}return`
            ${e.registerUniforms(g).declareVariables(t,Q)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${Q.offsetToIndices("global_idx")};
              var xIndices = ${Q.offsetToIndices("global_idx")};

              var value = ${H}(${p});
              var pad = 0;
              ${ue}
              ${Z}
              ${he}
              ${a}

              output[global_idx] = value;
            }`}else{if(m)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let Z=i.kernelShape.length,ue=i.pads.length,he="";return w?he=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${d}
              }`:he=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${d}
            `,`
            ${e.registerUniforms(g).declareVariables(t,Q)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${Q.offsetToIndices("global_idx")};
              var xIndices = ${Q.offsetToIndices("global_idx")};

              var offsets: array<u32, ${Z}>;

              var value = ${H}(${p});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${Z-1}u; j++) {
                  offsets[j] = offset / ${Zt("uniforms.kernelStrides","j",Z)};
                  offset -= offsets[j] * ${Zt("uniforms.kernelStrides","j",Z)};
                }
                offsets[${Z-1}] = offset;

                isPad = false;
                for (var j = ${s-Z}u; j < ${s}u; j++) {
                  xIndices[j] = indices[j] * ${Zt("uniforms.strides",`j - ${s-Z}u`,Z)}
                    + offsets[j - ${s-Z}u] - ${Zt("uniforms.pads","j - 2u",ue)};
                  ${he}
              }
              ${a}

              output[global_idx] = value;
            }`}},Do=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ca=e=>`${Do(e)};${e.countIncludePad}`,Th=e=>`${Do(e)};${e.storageOrder};${e.dilations}`,ka=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Sa=(e,t,s,o)=>{let[i,d]=xa(t,o,s),a=pt("x",t.dataType,t.dims.length),p=a.type.value,g="value += x_val;",w="";i.countIncludePad?w+=`value /= ${p}(uniforms.kernelSize);`:w+=`value /= ${p}(i32(uniforms.kernelSize) - pad);`;let[F,D,m,H,Q]=Ea(d,i);F.push(...Ut(t.dims,d));let Z=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${m};${H};${Q}`,inputDependencies:Z},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(et.size(d)/64)},programUniforms:F}),getShaderSource:ue=>Pa(ue,a,t.dims.length,d.length,i,g,w,0,D,m,H,Q)}},$a=e=>{let t=e.count_include_pad!==0,s=ka(e);if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...s,cacheKey:""};return{...o,cacheKey:Ca(o)}},xh=(e,t)=>{Jn(e.inputs),e.compute(Sa("AveragePool",e.inputs[0],!1,t))},qc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Hc=e=>{let t=e.format;return{format:t,...qc,cacheKey:t}},Qc=(e,t)=>{Jn(e.inputs),e.compute(Sa("GlobalAveragePool",e.inputs[0],!0,t))},Ia=(e,t,s,o)=>{let[i,d]=xa(t,o,s),a=`
      value = max(x_val, value);
    `,p="",g=pt("x",t.dataType,t.dims.length),w=["rank"],[F,D,m,H,Q]=Ea(d,i);return F.push(...Ut(t.dims,d)),{name:e,shaderCache:{hint:`${o.cacheKey};${m};${H};${Q}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(et.size(d)/64)},programUniforms:F}),getShaderSource:Z=>Pa(Z,g,t.dims.length,d.length,i,a,p,t.dataType===10?-65504:-1e5,D,m,H,Q)}},Xc=(e,t)=>{Jn(e.inputs),e.compute(Ia("MaxPool",e.inputs[0],!1,t))},Yc=e=>{let t=e.storage_order,s=e.dilations,o=ka(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:s,...o,cacheKey:""};return{...i,cacheKey:Th(i)}},Jc=e=>{let t=e.format;return{format:t,...qc,cacheKey:t}},Zc=(e,t)=>{Jn(e.inputs),e.compute(Ia("GlobalMaxPool",e.inputs[0],!0,t))}}),ed,td,sd,rd,Jh=v(()=>{Gt(),rs(),Ss(),xs(),ed=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((s,o)=>s===e[2].dims[o]).reduce((s,o)=>s&&o,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,d)=>d===t.axis||i===e[0].dims[d]).reduce((i,d)=>i&&d,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let s=e[0].dims[t.axis],o=e[1].dims[t.axis];if(t.blockSize<Math.ceil(s/o)||t.blockSize>Math.ceil(s/(o-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},td=(e,t)=>{let s=et.normalizeAxis(t.axis,e[0].dims.length),o=e[0].dataType,i=o===3,d=e[0].dims,a=e[1].dataType,p=et.size(d),g=o===3||o===2,w=g?[Math.ceil(et.size(e[0].dims)/4)]:e[0].dims,F=e[1].dims,D=e.length>2?e[2]:void 0,m=D?g?[Math.ceil(et.size(D.dims)/4)]:D.dims:void 0,H=F.length===0||F.length===1&&F[0]===1,Q=H===!1&&F.length===1,Z=vs(p),ue=H&&(!g||Z===4),he=ue?Z:1,le=ue&&!g?Z:1,Pe=pt("input",g?12:o,w.length,le),Ee=pt("scale",a,F.length),De=D?pt("zero_point",g?12:o,m.length):void 0,Qe=ts("output",a,d.length,he),Je=[Pe,Ee];De&&Je.push(De);let gt=[w,F];D&&gt.push(m);let It=[{type:12,data:p/he},{type:12,data:s},{type:12,data:t.blockSize},...Ut(...gt,d)],Qt=Ms=>{let ls=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Ms.registerUniforms(ls).declareVariables(...Je,Qe)}
      ${Ms.mainStart()}
          ${Ms.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Qe.offsetToIndices("global_idx")};

          // Set input x
          ${g?`
            let input = ${Pe.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${he===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${Pe.getByOffset("global_idx")};`};

          // Set scale input
          ${H?`let scale_value= ${Ee.getByOffset("0")}`:Q?`
            let scale_index = ${Qe.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${Ee.getByOffset("scale_index")};`:`
            var scale_indices: ${Ee.type.indices} = output_indices;
            let index = ${Ee.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${Ee.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${Ee.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${De?H?g?`
                let zero_point_input = ${De.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${De.getByOffset("0")}`:Q?g?`
                let zero_point_index = ${Qe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${De.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Qe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${De.getByOffset("zero_point_index")};`:g?`
                let zero_point_offset = ${Ee.indicesToOffset("scale_indices")};
                let zero_point_input = ${De.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${De.getByIndices("scale_indices")};`:`let zero_point_value = ${g?i?"i32":"u32":Pe.type.value}(0);`};
      // Compute and write output
      ${Qe.setByOffset("global_idx",`${Qe.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:De?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Qt,getRunData:()=>({outputs:[{dims:d,dataType:a}],dispatchGroup:{x:Math.ceil(p/he/64),y:1,z:1},programUniforms:It})}},sd=(e,t)=>{ed(e.inputs,t),e.compute(td(e.inputs,t))},rd=e=>as({axis:e.axis,blockSize:e.blockSize})}),nd,od,id,Ph=v(()=>{tt(),Gt(),xs(),nd=(e,t,s)=>{let o=e===t,i=e<t&&s<0,d=e>t&&s>0;if(o||i||d)throw new Error("Range these inputs' contents are invalid.")},od=(e,t,s,o)=>{let i=Math.abs(Math.ceil((t-e)/s)),d=[i],a=i,p=[{type:12,data:a},{type:o,data:e},{type:o,data:s},...Ut(d)],g=w=>{let F=ts("output",o,d.length),D=F.type.value,m=[{name:"outputSize",type:"u32"},{name:"start",type:D},{name:"delta",type:D}];return`
        ${w.registerUniforms(m).declareVariables(F)}
        ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${D}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:g,getRunData:()=>({outputs:[{dims:d,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},id=e=>{let t=0,s=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],s=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],s=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),U.webgpu.validateInputContent&&nd(t,s,o),e.compute(od(t,s,o,e.inputs[0].dataType),{inputs:[]})}}),ad,ld,Ch,Aa,kh=v(()=>{Gt(),rs(),Ss(),xs(),ad=(e,t,s,o)=>{if(e!=="none"&&o!=="i32"&&o!=="u32"&&o!=="f32")throw new Error(`Input ${o} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,d=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${t}=${s};`;case"add":return o==="i32"||o==="u32"?`atomicAdd(&${t}, bitcast<${o}>(${s}));`:`
              ${i}bitcast<${o}>(oldValue) + (${s})${d}`;case"max":return o==="i32"||o==="u32"?`atomicMax(&${t}, bitcast<${o}>(${s}));`:`
                ${i}max(bitcast<f32>(oldValue), (${s}))${d}`;case"min":return o==="i32"||o==="u32"?`atomicMin(&${t}, bitcast<${o}>(${s}));`:`${i}min(bitcast<${o}>(oldValue), (${s}))${d}`;case"mul":return`${i}(bitcast<${o}>(oldValue) * (${s}))${d}`;default:throw new Error(`Reduction ${e} is not supported.`)}},ld=(e,t)=>{let s=e[0].dims,o=e[1].dims,i=s,d=1,a=Math.ceil(et.size(o)/d),p=o[o.length-1],g=et.sizeFromDimension(s,p),w=[{type:12,data:a},{type:12,data:p},{type:12,data:g},...Ut(e[1].dims,e[2].dims,i)],F=D=>{let m=pt("indices",e[1].dataType,e[1].dims.length),H=pt("updates",e[2].dataType,e[2].dims.length,d),Q=t.reduction!=="none"&&t.reduction!==""?Wa("output",e[0].dataType,i.length):ts("output",e[0].dataType,i.length,d);return`
      ${D.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(m,H,Q)}
      ${D.mainStart()}
        ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${ad(t.reduction,"output[data_offset + i]","value",Q.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:w}),getShaderSource:F}},Ch=e=>as({reduction:e.reduction}),Aa=(e,t)=>{e.compute(ld(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),ud,cd,dd,Oa,hd,pd,md,fd,_d,gd,wd,yd,Fa,Md,bd,vd,Td,xd,Ed,Pd,Sh=v(()=>{Gt(),rs(),Ss(),xs(),ud=(e,t)=>{if(e.every(s=>s>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},cd=(e,t,s)=>{t.every(i=>i>=0&&i<s||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(s).fill(1);return t.forEach((i,d)=>o[i]=e[d]),o},dd=(e,t,s,o,i,d)=>{let[a,p,g]=s>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(F=>d.push(F));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(p>0&&e.length>p&&e[p].dims.length===1&&e[p].dims[0]>0){if(e[p].getFloat32Array().forEach(F=>o.push(F)),o.length!==0&&o.length!==w&&s>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");ud(o,t),t.axes.length>0&&cd(o,t.axes,w).forEach((F,D)=>o[D]=F)}if(g>0&&e.length>g&&e[g].dims.length===1&&e[g].dims[0]>0&&(e[g].getBigInt64Array().forEach(F=>i.push(Number(F))),i.length!==0&&i.length!==w&&s>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==0&&o.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},Oa=(e,t,s,o)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${t});
  let whole = ${o}(big / (${s}));
  let fract = ${o}(big % (${s})) / ${o}(${s});
  return whole + fract;
`,hd=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${t}(xResized) / ${t}(xScale);
          } else {
            ${Oa("xResized","lengthOriginal","lengthResized",t)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Oa("xResized","lengthOriginal - 1","lengthResized - 1",t)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",pd=(e,t,s)=>`fn getNearestPixelFromOriginal(xOriginal: ${s}, isDownSample: bool) -> ${s} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",md=(e,t,s)=>{let o=new Array(s).fill(0).concat(new Array(s).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((d,a)=>{o[d]=i[a],o[a+s]=i[t.length+a]}),o):i},fd=(e,t,s,o)=>{let i=[];if(s.length>0)if(o.length>0){if(e.forEach(d=>i.push(d)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((d,a)=>i[d]=s[a])}else s.forEach(d=>i.push(d));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((d,a)=>Math.round(d*t[a]))}return i},_d=(e,t,s)=>{let o=(()=>{switch(s.keepAspectRatioPolicy){case"not_larger":return s.axes.length>0?Math.min(...s.axes.map(d=>t[d]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return s.axes.length>0?Math.max(...s.axes.map(d=>t[d]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${s.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return s.axes.length>0?(s.axes.forEach(d=>t[d]=o),s.axes.forEach(d=>i[d]=Math.round(e[d]*t[d]))):(t.fill(o,0,t.length),i.forEach((d,a)=>i[a]=Math.round(d*t[a]))),i},gd=(e,t,s,o,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${s.length}> {
      var original_indices: array<${e.type.value}, ${s.length}>;
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${Zt("uniforms.scales","i",o)};
        var roi_low = ${Zt("uniforms.roi","i",i)};
        var roi_hi = ${Zt("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${Zt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${Zt("uniforms.output_shape","i",s.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,wd=(e,t,s,o,i,d,a)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${o.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Zt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Zt("uniforms.roi","i",d)};
          var roi_hi = ${Zt("uniforms.roi",`i + ${s.length}`,d)};
          var input_shape_i = ${Zt("uniforms.input_shape","i",s.length)};
          var output_shape_i = ${Zt("uniforms.output_shape","i",o.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,yd=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Zt("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Fa=(e,t,s,o)=>e.rank>o?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",s,"batch")};
`:"",Md=(e,t,s,o,i)=>{let[d,a,p,g]=s.length===2?[-1,0,1,-1]:[0,2,3,1],w=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${w} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",a,`max(0, min(row, ${s[a]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(col, ${s[p]} - 1))`)};
      ${Fa(e,g,d,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${w} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${w} = originalIndices[${a}];
      var col:${w} = originalIndices[${p}];
      ${o?`if (row < 0 || row > (${s[a]} - 1) || col < 0 || col > (${s[p]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${s[a]} - 1));
      col = max(0, min(col, ${s[p]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${s.length>2?`u32(originalIndices[${g}])`:"0"};
      var batch: u32 =  ${s.length>2?`u32(originalIndices[${d}])`:"0"};
      var x11: ${w} = getInputValue(batch, channel, row1, col1);
      var x12: ${w} = getInputValue(batch, channel, row1, col2);
      var x21: ${w} = getInputValue(batch, channel, row2, col1);
      var x22: ${w} = getInputValue(batch, channel, row2, col2);
      var dx1: ${w} = abs(row - ${w}(row1));
      var dx2: ${w} = abs(${w}(row2) - row);
      var dy1: ${w} = abs(col - ${w}(col1));
      var dy2: ${w} = abs(${w}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},bd=(e,t,s,o,i,d,a,p,g,w)=>{let F=s.length===2,[D,m]=F?[0,1]:[2,3],H=e.type.value,Q=Z=>{let ue=Z===D?"row":"col";return`
      fn ${ue}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${H} {
        var output_index = ${t.indicesGet("output_indices",Z)};
        var originalIdx: ${H} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[Z]},
        ${o[Z]}, ${s[Z]}, ${d[Z]}, ${d[Z]} + ${s.length});
        var fractOriginalIdx: ${H} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${p} && (originalIdx < 0 || originalIdx > (${s[Z]} - 1))) {
          return ${g};
        }
        var data: array<${H}, 4> = array<${H}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${ue}: ${H} = originalIdx + ${H}(i);
          if (${ue} < 0 || ${ue} >= ${s[Z]}) {
            ${w?`coefs[i + 1] = 0.0;
                        continue;`:p?`return ${g};`:`${ue} = max(0, min(${ue}, ${s[Z]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",Z,`u32(${ue})`)};
          data[i + 1] = ${Z===D?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${Q(D)};
    ${Q(m)};
  fn getCubicInterpolationCoefs(s: ${H}) -> array<${H}, 4> {
    var absS = abs(s);
    var coeffs: array<${H}, 4> = array<${H}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${H} = 1.0 - absS;
    var twoMinusAbsS: ${H} = 2.0 - absS;
    var onePlusAbsS: ${H} = 1.0 + absS;
    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};
    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;
    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${H}, 4>, coefs: array<${H}, 4>) -> ${H} {
    var coefsSum: ${H} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${H} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},vd=(e,t,s,o,i)=>{let[d,a,p,g,w]=s.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],F=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${F} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${s[a]} - 1))`)};
      ${e.indicesSet("input_indices",p,`max(0, min(height, ${s[p]} - 1))`)};
      ${e.indicesSet("input_indices",g,`max(0, min(width, ${s[g]} - 1))`)};
      ${Fa(e,w,d,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${F} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${F} = originalIndices[${a}];
      var height:${F} = originalIndices[${p}];
      var width:${F} = originalIndices[${g}];
      ${o?`if (depth < 0 || depth > (${s[a]} - 1) || height < 0 || height > (${s[p]} - 1) || width < 0 || (width > ${s[g]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${s[a]} - 1));
      height = max(0, min(height, ${s[p]} - 1));
      width = max(0, min(width, ${s[g]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${s.length>3?`u32(originalIndices[${w}])`:"0"};
      var batch: u32 =  ${s.length>3?`u32(originalIndices[${d}])`:"0"};

      var x111: ${F} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${F} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${F} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${F} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${F} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${F} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${F} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${F} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${F} = abs(depth - ${F}(depth1));
      var dx2: ${F} = abs(${F}(depth2) - depth);
      var dy1: ${F} = abs(height - ${F}(height1));
      var dy2: ${F} = abs(${F}(height2) - height);
      var dz1: ${F} = abs(width - ${F}(width1));
      var dz2: ${F} = abs(${F}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Td=(e,t,s,o,i,d)=>{let a=e.dims,p=md(d,t.axes,a.length),g=fd(a,o,i,t.axes),w=o.slice();o.length===0&&(w=a.map((le,Pe)=>le===0?1:g[Pe]/le),t.keepAspectRatioPolicy!=="stretch"&&(g=_d(a,w,t)));let F=ts("output",e.dataType,g.length),D=pt("input",e.dataType,a.length),m=et.size(g),H=a.length===g.length&&a.every((le,Pe)=>le===g[Pe]),Q=t.coordinateTransformMode==="tf_crop_and_resize",Z=t.extrapolationValue,ue=D.type.value,he=le=>`
      ${H?"":`
      ${hd(t.coordinateTransformMode,ue)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${yd(D,a)};
              ${pd(t.nearestMode,s,ue)};
              ${wd(D,F,a,g,w.length,p.length,Q)};
              `;case"linear":return`
              ${gd(F,a,g,w.length,p.length)};
              ${(()=>{if(a.length===2||a.length===4)return`${Md(D,F,a,Q,Z)}`;if(a.length===3||a.length===5)return`${vd(D,F,a,Q,Z)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(a.length===2||a.length===4)return`${bd(D,F,a,g,w,p,t.cubicCoeffA,Q,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${le.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",p.length).declareVariables(D,F)}
      ${le.mainStart()}
        ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${H?"output[global_idx] = input[global_idx];":`
        let output_indices = ${F.offsetToIndices("global_idx")};
        var input_indices: ${D.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${D.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${s}|${w.length>0?t.mode==="cubic"?w:w.length:""}|${i.length>0?i:""}|${p.length>0?p:""}|${H}|${t.mode==="nearest"?a.length:a}`,inputDependencies:["rank"]},getShaderSource:he,getRunData:()=>({outputs:[{dims:g,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},{type:1,data:w},{type:1,data:p},...Ut(a,g)]})}},xd=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ed=(e,t)=>{let s=[],o=[],i=[],d=xd(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");dd(e.inputs,t,d,s,o,i),e.compute(Td(e.inputs[0],t,d,s,o,i),{inputs:[0]})},Pd=e=>{let t=e.antialias,s=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,d=e.excludeOutside!==0,a=e.extrapolationValue,p=e.keepAspectRatioPolicy,g=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return as({antialias:t,axes:s,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:d,extrapolationValue:a,keepAspectRatioPolicy:p,mode:g,nearestMode:w})}}),Cd,kd,Sd,$h=v(()=>{Gt(),rs(),Ss(),xs(),Cd=(e,t)=>{let[s,o,i,d]=e,{numHeads:a,rotaryEmbeddingDim:p}=t;if(s.dims.length!==3&&s.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${s.dims.length}`);if(!et.areEqual(o.dims,[])&&!et.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(d.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${d.dims.length}`);if(!et.areEqual(i.dims,d.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(p>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let g=s.dims[0],w=s.dims[s.dims.length-2],F=i.dims[0],D=et.sizeFromDimension(s.dims,1)/w,m=p===0?i.dims[1]*2:D/a;if(p>m)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(g!==o.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(w!==o.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(m/2!==i.dims[1]&&p/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(w>F)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},kd=(e,t)=>{let{interleaved:s,numHeads:o,rotaryEmbeddingDim:i,scale:d}=t,a=e[0].dims[0],p=et.sizeFromDimension(e[0].dims,1),g=e[0].dims[e[0].dims.length-2],w=p/g,F=e[2].dims[1],D=i===0?F*2:w/o,m=new Array(a,g,w/D,D-F),H=et.computeStrides(m),Q=[{type:1,data:d},{type:12,data:m},{type:12,data:H},...e[0].dims.length===3?new Array({type:12,data:[p,w,D,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[p,D,g*D,1]}):[],...Ut(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],Z=ue=>{let he=pt("input",e[0].dataType,e[0].dims.length),le=pt("position_ids",e[1].dataType,e[1].dims.length),Pe=pt("cos_cache",e[2].dataType,e[2].dims.length),Ee=pt("sin_cache",e[3].dataType,e[3].dims.length),De=ts("output",e[0].dataType,e[0].dims.length);return ue.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:m.length},{name:"global_strides",type:"u32",length:H.length},{name:"input_output_strides",type:"u32",length:H.length}]),`
        ${ue.declareVariables(he,le,Pe,Ee,De)}

        ${ue.mainStart(Kr)}
          let half_rotary_emb_dim = uniforms.${Pe.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${ue.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${le.broadcastedIndicesToOffset("bsnh.xy",ts("",le.type.tensor,2))};
            let position_id =
                u32(${le.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${s});
            let j = i + select(half_rotary_emb_dim, 1, ${s});
            let re = ${he.getByOffset("i")} * ${Pe.get("position_id","bsnh[3]")} -
                ${he.getByOffset("j")} * ${Ee.get("position_id","bsnh[3]")};
            ${De.setByOffset("i","re")}
            let im = ${he.getByOffset("i")} * ${Ee.get("position_id","bsnh[3]")} +
                ${he.getByOffset("j")} * ${Pe.get("position_id","bsnh[3]")};
            ${De.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${De.setByOffset("k",he.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:as({interleaved:s}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:Z,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(et.size(m)/Kr)},programUniforms:Q})}},Sd=(e,t)=>{Cd(e.inputs,t),e.compute(kd(e.inputs,t))}}),$d,Id,Ih,Es=v(()=>{Gt(),rs(),xs(),$d=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],s=e[1],o=e[2];if(t.dataType!==s.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(s.dims.length!==3&&s.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],d=t.dims[t.dims.length-2];if(s.dims[s.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(s.dims[s.dims.length-2]!==d)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Id=(e,t,s,o)=>{let i=t.simplified,d=e[0].dims,a=et.size(d),p=d,g=a,w=d.slice(-1)[0],F=o?d.slice(0,-1).concat(1):[],D=!i&&e.length>3,m=e.length>4,H=o&&s>1,Q=o&&s>2,Z=s>3,ue=64,he=vs(w),le=[{type:12,data:g},{type:12,data:he},{type:12,data:w},{type:1,data:t.epsilon}],Pe=De=>{let Qe=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Je=[pt("x",e[0].dataType,e[0].dims,he),pt("skip",e[1].dataType,e[1].dims,he),pt("gamma",e[2].dataType,e[2].dims,he)];D&&Je.push(pt("beta",e[3].dataType,e[3].dims,he)),m&&Je.push(pt("bias",e[4].dataType,e[4].dims,he)),Je.push(ts("output",e[0].dataType,p,he)),H&&Je.push(ts("mean_output",1,F)),Q&&Je.push(ts("inv_std_output",1,F)),Z&&Je.push(ts("input_skip_bias_sum",e[0].dataType,p,he));let gt=Gs(e[0].dataType),It=Gs(1,he);return`

      ${De.registerUniforms(Qe).declareVariables(...Je)}
      var<workgroup> sum_shared : array<${It}, ${ue}>;
      var<workgroup> sum_squared_shared : array<${It}, ${ue}>;

      ${De.mainStart([ue,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${ue};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${ue};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${ue-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${m?"bias[offset1d + i]":gt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${Z?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${dr(gt,he,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${ue};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Cr("sum",he)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Cr("square_sum",he)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${H?"mean_output[global_idx] = mean;":""}
        ${Q?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${gt}(mean)`}) *
            ${gt}(inv_std_dev) * gamma[offset1d + i]
            ${D?"+ beta[offset1d + i]":""};
        }
      }`},Ee=[{dims:p,dataType:e[0].dataType}];return s>1&&Ee.push({dims:F,dataType:1}),s>2&&Ee.push({dims:F,dataType:1}),s>3&&Ee.push({dims:d,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${he};${H};${Q};${Z}`,inputDependencies:e.map((De,Qe)=>"type")},getShaderSource:Pe,getRunData:()=>({outputs:Ee,dispatchGroup:{x:Math.ceil(g/w)},programUniforms:le})}},Ih=(e,t)=>{$d(e.inputs);let s=[0];e.outputCount>1&&s.push(-3),e.outputCount>2&&s.push(-3),e.outputCount>3&&s.push(3),e.compute(Id(e.inputs,t,e.outputCount,!1),{outputs:s})}}),Ad,wr,Fr,Rr,On,Ah,Od,Fd,b=v(()=>{Gt(),rs(),Ss(),xs(),Ad=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((s,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},wr=(e,t)=>{let s=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>s.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>s.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return s},Fr=(e,t)=>{if(e.length>1){let s=wr(e,1),o=wr(e,2),i=wr(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),as({starts:s,ends:o,axes:i})}else return t},Rr=(e,t,s,o,i)=>{let d=e;return e<0&&(d+=s[o[t]]),i[t]<0?Math.max(0,Math.min(d,s[o[t]]-1)):Math.max(0,Math.min(d,s[o[t]]))},On=(e,t,s)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${s.length}; i >= 0; i--) {
            let input_shape_i = ${Zt("uniforms.input_shape","i",s.length)};
            let steps_i = ${Zt("uniforms.steps","i",s.length)};
            let signs_i = ${Zt("uniforms.signs","i",s.length)};
            let starts_i = ${Zt("uniforms.starts","i",s.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Ah=(e,t)=>{let s=e[0].dims,o=et.size(s),i=t.axes.length>0?et.normalizeAxes(t.axes,s.length):[...Array(s.length).keys()],d=wr(e,4);d.forEach(he=>he!==0||(()=>{throw new Error("step cannot be 0")})),d.length===0&&(d=Array(i.length).fill(1));let a=t.starts.map((he,le)=>Rr(he,le,s,i,d)),p=t.ends.map((he,le)=>Rr(he,le,s,i,d));if(i.length!==a.length||i.length!==p.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==s.length)for(let he=0;he<s.length;++he)i.includes(he)||(a.splice(he,0,0),p.splice(he,0,s[he]),d.splice(he,0,1));let g=d.map(he=>Math.sign(he));d.forEach((he,le,Pe)=>{if(he<0){let Ee=(p[le]-a[le])/he,De=a[le],Qe=De+Ee*d[le];a[le]=Qe,p[le]=De,Pe[le]=-he}});let w=s.slice(0);i.forEach((he,le)=>{w[he]=Math.ceil((p[he]-a[he])/d[he])});let F={dims:w,dataType:e[0].dataType},D=ts("output",e[0].dataType,w.length),m=pt("input",e[0].dataType,e[0].dims.length),H=et.size(w),Q=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:g.length},{name:"steps",type:"u32",length:d.length}],Z=[{type:12,data:H},{type:12,data:a},{type:6,data:g},{type:12,data:d},...Ut(e[0].dims,w)],ue=he=>`
      ${he.registerUniforms(Q).declareVariables(m,D)}
        ${On(m,D,s)}
        ${he.mainStart()}
          ${he.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${D.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${D.setByOffset("global_idx",m.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${g.length}_${a.length}_${d.length}`,inputDependencies:["rank"]},getShaderSource:ue,getRunData:()=>({outputs:[F],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:Z})}},Od=(e,t)=>{Ad(e.inputs,t);let s=Fr(e.inputs,t);e.compute(Ah(e.inputs,s),{inputs:[0]})},Fd=e=>{let t=e.starts,s=e.ends,o=e.axes;return as({starts:t,ends:s,axes:o})}}),$,J,Se,Xe,Ye=v(()=>{Gt(),rs(),Ss(),wn(),xs(),$=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},J=(e,t)=>{let s=e.inputs[0],o=s.dims,i=et.size(o),d=o.length,a=et.normalizeAxis(t.axis,d),p=a<o.length-1,g,w=[];p?(w=Array.from({length:d},(Je,gt)=>gt),w[a]=d-1,w[d-1]=a,g=e.compute(Yr(s,w),{inputs:[s],outputs:[-1]})[0]):g=s;let F=g.dims,D=F[d-1],m=i/D,H=vs(D),Q=D/H,Z=64;m===1&&(Z=256);let ue=(Je,gt)=>gt===4?`max(max(${Je}.x, ${Je}.y), max(${Je}.z, ${Je}.w))`:gt===2?`max(${Je}.x, ${Je}.y)`:gt===3?`max(max(${Je}.x, ${Je}.y), ${Je}.z)`:Je,he=pt("x",g.dataType,g.dims,H),le=ts("result",g.dataType,g.dims,H),Pe=he.type.value,Ee=Gs(g.dataType)==="f32"?`var threadMax = ${Pe}(-3.402823e+38f);`:`var threadMax = ${Pe}(-65504.0h);`,De=Je=>`
      var<workgroup> rowMaxShared : ${Pe};
      var<workgroup> rowSumShared : ${Pe};
      var<workgroup> threadShared : array<${Pe}, ${Z}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${Pe} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${Pe}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Je.registerUniform("packedCols","i32").declareVariables(he,le)}
      ${Je.mainStart(Z)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${Z};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${Ee}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${Pe}(${ue("threadShared[0]",H)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${Pe}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${Pe}(${Cr("threadShared[0]",H)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,Qe=e.compute({name:"Softmax",shaderCache:{hint:`${H};${Z}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:F,dataType:g.dataType}],dispatchGroup:{x:m},programUniforms:[{type:6,data:Q}]}),getShaderSource:De},{inputs:[g],outputs:[p?-1:0]})[0];p&&e.compute(Yr(Qe,w),{inputs:[Qe]})},Se=(e,t)=>{$(e.inputs),J(e,t)},Xe=e=>as({axis:e.axis})}),_t,Tt,Bt,Wt,us,fs=v(()=>{Gt(),rs(),xs(),_t=e=>Array.from(e.getBigInt64Array(),Number),Tt=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(_t(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Bt=(e,t)=>{let s=[];for(let o=0;o<e.length;++o)s.push(e[o]*t[o]);return s},Wt=(e,t)=>{let s=e[0].dims,o=t??_t(e[1]),i=Bt(s,o),d=et.size(i),a=e[0].dataType,p=pt("input",a,s.length),g=ts("output",a,i.length),w=F=>`
      const inputShape = ${p.indices(...s)};
      ${F.registerUniform("output_size","u32").declareVariables(p,g)}
      ${F.mainStart()}
      ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${g.offsetToIndices("global_idx")};
      var input_indices: ${p.type.indices};
      for (var i = 0; i < ${s.length}; i++) {
        let input_dim_i = ${p.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${g.indicesGet("output_indices","i")}  % input_dim_i;

        ${p.indicesSet("input_indices","i","input_dim_value")}
      }
      ${g.setByOffset("global_idx",p.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${o}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Ut(e[0].dims,i)]}),getShaderSource:w}},us=e=>{Tt(e.inputs),e.compute(Wt(e.inputs),{inputs:[0]})}}),os,_s,Cs,Is=v(()=>{Gt(),rs(),xs(),os=(e,t,s,o,i)=>{let d=ts("output_data",i,s.length,4),a=pt("a_data",t[1].dataType,t[1].dims.length,4),p=pt("b_data",t[2].dataType,t[2].dims.length,4),g=pt("c_data",t[0].dataType,t[0].dims.length,4),w,F=(D,m,H)=>`select(${m}, ${D}, ${H})`;if(!o)w=d.setByOffset("global_idx",F(a.getByOffset("global_idx"),p.getByOffset("global_idx"),g.getByOffset("global_idx")));else{let D=(m,H,Q="")=>{let Z=`a_data[index_a${H}][component_a${H}]`,ue=`b_data[index_b${H}][component_b${H}]`,he=`bool(c_data[index_c${H}] & (0xffu << (component_c${H} * 8)))`;return`
            let output_indices${H} = ${d.offsetToIndices(`global_idx * 4u + ${H}u`)};
            let offset_a${H} = ${a.broadcastedIndicesToOffset(`output_indices${H}`,d)};
            let offset_b${H} = ${p.broadcastedIndicesToOffset(`output_indices${H}`,d)};
            let offset_c${H} = ${g.broadcastedIndicesToOffset(`output_indices${H}`,d)};
            let index_a${H} = offset_a${H} / 4u;
            let index_b${H} = offset_b${H} / 4u;
            let index_c${H} = offset_c${H} / 4u;
            let component_a${H} = offset_a${H} % 4u;
            let component_b${H} = offset_b${H} % 4u;
            let component_c${H} = offset_c${H} % 4u;
            ${m}[${H}] = ${Q}(${F(Z,ue,he)});
          `};i===9?w=`
            var data = vec4<u32>(0);
            ${D("data",0,"u32")}
            ${D("data",1,"u32")}
            ${D("data",2,"u32")}
            ${D("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${D("output_data[global_idx]",0)}
            ${D("output_data[global_idx]",1)}
            ${D("output_data[global_idx]",2)}
            ${D("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(g,a,p,d)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},_s=e=>{let t=e[1].dims,s=e[2].dims,o=e[0].dims,i=e[1].dataType,d=!(et.areEqual(t,s)&&et.areEqual(s,o)),a=t,p=et.size(t);if(d){let w=Pr.calcShape(Pr.calcShape(t,s,!1),o,!1);if(!w)throw new Error("Can't perform where op on the given tensors");a=w,p=et.size(a)}let g=Math.ceil(p/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>os(w,e,a,d,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:g},...Ut(o,t,s,a)]})}},Cs=e=>{e.compute(_s(e.inputs))}}),Ts,Ds=v(()=>{qd(),fi(),Hd(),Qd(),Xd(),Yd(),Mu(),th(),rh(),nh(),oh(),ih(),ah(),lh(),uh(),ch(),hh(),ph(),Yh(),ma(),gh(),Ic(),wh(),yh(),Nc(),Tc(),Kc(),Eh(),Jh(),Ph(),kh(),fo(),Sh(),$h(),Es(),b(),Ye(),wa(),fs(),wn(),Ai(),Is(),Ts=new Map([["Abs",[Al]],["Acos",[Mi]],["Acosh",[Ol]],["Add",[Fi]],["ArgMax",[ci,di]],["ArgMin",[xl,di]],["Asin",[Fl]],["Asinh",[bi]],["Atan",[Dl]],["Atanh",[Ll]],["Attention",[Cl]],["AveragePool",[xh,$a]],["BatchNormalization",[gi]],["BiasAdd",[Il]],["BiasSplitGelu",[Oi]],["Cast",[zl,vi]],["Ceil",[Rl]],["Clip",[Ti]],["Concat",[wu,yu]],["Conv",[Po,ta]],["ConvTranspose",[zu,na]],["Cos",[jl]],["Cosh",[xi]],["CumSum",[Bu,Ru]],["DepthToSpace",[Vu,Uu]],["DequantizeLinear",[sd,rd]],["Div",[uu]],["Einsum",[qu,Hu]],["Elu",[Nl,qn]],["Equal",[cu]],["Erf",[Vl]],["Exp",[Ei]],["Expand",[Ju]],["FastGelu",[Zu]],["Floor",[Ul]],["FusedConv",[Po,ta]],["Gather",[sc,tc]],["GatherElements",[cc,uc]],["GatherBlockQuantized",[ic,ac]],["GatherND",[Io,nc]],["Gelu",[Wl]],["Gemm",[Ao,pc]],["GlobalAveragePool",[Qc,Hc]],["GlobalMaxPool",[Zc,Jc]],["Greater",[pu]],["GreaterOrEqual",[Li]],["GridSample",[yc,Mc]],["GroupQueryAttention",[ya]],["HardSigmoid",[Ql,ki]],["InstanceNormalization",[$c]],["LayerNormalization",[va]],["LeakyRelu",[Pi,qn]],["Less",[mu]],["LessOrEqual",[fu]],["Log",[su]],["MatMul",[Dc]],["MatMulNBits",[Rc,jc]],["MaxPool",[Xc,Yc]],["Mul",[du]],["MultiHeadAttention",[mh,vc]],["Neg",[Kl]],["Not",[Gl]],["Pad",[vh]],["Pow",[hu]],["QuickGelu",[nu,qn]],["Range",[id]],["Reciprocal",[Ci]],["ReduceMin",[Ml]],["ReduceMean",[gl]],["ReduceMax",[ai]],["ReduceSum",[li]],["ReduceProd",[bl]],["ReduceL1",[ii]],["ReduceL2",[wl]],["ReduceLogSum",[Tl]],["ReduceLogSumExp",[yl]],["ReduceSumSquare",[vl]],["Relu",[ql]],["Resize",[Ed,Pd]],["RotaryEmbedding",[Sd]],["ScatterND",[Aa,Ch]],["Sigmoid",[Hl]],["Sin",[Xl]],["Sinh",[Si]],["Slice",[Od,Fd]],["SkipLayerNormalization",[Ih]],["Split",[Cc,kc]],["Sqrt",[Yl]],["Softmax",[Se,Xe]],["Sub",[Di]],["Tan",[Jl]],["Tanh",[Zl]],["ThresholdedRelu",[tu,qn]],["Tile",[us]],["Transpose",[Xa,Jo]],["Where",[Cs]]])}),ir,rr=v(()=>{tt(),Ne(),xs(),ir=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,s,o,i){nt(e.programInfo.name);let d=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let w of t)p.push({binding:p.length,resource:{buffer:w.buffer}});for(let w of s)p.push({binding:p.length,resource:{buffer:w.buffer}});i&&p.push({binding:p.length,resource:i});let g=d.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:p,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let w={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:g,dispatchGroup:o};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(w)}a.setPipeline(e.computePipeline),a.setBindGroup(0,g),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),st(e.programInfo.name)}dispose(){}build(e,t){nt(e.name);let s=this.backend.device,o=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(w=>{s.features.has(w.feature)&&o.push(`enable ${w.extension};`)});let i=Ka(t,this.backend.device.limits),d=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${d}`,p=s.createShaderModule({code:a,label:e.name});cs("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let g=s.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:e.name});return st(e.name),{programInfo:e,computePipeline:g,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,s=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&s<=i&&o<=i)return[t,s,o];let d=t*s*o,a=Math.ceil(Math.sqrt(d));if(a>i){if(a=Math.ceil(Math.cbrt(d)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}}),js,nr,hr,jr,Sr,cn=v(()=>{tt(),Gt(),Ne(),ae(),Bs(),Ds(),rr(),js=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let s=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{s.push("");break}case"type":{s.push(`${i}`);break}case"rank":{let d=e[o].dims.length;s.push(`${i};${d}`);break}case"dims":{let d=e[o].dims.join(",");s.push(`${i};${d}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return s.join("|")},nr=(e,t,s)=>{var i,d;let o=e.name;return(i=e.shaderCache)!=null&&i.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+s+`:${js(t,((d=e.shaderCache)==null?void 0:d.inputDependencies)??new Array(t.length).fill("dims"))}`,o},hr=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},jr=class{constructor(e){this.subgroupsSupported=e.features.has("subgroups"),this.subgroupsF16Supported=e.features.has("subgroups");let t=e.limits;!this.subgroupsSupported||!t.minSubgroupSize||!t.maxSubgroupSize?this.subgroupSizeRange=void 0:this.subgroupSizeRange=[t.minSubgroupSize,t.maxSubgroupSize]}},Sr=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let s=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s},i=d=>t.features.has(d)&&s.push(d)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups")&&i("subgroups-f16"),this.device=await t.requestDevice(o),this.deviceInfo=new jr(this.device),this.adapterInfo=new hr(t.info||await t.requestAdapterInfo()),this.gpuDataManager=Ws(this),this.programManager=new ir(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,vr(e.logLevel,!!e.debug),this.device.onuncapturederror=d=>{d.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${d.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;nt(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var o;let t=new BigUint64Array(e.getMappedRange()),s=this.pendingQueries.get(e);for(let i=0;i<t.length/2;i++){let d=s[i],a=d.kernelId,p=this.kernels.get(a),g=p.kernelType,w=p.kernelName,F=d.programName,D=d.inputTensorViews,m=d.outputTensorViews,H=t[i*2],Q=t[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=H);let Z=Number(H-this.queryTimeBase),ue=Number(Q-this.queryTimeBase);if(!Number.isSafeInteger(Z)||!Number.isSafeInteger(ue))throw new RangeError("incorrect timestamp range");if((o=this.env.webgpu.profiling)!=null&&o.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:D.map(he=>({dims:he.dims,dataType:Mt(he.dataType)})),outputsMetadata:m.map(he=>({dims:he.dims,dataType:Mt(he.dataType)})),kernelId:a,kernelType:g,kernelName:w,programName:F,startTime:Z,endTime:ue});else{let he="";D.forEach((Pe,Ee)=>{he+=`input[${Ee}]: [${Pe.dims}] | ${Mt(Pe.dataType)}, `});let le="";m.forEach((Pe,Ee)=>{le+=`output[${Ee}]: [${Pe.dims}] | ${Mt(Pe.dataType)}, `}),console.log(`[profiling] kernel "${a}|${g}|${w}|${F}" ${he}${le}execution time: ${ue-Z} ns`)}it("GPU",`${F}::${H}::${Q}`)}e.unmap(),this.pendingQueries.delete(e)}),st()}run(e,t,s,o,i,d){nt(e.name);let a=[];for(let le=0;le<t.length;++le){let Pe=t[le].data;if(Pe===0)continue;let Ee=this.gpuDataManager.get(Pe);if(!Ee)throw new Error(`no GPU data for input: ${Pe}`);a.push(Ee)}let{outputs:p,dispatchGroup:g,programUniforms:w}=e.getRunData(t),F=s.length===0?p.map((le,Pe)=>Pe):s;if(F.length!==p.length)throw new Error(`Output size ${F.length} must be equal to ${p.length}.`);let D=[],m=[];for(let le=0;le<p.length;++le){if(!Number.isInteger(F[le])||F[le]<-3||F[le]>=d)throw new Error(`Invalid output index: ${F[le]}`);if(F[le]===-3)continue;let Pe=F[le]===-1,Ee=F[le]===-2,De=Pe||Ee?i(p[le].dataType,p[le].dims):o(F[le],p[le].dataType,p[le].dims);if(D.push(De),De.data===0)continue;let Qe=this.gpuDataManager.get(De.data);if(!Qe)throw new Error(`no GPU data for output: ${De.data}`);if(Pe&&this.temporaryData.push(Qe),Ee){let Je=this.kernelPersistentData.get(this.currentKernelId);Je||(Je=[],this.kernelPersistentData.set(this.currentKernelId,Je)),Je.push(Qe)}m.push(Qe)}if(a.length!==t.length||m.length!==D.length){if(m.length===0)return st(e.name),D;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let H;if(w){let le=0,Pe=[];w.forEach(Je=>{let gt=typeof Je.data=="number"?[Je.data]:Je.data;if(gt.length===0)return;let It=Je.type===10?2:4,Qt,Ms;Je.type===10?(Ms=gt.length>4?16:gt.length>2?8:gt.length*It,Qt=gt.length>4?16:It*gt.length):(Ms=gt.length<=2?gt.length*It:16,Qt=16),le=Math.ceil(le/Ms)*Ms,Pe.push(le);let ls=Je.type===10?8:4;le+=gt.length>4?Math.ceil(gt.length/ls)*Qt:gt.length*It});let Ee=16;le=Math.ceil(le/Ee)*Ee;let De=new ArrayBuffer(le);w.forEach((Je,gt)=>{let It=Pe[gt],Qt=typeof Je.data=="number"?[Je.data]:Je.data;if(Je.type===6)new Int32Array(De,It,Qt.length).set(Qt);else if(Je.type===12)new Uint32Array(De,It,Qt.length).set(Qt);else if(Je.type===10)new Uint16Array(De,It,Qt.length).set(Qt);else if(Je.type===1)new Float32Array(De,It,Qt.length).set(Qt);else throw new Error(`Unsupported uniform type: ${Mt(Je.type)}`)});let Qe=this.gpuDataManager.create(le,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Qe.buffer,0,De,0,le),this.gpuDataManager.release(Qe.id),H={offset:0,size:le,buffer:Qe.buffer}}let Q=this.programManager.normalizeDispatchGroupSize(g),Z=Q[1]===1&&Q[2]===1,ue=nr(e,t,Z),he=this.programManager.getArtifact(ue);if(he||(he=this.programManager.build(e,Q),this.programManager.setArtifact(ue,he),cs("info",()=>`[artifact] key: ${ue}, programName: ${e.name}`)),w&&he.uniformVariablesInfo){if(w.length!==he.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${he.uniformVariablesInfo.length}, got ${w.length} in program "${he.programInfo.name}".`);for(let le=0;le<w.length;le++){let Pe=w[le],Ee=Pe.type,De=typeof Pe.data=="number"?1:Pe.data.length,[Qe,Je]=he.uniformVariablesInfo[le];if(Ee!==Qe||De!==Je)throw new Error(`Uniform variable ${le} mismatch: expect type ${Qe} with size ${Je}, got type ${Ee} with size ${De} in program "${he.programInfo.name}".`)}}if(cs("info",()=>`[ProgramManager] run "${e.name}" (key=${ue}) with ${Q[0]}x${Q[1]}x${Q[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let le={kernelId:this.currentKernelId,programName:he.programInfo.name,inputTensorViews:t,outputTensorViews:D};this.pendingKernels.push(le),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(le)}return this.programManager.run(he,a,m,Q,H),st(e.name),D}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,s,o){let i=Ts.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let d={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],s]};this.kernels.set(t,d)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let s of t)this.gpuDataManager.release(s.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,s){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,d=o.kernelName,a=o.kernelEntry,p=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${d}" is not allowed to be called recursively`);this.currentKernelId=e,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),cs("info",()=>`[WebGPU] Start to run kernel "[${i}] ${d}"...`);let g=this.env.debug;this.temporaryData=[];try{return g&&this.device.pushErrorScope("validation"),a(t,p[1]),0}catch(w){return s.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${d}" failed. ${w}`)),1}finally{g&&s.push(this.device.popErrorScope().then(w=>w?`GPU validation error for kernel "[${i}] ${d}": ${w.message}`:null));for(let w of this.temporaryData)this.gpuDataManager.release(w.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,s,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let d=i.get(t),a=this.gpuDataManager.registerExternalBuffer(s,o,d);return i.set(t,[a,s]),a}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(s=>this.gpuDataManager.unregisterExternalBuffer(s[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,s){return async()=>{let o=await qt(this,e,t);return I(o.buffer,s)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){cs("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){cs("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){cs("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),s=e.length;this.pendingKernels=[];for(let o=0;o<s;o++){let i=this.getComputePassEncoder(),d=e[o];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(d.computePipeline),i.setBindGroup(0,d.bindGroup),i.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[o]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Nn,Lo,Hr,an,zo,Zn,Bo,Ro,ar=v(()=>{Ne(),Nn=1,Lo=()=>Nn++,Hr=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),an=(e,t)=>{let s=Hr.get(e);if(!s)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((o,i)=>o*i)*s/8):0},zo=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return an(this.dataType,this.tensorShape)}destroy(){cs("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,s){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===s.length&&this.tensorShape.every((o,i)=>o===s[i])}},Zn=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,s,o){if(this.wrapper){if(this.wrapper.canReuseTensor(e,t,s))return this.wrapper.tensor;if(o){if(this.wrapper.byteLength!==an(t,s))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let i=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,s,i,!0,!0),o&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else cs("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},Bo=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=Lo();return this.tensorTrackersById.set(e,new Zn(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,s,o){cs("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${s}, copyOld: ${o}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(this.backend.currentContext,t,s,o)}upload(e,t){let s=this.tensorTrackersById.get(e);if(!s)throw new Error("Tensor not found.");s.upload(t)}async download(e,t){cs("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`);let s=this.tensorTrackersById.get(e);if(!s)throw new Error("Tensor not found.");return s.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,s,o){let i=Lo(),d=new zo({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:s,shape:o});return this.tensorTrackersById.set(i,new Zn(this,d)),this.externalTensors.add(d),i}async getCachedTensor(e,t,s,o,i){let d=this.backend.currentSessionId,a=this.backend.currentContext;for(let[g,w]of this.freeTensors.entries())if(w.canReuseTensor(a,e,t)){cs("verbose",()=>`[WebNN] Reusing tensor {dataType: ${e}, shape: ${t}}`);let F=this.freeTensors.splice(g,1)[0];return F.sessionId=d,F}cs("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let p=await a.createTensor({dataType:e,shape:t,dimensions:t,usage:s,writable:o,readable:i});return new zo({sessionId:d,context:a,tensor:p,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Ro=(...e)=>new Bo(...e)}),Mr,Mn,Fn,eo=v(()=>{Gt(),Ct(),ae(),ar(),Ne(),Mr=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Mn=(e,t)=>{if(e===t)return!0;if(e===void 0||t===void 0)return!1;let s=Object.keys(e).sort(),o=Object.keys(t).sort();return s.length===o.length&&s.every((i,d)=>i===o[d]&&e[i]===t[i])},Fn=class{constructor(e){this.tensorManager=Ro(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],vr(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}async createMLContext(e){if(e instanceof GPUDevice){let s=this.mlContextCache.findIndex(o=>o.gpuDevice===e);if(s!==-1)return this.mlContextCache[s].mlContext;{let o=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:o}),o}}else if(e===void 0){let s=this.mlContextCache.findIndex(o=>o.options===void 0&&o.gpuDevice===void 0);if(s!==-1)return this.mlContextCache[s].mlContext;{let o=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:o}),o}}let t=this.mlContextCache.findIndex(s=>Mn(s.options,e));if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:s}),s}}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let s=this.sessionIdsByMLContext.get(t);s||(s=new Set,this.sessionIdsByMLContext.set(t,s)),s.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let s=this.sessionIdsByMLContext.get(t);if(s.delete(e),s.size===0){this.sessionIdsByMLContext.delete(t);let o=this.mlContextCache.findIndex(i=>i.mlContext===t);o!==-1&&this.mlContextCache.splice(o,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){cs("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,s,o){let i=Mr.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,s,o)}uploadTensor(e,t){if(!Ze().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");cs("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let s=await this.tensorManager.download(e);return I(s,t)}}registerMLTensor(e,t,s){let o=Mr.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,o,s);return cs("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${o}, dimensions: ${s}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,s,o,i,d){if(!d)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let p=d.get(a);if(!p)throw new Error(`File with name ${a} not found in preloaded files.`);if(t+s>p.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let g=p.slice(t,t+s).buffer,w;switch(i.dataType){case"float32":w=new Float32Array(g);break;case"float16":w=new Uint16Array(g);break;case"int32":w=new Int32Array(g);break;case"uint32":w=new Uint32Array(g);break;case"int64":w=new BigInt64Array(g);break;case"uint64":w=new BigUint64Array(g);break;case"int8":w=new Int8Array(g);break;case"int4":case"uint4":case"uint8":w=new Uint8Array(g);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return cs("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),o.constant(i,w)}flush(){}}}),jo={};k(jo,{init:()=>La});var to,Da,La,Zh=v(()=>{Gt(),cn(),Ne(),rs(),eo(),to=class yf{constructor(t,s,o,i){this.module=t,this.dataType=s,this.data=o,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=et.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=et.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=et.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=et.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(et.size(t)!==et.size(this.dims))throw new Error("Invalid new shape");return new yf(this.module,this.dataType,this.data,t)}},Da=class{constructor(e,t,s){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo,this.deviceInfo=t.deviceInfo;let o=e.PTR_SIZE,i=s/e.PTR_SIZE,d=o===4?"i32":"i64";this.opKernelContext=Number(e.getValue(o*i++,d));let a=Number(e.getValue(o*i++,d));this.outputCount=Number(e.getValue(o*i++,d)),this.customDataOffset=Number(e.getValue(o*i++,"*")),this.customDataSize=Number(e.getValue(o*i++,d));let p=[];for(let g=0;g<a;g++){let w=Number(e.getValue(o*i++,d)),F=Number(e.getValue(o*i++,"*")),D=Number(e.getValue(o*i++,d)),m=[];for(let H=0;H<D;H++)m.push(Number(e.getValue(o*i++,d)));p.push(new to(e,w,F,m))}this.inputs=p}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){var a;let s=((a=t==null?void 0:t.inputs)==null?void 0:a.map(p=>typeof p=="number"?this.inputs[p]:p))??this.inputs,o=(t==null?void 0:t.outputs)??[],i=(p,g,w)=>new to(this.module,g,this.output(p,w),w),d=(p,g)=>{let w=zt(p,g);if(!w)throw new Error(`Unsupported data type: ${p}`);let F=w>0?this.backend.gpuDataManager.create(w).id:0;return new to(this.module,p,F,g)};return this.backend.run(e,s,o,i,d,this.outputCount)}output(e,t){let s=this.module.stackSave();try{let o=this.module.PTR_SIZE,i=o===4?"i32":"i64",d=this.module.stackAlloc((1+t.length)*o);this.module.setValue(d,t.length,i);for(let a=0;a<t.length;a++)this.module.setValue(d+o*(a+1),t[a],i);return this.module._JsepOutput(this.opKernelContext,e,d)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(s)}}},La=async(e,t,s,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let d=new Sr;await d.initialize(s,o),i("webgpu",[d,a=>d.alloc(Number(a)),a=>d.free(a),(a,p,g,w=!1)=>{if(w)cs("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(p)}, size=${Number(g)}`),d.memcpy(Number(a),Number(p));else{cs("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(p)}, size=${Number(g)}`);let F=t.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(g));d.upload(Number(p),F)}},async(a,p,g)=>{cs("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${p}, size=${g}`),await d.download(Number(a),()=>t.HEAPU8.subarray(Number(p)>>>0,Number(p+g)>>>0))},(a,p,g)=>d.createKernel(a,Number(p),g,t.UTF8ToString(t._JsepGetNodeName(Number(p)))),a=>d.releaseKernel(a),(a,p,g,w)=>{cs("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${g}, kernel=${a}, contextDataOffset=${p}`);let F=new Da(t,d,Number(p));return d.computeKernel(Number(a),F,w)},()=>d.captureBegin(),()=>d.captureEnd(),()=>d.replay()])}else{let d=new Fn(s);i("webnn",[d,()=>d.reserveTensorId(),a=>d.releaseTensorId(a),async(a,p,g,w)=>d.ensureTensor(a,p,g,w),(a,p)=>{d.uploadTensor(a,p)},async(a,p)=>d.downloadTensor(a,p)])}}}),za,so,No,bn,Ba,Vn,Dd,Ld,zd,vn,Zr,ep,zp=v(()=>{Kt(),qs(),Gt(),Ct(),Ce(),or(),za=(e,t)=>{Ze()._OrtInit(e,t)!==0&&bt("Can't initialize onnxruntime.")},so=async e=>{za(e.wasm.numThreads,Hs(e.logLevel))},No=async(e,t)=>{{let s=(Zh(),E(jo)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let d=e.webgpu.forceFallbackAdapter;if(d!==void 0&&typeof d!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${d}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:d}),!o)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await s("webgpu",Ze(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await s("webnn",Ze(),e)}}},bn=new Map,Ba=e=>{let t=Ze(),s=t.stackSave();try{let o=t.PTR_SIZE,i=t.stackAlloc(2*o);t._OrtGetInputOutputCount(e,i,i+o)!==0&&bt("Can't get session input/output count.");let d=o===4?"i32":"i64";return[Number(t.getValue(i,d)),Number(t.getValue(i+o,d))]}finally{t.stackRestore(s)}},Vn=e=>{let t=Ze(),s=t._malloc(e.byteLength);if(s===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,s),[s,e.byteLength]},Dd=async(e,t)=>{var D,m,H;let s,o,i=Ze();Array.isArray(e)?[s,o]=e:e.buffer===i.HEAPU8.buffer?[s,o]=[e.byteOffset,e.byteLength]:[s,o]=Vn(e);let d=0,a=0,p=0,g=[],w=[],F=[];try{if([a,g]=is(t),(t==null?void 0:t.externalData)&&i.mountExternalData){let De=[];for(let Qe of t.externalData){let Je=typeof Qe=="string"?Qe:Qe.path;De.push(Ar(typeof Qe=="string"?Qe:Qe.data).then(gt=>{i.mountExternalData(Je,gt)}))}await Promise.all(De)}for(let De of(t==null?void 0:t.executionProviders)??[])if((typeof De=="string"?De:De.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof De!="string"){let Qe=De,Je=Qe==null?void 0:Qe.context,gt=Qe==null?void 0:Qe.gpuDevice,It=Qe==null?void 0:Qe.deviceType,Qt=Qe==null?void 0:Qe.powerPreference;Je?i.currentContext=Je:gt?i.currentContext=await i.jsepCreateMLContext(gt):i.currentContext=await i.jsepCreateMLContext({deviceType:It,powerPreference:Qt})}else i.currentContext=await i.jsepCreateMLContext();break}d=await i._OrtCreateSession(s,o,a),d===0&&bt("Can't create a session."),(D=i.jsepOnCreateSession)==null||D.call(i),i.currentContext&&(i.jsepRegisterMLContext(d,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[Q,Z]=Ba(d),ue=!!(t!=null&&t.enableGraphCapture),he=[],le=[],Pe=[];for(let De=0;De<Q;De++){let Qe=i._OrtGetInputName(d,De);Qe===0&&bt("Can't get an input name."),w.push(Qe),he.push(i.UTF8ToString(Qe))}for(let De=0;De<Z;De++){let Qe=i._OrtGetOutputName(d,De);Qe===0&&bt("Can't get an output name."),F.push(Qe);let Je=i.UTF8ToString(Qe);le.push(Je);{if(ue&&(t==null?void 0:t.preferredOutputLocation)===void 0){Pe.push("gpu-buffer");continue}let gt=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((m=t==null?void 0:t.preferredOutputLocation)==null?void 0:m[Je])??"cpu";if(gt!=="cpu"&&gt!=="cpu-pinned"&&gt!=="gpu-buffer"&&gt!=="ml-tensor")throw new Error(`Not supported preferred output location: ${gt}.`);if(ue&&gt!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${gt}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);Pe.push(gt)}}let Ee=null;return Pe.some(De=>De==="gpu-buffer"||De==="ml-tensor")&&(p=i._OrtCreateBinding(d),p===0&&bt("Can't create IO binding."),Ee={handle:p,outputPreferredLocations:Pe,outputPreferredLocationsEncoded:Pe.map(De=>Ys(De))}),bn.set(d,[d,w,F,Ee,ue,!1]),[d,he,le]}catch(Q){throw w.forEach(Z=>i._OrtFree(Z)),F.forEach(Z=>i._OrtFree(Z)),p!==0&&i._OrtReleaseBinding(p)!==0&&bt("Can't release IO binding."),d!==0&&i._OrtReleaseSession(d)!==0&&bt("Can't release session."),Q}finally{i._free(s),a!==0&&i._OrtReleaseSessionOptions(a)!==0&&bt("Can't release session options."),g.forEach(Q=>i._free(Q)),(H=i.unmountExternalData)==null||H.call(i)}},Ld=e=>{var g;let t=Ze(),s=bn.get(e);if(!s)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,d,a,p]=s;a&&(p&&t._OrtClearBoundOutputs(a.handle)!==0&&bt("Can't clear bound outputs."),t._OrtReleaseBinding(a.handle)!==0&&bt("Can't release IO binding.")),(g=t.jsepOnReleaseSession)==null||g.call(t,e),i.forEach(w=>t._OrtFree(w)),d.forEach(w=>t._OrtFree(w)),t._OrtReleaseSession(o)!==0&&bt("Can't release session."),bn.delete(e)},zd=(e,t,s,o,i,d=!1)=>{if(!e){t.push(0);return}let a=Ze(),p=a.PTR_SIZE,g=e[0],w=e[1],F=e[3],D,m;if(g==="string"&&(F==="gpu-buffer"||F==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(d&&F!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(F==="gpu-buffer"){let Z=e[2].gpuBuffer;m=zt(Re(g),w);let ue=a.jsepRegisterBuffer;if(!ue)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');D=ue(o,i,Z,m)}else if(F==="ml-tensor"){let Z=e[2].mlTensor;m=zt(Re(g),w);let ue=a.jsepRegisterMLTensor;if(!ue)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');D=ue(Z,Re(g),w)}else{let Z=e[2];if(Array.isArray(Z)){m=p*Z.length,D=a._malloc(m),s.push(D);for(let ue=0;ue<Z.length;ue++){if(typeof Z[ue]!="string")throw new TypeError(`tensor data at index ${ue} is not a string`);a.setValue(D+ue*p,qe(Z[ue],s),"*")}}else m=Z.byteLength,D=a._malloc(m),s.push(D),a.HEAPU8.set(new Uint8Array(Z.buffer,Z.byteOffset,m),D)}let H=a.stackSave(),Q=a.stackAlloc(4*w.length);try{w.forEach((ue,he)=>a.setValue(Q+he*p,ue,p===4?"i32":"i64"));let Z=a._OrtCreateTensor(Re(g),D,m,Q,w.length,Ys(F));Z===0&&bt(`Can't create tensor for input/output. session=${o}, index=${i}.`),t.push(Z)}finally{a.stackRestore(H)}},vn=async(e,t,s,o,i,d)=>{var Ms,ls;let a=Ze(),p=a.PTR_SIZE,g=bn.get(e);if(!g)throw new Error(`cannot run inference. invalid session id: ${e}`);let w=g[0],F=g[1],D=g[2],m=g[3],H=g[4],Q=g[5],Z=t.length,ue=o.length,he=0,le=[],Pe=[],Ee=[],De=[],Qe=a.stackSave(),Je=a.stackAlloc(Z*p),gt=a.stackAlloc(Z*p),It=a.stackAlloc(ue*p),Qt=a.stackAlloc(ue*p);try{(Ms=a.jsepOnRunStart)==null||Ms.call(a,w),[he,le]=St(d);for(let jt=0;jt<Z;jt++)zd(s[jt],Pe,De,e,t[jt],H);for(let jt=0;jt<ue;jt++)zd(i[jt],Ee,De,e,Z+o[jt],H);for(let jt=0;jt<Z;jt++)a.setValue(Je+jt*p,Pe[jt],"*"),a.setValue(gt+jt*p,F[t[jt]],"*");for(let jt=0;jt<ue;jt++)a.setValue(It+jt*p,Ee[jt],"*"),a.setValue(Qt+jt*p,D[o[jt]],"*");if(m&&!Q){let{handle:jt,outputPreferredLocations:ys,outputPreferredLocationsEncoded:Ns}=m;if(F.length!==Z)throw new Error(`input count from feeds (${Z}) is expected to be always equal to model's input count (${F.length}).`);for(let hs=0;hs<Z;hs++){let bs=t[hs];await a._OrtBindInput(jt,F[bs],Pe[hs])!==0&&bt(`Can't bind input[${hs}] for session=${e}.`)}for(let hs=0;hs<ue;hs++){let bs=o[hs];(ls=i[hs])!=null&&ls[3]?a._OrtBindOutput(jt,D[bs],Ee[hs],0)!==0&&bt(`Can't bind pre-allocated output[${hs}] for session=${e}.`):a._OrtBindOutput(jt,D[bs],0,Ns[bs])!==0&&bt(`Can't bind output[${hs}] to ${ys[hs]} for session=${e}.`)}bn.set(e,[w,F,D,m,H,!0])}let ss;m?ss=await a._OrtRunWithBinding(w,m.handle,ue,It,he):ss=await a._OrtRun(w,gt,Je,Z,Qt,ue,It,he),ss!==0&&bt("failed to call OrtRun().");let ks=[];for(let jt=0;jt<ue;jt++){let ys=Number(a.getValue(It+jt*p,"*"));if(ys===Ee[jt]){ks.push(i[jt]);continue}let Ns=a.stackSave(),hs=a.stackAlloc(4*p),bs=!1,Ks,Pt=0;try{a._OrtGetTensorData(ys,hs,hs+p,hs+2*p,hs+3*p)!==0&&bt(`Can't access output tensor data on index ${jt}.`);let Xt=p===4?"i32":"i64",Vs=Number(a.getValue(hs,Xt));Pt=a.getValue(hs+p,"*");let Tr=a.getValue(hs+p*2,"*"),$r=Number(a.getValue(hs+p*3,Xt)),fn=[];for(let lr=0;lr<$r;lr++)fn.push(Number(a.getValue(Tr+lr*p,Xt)));a._OrtFree(Tr)!==0&&bt("Can't free memory for tensor dims.");let Dn=fn.reduce((lr,Dr)=>lr*Dr,1);Ks=Mt(Vs);let _n=m==null?void 0:m.outputPreferredLocations[o[jt]];if(Ks==="string"){if(_n==="gpu-buffer"||_n==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let lr=[];for(let Dr=0;Dr<Dn;Dr++){let Un=a.getValue(Pt+Dr*p,"*"),op=a.getValue(Pt+(Dr+1)*p,"*"),Wo=Dr===Dn-1?void 0:op-Un;lr.push(a.UTF8ToString(Un,Wo))}ks.push([Ks,fn,lr,"cpu"])}else if(_n==="gpu-buffer"&&Dn>0){let lr=a.jsepGetBuffer;if(!lr)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Dr=lr(Pt),Un=zt(Vs,Dn);if(Un===void 0||!Os(Ks))throw new Error(`Unsupported data type: ${Ks}`);bs=!0,ks.push([Ks,fn,{gpuBuffer:Dr,download:a.jsepCreateDownloader(Dr,Un,Ks),dispose:()=>{a._OrtReleaseTensor(ys)!==0&&bt("Can't release tensor.")}},"gpu-buffer"])}else if(_n==="ml-tensor"&&Dn>0){let lr=a.jsepEnsureTensor;if(!lr)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(zt(Vs,Dn)===void 0||!Qs(Ks))throw new Error(`Unsupported data type: ${Ks}`);let Dr=await lr(Pt,Vs,fn,!1);bs=!0,ks.push([Ks,fn,{mlTensor:Dr,download:a.jsepCreateMLTensorDownloader(Pt,Ks),dispose:()=>{a.jsepReleaseTensorId(Pt),a._OrtReleaseTensor(ys)}},"ml-tensor"])}else{let lr=kt(Ks),Dr=new lr(Dn);new Uint8Array(Dr.buffer,Dr.byteOffset,Dr.byteLength).set(a.HEAPU8.subarray(Pt,Pt+Dr.byteLength)),ks.push([Ks,fn,Dr,"cpu"])}}finally{a.stackRestore(Ns),Ks==="string"&&Pt&&a._free(Pt),bs||a._OrtReleaseTensor(ys)}}return m&&!H&&(a._OrtClearBoundOutputs(m.handle)!==0&&bt("Can't clear bound outputs."),bn.set(e,[w,F,D,m,H,!1])),ks}finally{a.stackRestore(Qe),Pe.forEach(ss=>a._OrtReleaseTensor(ss)),Ee.forEach(ss=>a._OrtReleaseTensor(ss)),De.forEach(ss=>a._free(ss)),he!==0&&a._OrtReleaseRunOptions(he),le.forEach(ss=>a._free(ss))}},Zr=e=>{let t=Ze(),s=bn.get(e);if(!s)throw new Error("invalid session id");let o=s[0],i=t._OrtEndProfiling(o);i===0&&bt("Can't get an profile file name."),t._OrtFree(i)},ep=e=>{let t=[];for(let s of e){let o=s[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t}}),ro,ln,Ra,Bd,Rd,Oh,tp,Fh,Vo,Uo,Bp,Rp,jp,Np,Vp,Up,Wp,Gp,Kp=v(()=>{tt(),zp(),Ct(),u(),ro=()=>!!U.wasm.proxy&&typeof document<"u",Ra=!1,Bd=!1,Rd=!1,Fh=new Map,Vo=(e,t)=>{let s=Fh.get(e);s?s.push(t):Fh.set(e,[t])},Uo=()=>{if(Ra||!Bd||Rd||!ln)throw new Error("worker not ready")},Bp=e=>{switch(e.data.type){case"init-wasm":Ra=!1,e.data.err?(Rd=!0,tp[1](e.data.err)):(Bd=!0,tp[0]()),Oh&&(URL.revokeObjectURL(Oh),Oh=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Fh.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},Rp=async()=>{if(!Bd){if(Ra)throw new Error("multiple calls to 'initWasm()' detected.");if(Rd)throw new Error("previous call to 'initWasm()' failed.");if(Ra=!0,ro())return new Promise((e,t)=>{ln==null||ln.terminate(),c().then(([s,o])=>{var i;try{ln=o,ln.onerror=a=>t(a),ln.onmessage=Bp,tp=[e,t];let d={type:"init-wasm",in:U};!d.in.wasm.wasmPaths&&(s||(i=self.location.href)!=null&&i.startsWith("file:"))&&(d.in.wasm.wasmPaths={wasm:new URL(r("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),r.b).href}),ln.postMessage(d),Oh=s}catch(d){t(d)}},t)});try{await be(U.wasm),await so(U),Bd=!0}catch(e){throw Rd=!0,e}finally{Ra=!1}}},jp=async e=>{if(ro())return Uo(),new Promise((t,s)=>{Vo("init-ep",[t,s]);let o={type:"init-ep",in:{epName:e,env:U}};ln.postMessage(o)});await No(U,e)},Np=async e=>ro()?(Uo(),new Promise((t,s)=>{Vo("copy-from",[t,s]);let o={type:"copy-from",in:{buffer:e}};ln.postMessage(o,[e.buffer])})):Vn(e),Vp=async(e,t)=>{if(ro()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Uo(),new Promise((s,o)=>{Vo("create",[s,o]);let i={type:"create",in:{model:e,options:{...t}}},d=[];e instanceof Uint8Array&&d.push(e.buffer),ln.postMessage(i,d)})}else return Dd(e,t)},Up=async e=>{if(ro())return Uo(),new Promise((t,s)=>{Vo("release",[t,s]);let o={type:"release",in:e};ln.postMessage(o)});Ld(e)},Wp=async(e,t,s,o,i,d)=>{if(ro()){if(s.some(a=>a[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(a=>a))throw new Error("pre-allocated output tensor is not supported for proxy.");return Uo(),new Promise((a,p)=>{Vo("run",[a,p]);let g=s,w={type:"run",in:{sessionId:e,inputIndices:t,inputs:g,outputIndices:o,options:d}};ln.postMessage(w,ep(g))})}else return vn(e,t,s,o,i,d)},Gp=async e=>{if(ro())return Uo(),new Promise((t,s)=>{Vo("end-profiling",[t,s]);let o={type:"end-profiling",in:e};ln.postMessage(o)});Zr(e)}}),sp,qp,Hp,Lf=v(()=>{tt(),Kp(),Gt(),ut(),or(),sp=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},qp=e=>{switch(e[3]){case"cpu":return new we(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Os(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:s,download:o,dispose:i}=e[2];return we.fromGpuBuffer(s,{dataType:t,dims:e[1],download:o,dispose:i})}case"ml-tensor":{let t=e[0];if(!Qs(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:s,download:o,dispose:i}=e[2];return we.fromMLTensor(s,{dataType:t,dims:e[1],download:o,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Hp=class{async fetchModelAndCopyToWasmMemory(e){return Np(await Ar(e))}async loadModel(e,t){nt();let s;typeof e=="string"?s=await this.fetchModelAndCopyToWasmMemory(e):s=e,[this.sessionId,this.inputNames,this.outputNames]=await Vp(s,t),st()}async dispose(){return Up(this.sessionId)}async run(e,t,s){nt();let o=[],i=[];Object.entries(e).forEach(D=>{let m=D[0],H=D[1],Q=this.inputNames.indexOf(m);if(Q===-1)throw new Error(`invalid input '${m}'`);o.push(H),i.push(Q)});let d=[],a=[];Object.entries(t).forEach(D=>{let m=D[0],H=D[1],Q=this.outputNames.indexOf(m);if(Q===-1)throw new Error(`invalid output '${m}'`);d.push(H),a.push(Q)});let p=o.map((D,m)=>sp(D,()=>`input "${this.inputNames[i[m]]}"`)),g=d.map((D,m)=>D?sp(D,()=>`output "${this.outputNames[a[m]]}"`):null),w=await Wp(this.sessionId,i,p,a,g,s),F={};for(let D=0;D<w.length;D++)F[this.outputNames[a[D]]]=d[D]??qp(w[D]);return st(),F}startProfiling(){}endProfiling(){Gp(this.sessionId)}}}),Qp={};k(Qp,{OnnxruntimeWebAssemblyBackend:()=>np,initializeFlags:()=>rp,wasmBackend:()=>Xp});var rp,np,Xp,zf=v(()=>{tt(),Kp(),Lf(),rp=()=>{if((typeof U.wasm.initTimeout!="number"||U.wasm.initTimeout<0)&&(U.wasm.initTimeout=0),U.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof U.wasm.proxy!="boolean"&&(U.wasm.proxy=!1),typeof U.wasm.trace!="boolean"&&(U.wasm.trace=!1),typeof U.wasm.numThreads!="number"||!Number.isInteger(U.wasm.numThreads)||U.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)U.wasm.numThreads=1;else{let e=typeof navigator>"u"?K("node:os").cpus().length:navigator.hardwareConcurrency;U.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},np=class{async init(e){rp(),await Rp(),await jp(e)}async createInferenceSessionHandler(e,t){let s=new Hp;return await s.loadModel(e,t),Promise.resolve(s)}},Xp=new np});tt(),tt(),tt();var Bf="1.21.0-dev.20250206-d981b153d3",Rf=We;{let e=(zf(),E(Qp)).wasmBackend;re("webgpu",e,5),re("webnn",e,5),re("cpu",e,10),re("wasm",e,10)}Object.defineProperty(U.versions,"web",{value:Bf,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(Le,P,r)=>{var y;r.r(P),r.d(P,{Tensor:()=>K.Tensor,createInferenceSession:()=>me,deviceToExecutionProviders:()=>re,isONNXProxy:()=>ne,isONNXTensor:()=>Y});var z=r("./src/env.js"),V=r("?2ce3"),se=r("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),K=r("./node_modules/onnxruntime-common/dist/esm/index.js");const v=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),k=[];let x,E;const C=Symbol.for("onnxruntime");if(C in globalThis)E=globalThis[C];else if(z.apis.IS_NODE_ENV){switch(E=V??(y||(y=r.t(V,2))),process.platform){case"win32":k.push("dml");break;case"linux":process.arch==="x64"&&k.push("cuda");break}k.push("cpu"),x=["cpu"]}else E=se,z.apis.IS_WEBNN_AVAILABLE&&k.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),z.apis.IS_WEBGPU_AVAILABLE&&k.push("webgpu"),k.push("wasm"),x=["wasm"];const j=E.InferenceSession;function re(R=null){if(!R)return x;switch(R){case"auto":return k;case"gpu":return k.filter(L=>["webgpu","cuda","dml","webnn-gpu"].includes(L))}if(k.includes(R))return[v[R]??R];throw new Error(`Unsupported device: "${R}". Should be one of: ${k.join(", ")}.`)}let ce=null;async function me(R,L,T){ce&&await ce;const S=j.create(R,L);ce??(ce=S);const U=await S;return U.config=T,U}function Y(R){return R instanceof E.Tensor}const q=E==null?void 0:E.env;q!=null&&q.wasm&&(q.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${z.env.version}/dist/`,q.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(q.wasm.numThreads=1)),q!=null&&q.webgpu&&(q.webgpu.powerPreference="high-performance");function ne(){var R;return(R=q==null?void 0:q.wasm)==null?void 0:R.proxy}z.env.backends.onnx=q},"./src/base/feature_extraction_utils.js":(Le,P,r)=>{r.r(P),r.d(P,{FeatureExtractor:()=>se,validate_audio_inputs:()=>K});var y=r("./src/utils/constants.js"),z=r("./src/utils/generic.js"),V=r("./src/utils/hub.js");class se extends z.Callable{constructor(k){super(),this.config=k}static async from_pretrained(k,x){const E=await(0,V.getModelJSON)(k,y.FEATURE_EXTRACTOR_NAME,!0,x);return new this(E)}}function K(v,k){var x;if(!(v instanceof Float32Array||v instanceof Float64Array))throw new Error(`${k} expects input to be a Float32Array or a Float64Array, but got ${((x=v==null?void 0:v.constructor)==null?void 0:x.name)??typeof v} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(Le,P,r)=>{r.r(P),r.d(P,{ImageProcessor:()=>R,center_to_corners_format:()=>E,post_process_instance_segmentation:()=>ne,post_process_object_detection:()=>C,post_process_panoptic_segmentation:()=>q,post_process_semantic_segmentation:()=>j});var y=r("./src/utils/generic.js"),z=r("./src/utils/tensor.js"),V=r("./src/utils/maths.js");r("./src/utils/image.js");var se=r("./src/utils/core.js"),K=r("./src/utils/hub.js"),v=r("./src/utils/constants.js");function k(L,T,S=0,U=null){const ge=L/T;let _e=(0,V.bankers_round)(ge)*T;return U!==null&&_e>U&&(_e=Math.floor(ge)*T),_e<S&&(_e=Math.ceil(ge)*T),_e}function x([L,T],S){return[Math.max(Math.floor(L/S),1)*S,Math.max(Math.floor(T/S),1)*S]}function E([L,T,S,U]){return[L-S/2,T-U/2,L+S/2,T+U/2]}function C(L,T=.5,S=null,U=!1){const ge=L.logits,_e=L.pred_boxes,[ze,Ie,fe]=ge.dims;if(S!==null&&S.length!==ze)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Be=[];for(let ve=0;ve<ze;++ve){let Ge=S!==null?S[ve]:null,He={boxes:[],classes:[],scores:[]},Ve=ge[ve],wt=_e[ve];for(let lt=0;lt<Ie;++lt){let Ae=Ve[lt],ee=[],Me;if(U){Me=Ae.sigmoid().data;for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]>T&&ee.push(Ue)}else{let Ue=(0,V.max)(Ae.data)[1];if(Ue===fe-1||(Me=(0,V.softmax)(Ae.data),Me[Ue]<T))continue;ee.push(Ue)}for(const Ue of ee){let xe=wt[lt].data;xe=E(xe),Ge!==null&&(xe=xe.map((dt,de)=>dt*Ge[(de+1)%2])),He.boxes.push(xe),He.classes.push(Ue),He.scores.push(Me[Ue])}}Be.push(He)}return Be}function j(L,T=null){const S=L.logits,U=S.dims[0];if(T!==null&&T.length!==U)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const ge=[];for(let _e=0;_e<U;++_e){const ze=T!==null?T[_e]:null;let Ie=S[_e];ze!==null&&(Ie=(0,z.interpolate)(Ie,ze,"bilinear",!1));const[fe,Be]=ze??Ie.dims.slice(-2),ve=new z.Tensor("int32",new Int32Array(fe*Be),[fe,Be]),Ge=Ie[0].data,He=ve.data;for(let lt=1;lt<Ie.dims[0];++lt){const Ae=Ie[lt].data;for(let ee=0;ee<Ae.length;++ee)Ae[ee]>Ge[ee]&&(Ge[ee]=Ae[ee],He[ee]=lt)}const Ve=new Array(Ie.dims[0]);for(let lt=0;lt<He.length;++lt){const Ae=He[lt];Ve[Ae]=Ae}const wt=Ve.filter(lt=>lt!==void 0);ge.push({segmentation:ve,labels:wt})}return ge}function re(L,T,S,U){const ge=[],_e=[],ze=[];for(let Ie=0;Ie<L.dims[0];++Ie){const fe=L[Ie],Be=T[Ie],ve=(0,V.max)(fe.data)[1];if(ve===U)continue;const He=(0,V.softmax)(fe.data)[ve];He>S&&(ge.push(Be),_e.push(He),ze.push(ve))}return[ge,_e,ze]}function ce(L,T,S,U=.5,ge=.8){const _e=[];let ze=0,Ie=0;const fe=T[S].data;for(let ve=0;ve<L.length;++ve)L[ve]===S&&(_e.push(ve),++ze),fe[ve]>=U&&++Ie;let Be=ze>0&&Ie>0;return Be&&(Be=ze/Ie>ge),[Be,_e]}function me(L,T,S,U,ge,_e=null,ze=null){const[Ie,fe]=ze??L[0].dims,Be=new z.Tensor("int32",new Int32Array(Ie*fe),[Ie,fe]),ve=[];if(ze!==null)for(let lt=0;lt<L.length;++lt)L[lt]=(0,z.interpolate)(L[lt],ze,"bilinear",!1);const Ge=new Int32Array(L[0].data.length),He=new Float32Array(L[0].data.length);for(let lt=0;lt<L.length;++lt){let Ae=T[lt];const ee=L[lt].data;for(let Me=0;Me<ee.length;++Me)ee[Me]*=Ae,ee[Me]>He[Me]&&(Ge[Me]=lt,He[Me]=ee[Me])}let Ve=0;const wt=Be.data;for(let lt=0;lt<S.length;++lt){const Ae=S[lt],[ee,Me]=ce(Ge,L,lt,U,ge);if(ee){++Ve;for(const Ue of Me)wt[Ue]=Ve;ve.push({id:Ve,label_id:Ae,score:T[lt]})}}return[Be,ve]}function Y(L,T,S=28,U=3136,ge=1003520){if(L<S||T<S)throw new Error(`height:${L} or width:${T} must be larger than factor:${S}`);if(Math.max(L,T)/Math.min(L,T)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(L,T)/Math.min(L,T)}`);let _e=Math.round(L/S)*S,ze=Math.round(T/S)*S;if(_e*ze>ge){const Ie=Math.sqrt(L*T/ge);_e=Math.floor(L/Ie/S)*S,ze=Math.floor(T/Ie/S)*S}else if(_e*ze<U){const Ie=Math.sqrt(U/(L*T));_e=Math.ceil(L*Ie/S)*S,ze=Math.ceil(T*Ie/S)*S}return[_e,ze]}function q(L,T=.5,S=.5,U=.8,ge=null,_e=null){ge===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),ge=new Set);const ze=L.class_queries_logits??L.logits,fe=(L.masks_queries_logits??L.pred_masks).sigmoid();let[Be,ve,Ge]=ze.dims;if(Ge-=1,_e!==null&&_e.length!==Be)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let He=[];for(let Ve=0;Ve<Be;++Ve){let wt=_e!==null?_e[Ve]:null,lt=ze[Ve],Ae=fe[Ve],[ee,Me,Ue]=re(lt,Ae,T,Ge);if(Ue.length===0){let[de,rt]=wt??Ae.dims.slice(-2),ot=new z.Tensor("int32",new Int32Array(de*rt).fill(-1),[de,rt]);He.push({segmentation:ot,segments_info:[]});continue}let[xe,dt]=me(ee,Me,Ue,S,U,ge,wt);He.push({segmentation:xe,segments_info:dt})}return He}function ne(L,T=.5,S=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class R extends y.Callable{constructor(T){super(),this.image_mean=T.image_mean??T.mean,this.image_std=T.image_std??T.std,this.resample=T.resample??2,this.do_rescale=T.do_rescale??!0,this.rescale_factor=T.rescale_factor??.00392156862745098,this.do_normalize=T.do_normalize,this.do_thumbnail=T.do_thumbnail,this.size=T.size??T.image_size,this.do_resize=T.do_resize??this.size!==void 0,this.size_divisibility=T.size_divisibility??T.size_divisor,this.do_center_crop=T.do_center_crop,this.crop_size=T.crop_size,this.do_convert_rgb=T.do_convert_rgb??!0,this.do_crop_margin=T.do_crop_margin,this.pad_size=T.pad_size,this.do_pad=T.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=T.do_flip_channel_order??!1,this.config=T}async thumbnail(T,S,U=2){const ge=T.height,_e=T.width,ze=S.height,Ie=S.width;let fe=Math.min(ge,ze),Be=Math.min(_e,Ie);return fe===ge&&Be===_e?T:(ge>_e?Be=Math.floor(_e*fe/ge):_e>ge&&(fe=Math.floor(ge*Be/_e)),await T.resize(Be,fe,{resample:U}))}async crop_margin(T,S=200){const U=T.clone().grayscale(),ge=(0,V.min)(U.data)[0],ze=(0,V.max)(U.data)[0]-ge;if(ze===0)return T;const Ie=S/255;let fe=U.width,Be=U.height,ve=0,Ge=0;const He=U.data;for(let Ve=0;Ve<U.height;++Ve){const wt=Ve*U.width;for(let lt=0;lt<U.width;++lt)(He[wt+lt]-ge)/ze<Ie&&(fe=Math.min(fe,lt),Be=Math.min(Be,Ve),ve=Math.max(ve,lt),Ge=Math.max(Ge,Ve))}return T=await T.crop([fe,Be,ve,Ge]),T}pad_image(T,S,U,{mode:ge="constant",center:_e=!1,constant_values:ze=0}={}){const[Ie,fe,Be]=S;let ve,Ge;if(typeof U=="number"?(ve=U,Ge=U):U==="square"?ve=Ge=Math.max(Ie,fe):(ve=U.width,Ge=U.height),ve!==fe||Ge!==Ie){const He=new Float32Array(ve*Ge*Be);if(Array.isArray(ze))for(let lt=0;lt<He.length;++lt)He[lt]=ze[lt%Be];else ze!==0&&He.fill(ze);const[Ve,wt]=_e?[Math.floor((ve-fe)/2),Math.floor((Ge-Ie)/2)]:[0,0];for(let lt=0;lt<Ie;++lt){const Ae=(lt+wt)*ve,ee=lt*fe;for(let Me=0;Me<fe;++Me){const Ue=(Ae+Me+Ve)*Be,xe=(ee+Me)*Be;for(let dt=0;dt<Be;++dt)He[Ue+dt]=T[xe+dt]}}if(ge==="symmetric"){if(_e)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const lt=Ie-1,Ae=fe-1;for(let ee=0;ee<Ge;++ee){const Me=ee*ve,Ue=(0,se.calculateReflectOffset)(ee,lt)*fe;for(let xe=0;xe<ve;++xe){if(ee<Ie&&xe<fe)continue;const dt=(Me+xe)*Be,de=(Ue+(0,se.calculateReflectOffset)(xe,Ae))*Be;for(let rt=0;rt<Be;++rt)He[dt+rt]=T[de+rt]}}}T=He,S=[Ge,ve,Be]}return[T,S]}rescale(T){for(let S=0;S<T.length;++S)T[S]=this.rescale_factor*T[S]}get_resize_output_image_size(T,S){const[U,ge]=T.size;let _e,ze;if(this.do_thumbnail){const{height:Ie,width:fe}=S;_e=Math.min(Ie,fe)}else Number.isInteger(S)?(_e=S,ze=this.config.max_size??_e):S!==void 0&&(_e=S.shortest_edge,ze=S.longest_edge);if(_e!==void 0||ze!==void 0){const Ie=_e===void 0?1:Math.max(_e/U,_e/ge),fe=U*Ie,Be=ge*Ie,ve=ze===void 0?1:Math.min(ze/fe,ze/Be);let Ge=Math.floor(Number((fe*ve).toFixed(2))),He=Math.floor(Number((Be*ve).toFixed(2)));return this.size_divisibility!==void 0&&([Ge,He]=x([Ge,He],this.size_divisibility)),[Ge,He]}else if(S!==void 0&&S.width!==void 0&&S.height!==void 0){let Ie=S.width,fe=S.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Be=fe/ge,ve=Ie/U;Math.abs(1-ve)<Math.abs(1-Be)?Be=ve:ve=Be,fe=k(Be*ge,this.config.ensure_multiple_of),Ie=k(ve*U,this.config.ensure_multiple_of)}return[Ie,fe]}else{if(this.size_divisibility!==void 0)return x([U,ge],this.size_divisibility);if(S.min_pixels!==void 0&&S.max_pixels!==void 0){const{min_pixels:Ie,max_pixels:fe}=S,Be=this.config.patch_size*this.config.merge_size;return Y(ge,U,Be,Ie,fe)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(S)}`)}}async resize(T){const[S,U]=this.get_resize_output_image_size(T,this.size);return await T.resize(S,U,{resample:this.resample})}async preprocess(T,{do_normalize:S=null,do_pad:U=null,do_convert_rgb:ge=null,do_convert_grayscale:_e=null,do_flip_channel_order:ze=null}={}){this.do_crop_margin&&(T=await this.crop_margin(T));const[Ie,fe]=T.size;if(ge??this.do_convert_rgb?T=T.rgb():_e&&(T=T.grayscale()),this.do_resize&&(T=await this.resize(T)),this.do_thumbnail&&(T=await this.thumbnail(T,this.size,this.resample)),this.do_center_crop){let Ve,wt;Number.isInteger(this.crop_size)?(Ve=this.crop_size,wt=this.crop_size):(Ve=this.crop_size.width,wt=this.crop_size.height),T=await T.center_crop(Ve,wt)}const Be=[T.height,T.width];let ve=Float32Array.from(T.data),Ge=[T.height,T.width,T.channels];if(this.do_rescale&&this.rescale(ve),S??this.do_normalize){let Ve=this.image_mean;Array.isArray(this.image_mean)||(Ve=new Array(T.channels).fill(Ve));let wt=this.image_std;if(Array.isArray(this.image_std)||(wt=new Array(T.channels).fill(Ve)),Ve.length!==T.channels||wt.length!==T.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Ve.length}) and \`image_std\` (${wt.length}) must match the number of channels in the image (${T.channels}).`);for(let lt=0;lt<ve.length;lt+=T.channels)for(let Ae=0;Ae<T.channels;++Ae)ve[lt+Ae]=(ve[lt+Ae]-Ve[Ae])/wt[Ae]}if(U??this.do_pad){if(this.pad_size)[ve,Ge]=this.pad_image(ve,[T.height,T.width,T.channels],this.pad_size);else if(this.size_divisibility){const[Ve,wt]=x([Ge[1],Ge[0]],this.size_divisibility);[ve,Ge]=this.pad_image(ve,Ge,{width:Ve,height:wt})}}if(ze??this.do_flip_channel_order){if(Ge[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Ve=0;Ve<ve.length;Ve+=3){const wt=ve[Ve];ve[Ve]=ve[Ve+2],ve[Ve+2]=wt}}const He=new z.Tensor("float32",ve,Ge).permute(2,0,1);return{original_size:[fe,Ie],reshaped_input_size:Be,pixel_values:He}}async _call(T,...S){Array.isArray(T)||(T=[T]);const U=await Promise.all(T.map(_e=>this.preprocess(_e)));return{pixel_values:(0,z.stack)(U.map(_e=>_e.pixel_values),0),original_sizes:U.map(_e=>_e.original_size),reshaped_input_sizes:U.map(_e=>_e.reshaped_input_size)}}static async from_pretrained(T,S){const U=await(0,K.getModelJSON)(T,v.IMAGE_PROCESSOR_NAME,!0,S);return new this(U)}}},"./src/base/processing_utils.js":(Le,P,r)=>{r.r(P),r.d(P,{Processor:()=>se});var y=r("./src/utils/constants.js"),z=r("./src/utils/generic.js"),V=r("./src/utils/hub.js");class se extends z.Callable{constructor(v,k){super(),this.config=v,this.components=k}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(v,k={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(v,{tokenize:!1,...k})}batch_decode(...v){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...v)}decode(...v){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...v)}async _call(v,...k){for(const x of[this.image_processor,this.feature_extractor,this.tokenizer])if(x)return x(v,...k);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(v,k){const[x,E]=await Promise.all([this.uses_processor_config?(0,V.getModelJSON)(v,y.PROCESSOR_NAME,!0,k):{},Promise.all(this.classes.filter(C=>C in this).map(async C=>{const j=await this[C].from_pretrained(v,k);return[C.replace(/_class$/,""),j]})).then(Object.fromEntries)]);return new this(x,E)}}ke(se,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),ke(se,"uses_processor_config",!1)},"./src/configs.js":(Le,P,r)=>{r.r(P),r.d(P,{AutoConfig:()=>k,PretrainedConfig:()=>v,getKeyValueShapes:()=>K});var y=r("./src/utils/core.js"),z=r("./src/utils/hub.js");async function V(x,E){return await(0,z.getModelJSON)(x,"config.json",!0,E)}function se(x){const E={};let C={};switch(x.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":C=se(x.text_config);break;case"moondream1":C=se(x.phi_config);break;case"musicgen":C=se(x.decoder);break;case"multi_modality":C=se(x.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":E.num_heads="n_head",E.num_layers="n_layer",E.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":E.num_heads="num_attention_heads",E.num_layers="num_hidden_layers",E.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":E.num_heads="num_key_value_heads",E.num_layers="num_hidden_layers",E.hidden_size="hidden_size",E.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":E.num_heads="num_key_value_heads",E.num_layers="num_hidden_layers",E.dim_kv="head_dim";break;case"openelm":E.num_heads="num_kv_heads",E.num_layers="num_transformer_layers",E.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":E.num_heads="num_heads",E.num_layers="num_layers",E.hidden_size="hidden_size";break;case"bloom":E.num_heads="n_head",E.num_layers="n_layer",E.hidden_size="hidden_size";break;case"mpt":E.num_heads="n_heads",E.num_layers="n_layers",E.hidden_size="d_model";break;case"exaone":E.num_heads="num_key_value_heads",E.num_layers="num_layers",E.dim_kv="head_dim",E.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":E.num_decoder_layers="num_decoder_layers",E.num_decoder_heads="num_heads",E.decoder_dim_kv="d_kv",E.num_encoder_layers="num_layers",E.num_encoder_heads="num_heads",E.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":E.num_decoder_layers="decoder_layers",E.num_decoder_heads="decoder_attention_heads",E.decoder_hidden_size="d_model",E.num_encoder_layers="encoder_layers",E.num_encoder_heads="encoder_attention_heads",E.encoder_hidden_size="d_model";break;case"speecht5":E.num_decoder_layers="decoder_layers",E.num_decoder_heads="decoder_attention_heads",E.decoder_hidden_size="hidden_size",E.num_encoder_layers="encoder_layers",E.num_encoder_heads="encoder_attention_heads",E.encoder_hidden_size="hidden_size";break;case"trocr":E.num_encoder_layers=E.num_decoder_layers="decoder_layers",E.num_encoder_heads=E.num_decoder_heads="decoder_attention_heads",E.encoder_hidden_size=E.decoder_hidden_size="d_model";break;case"musicgen_decoder":E.num_encoder_layers=E.num_decoder_layers="num_hidden_layers",E.num_encoder_heads=E.num_decoder_heads="num_attention_heads",E.encoder_hidden_size=E.decoder_hidden_size="hidden_size";break;case"moonshine":E.num_decoder_layers="decoder_num_hidden_layers",E.num_decoder_heads="decoder_num_key_value_heads",E.num_encoder_layers="encoder_num_hidden_layers",E.num_encoder_heads="encoder_num_key_value_heads",E.encoder_hidden_size=E.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const re=se(x.decoder),ce="num_decoder_layers"in re,me=(0,y.pick)(x,["model_type","is_encoder_decoder"]);return ce?(me.num_decoder_layers=re.num_decoder_layers,me.num_decoder_heads=re.num_decoder_heads,me.decoder_hidden_size=re.decoder_hidden_size,me.num_encoder_layers=re.num_encoder_layers,me.num_encoder_heads=re.num_encoder_heads,me.encoder_hidden_size=re.encoder_hidden_size):(me.num_layers=re.num_layers,me.num_heads=re.num_heads,me.hidden_size=re.hidden_size),me}const j={...C,...(0,y.pick)(x,["model_type","multi_query","is_encoder_decoder"])};for(const re in E)j[re]=x[E[re]];return j}function K(x,{prefix:E="past_key_values",batch_size:C=1}={}){const j={},re=x.normalized_config;if(re.is_encoder_decoder&&"num_encoder_heads"in re&&"num_decoder_heads"in re){const ce=re.encoder_dim_kv??re.encoder_hidden_size/re.num_encoder_heads,me=re.decoder_dim_kv??re.decoder_hidden_size/re.num_decoder_heads,Y=[C,re.num_encoder_heads,0,ce],q=[C,re.num_decoder_heads,0,me];for(let ne=0;ne<re.num_decoder_layers;++ne)j[`${E}.${ne}.encoder.key`]=Y,j[`${E}.${ne}.encoder.value`]=Y,j[`${E}.${ne}.decoder.key`]=q,j[`${E}.${ne}.decoder.value`]=q}else{const ce=re.num_heads,me=re.num_layers,Y=re.dim_kv??re.hidden_size/(re.num_attention_heads??ce);if(re.model_type==="falcon"){const q=[C*ce,0,Y];for(let ne=0;ne<me;++ne)j[`${E}.${ne}.key`]=q,j[`${E}.${ne}.value`]=q}else if(re.multi_query){const q=[C*ce,0,2*Y];for(let ne=0;ne<me;++ne)j[`${E}.${ne}.key_value`]=q}else if(re.model_type==="bloom"){const q=[C*ce,Y,0],ne=[C*ce,0,Y];for(let R=0;R<me;++R)j[`${E}.${R}.key`]=q,j[`${E}.${R}.value`]=ne}else if(re.model_type==="openelm")for(let q=0;q<me;++q){const ne=[C,ce[q],0,Y];j[`${E}.${q}.key`]=ne,j[`${E}.${q}.value`]=ne}else{const q=[C,ce,0,Y];for(let ne=0;ne<me;++ne)j[`${E}.${ne}.key`]=q,j[`${E}.${ne}.value`]=q}}return j}class v{constructor(E){ke(this,"model_type",null);ke(this,"is_encoder_decoder",!1);ke(this,"max_position_embeddings");ke(this,"transformers.js_config");Object.assign(this,E),this.normalized_config=se(this)}static async from_pretrained(E,{progress_callback:C=null,config:j=null,cache_dir:re=null,local_files_only:ce=!1,revision:me="main"}={}){j&&!(j instanceof v)&&(j=new v(j));const Y=j??await V(E,{progress_callback:C,config:j,cache_dir:re,local_files_only:ce,revision:me});return new this(Y)}}class k{static async from_pretrained(...E){return v.from_pretrained(...E)}}},"./src/env.js":(Le,P,r)=>{var U,ge;r.r(P),r.d(P,{apis:()=>me,env:()=>T});var y=r("?569f"),z=r("?3f59"),V=r("?154a");const se="3.3.3",K=typeof window<"u"&&typeof window.document<"u",v=typeof self<"u"&&((U=self.constructor)==null?void 0:U.name)==="DedicatedWorkerGlobalScope",k=typeof self<"u"&&"caches"in self,x=typeof navigator<"u"&&"gpu"in navigator,E=typeof navigator<"u"&&"ml"in navigator,C=typeof process<"u",j=C&&((ge=process==null?void 0:process.release)==null?void 0:ge.name)==="node",re=!S(y),ce=!S(z),me=Object.freeze({IS_BROWSER_ENV:K,IS_WEBWORKER_ENV:v,IS_WEB_CACHE_AVAILABLE:k,IS_WEBGPU_AVAILABLE:x,IS_WEBNN_AVAILABLE:E,IS_PROCESS_AVAILABLE:C,IS_NODE_ENV:j,IS_FS_AVAILABLE:re,IS_PATH_AVAILABLE:ce}),Y=re&&ce;let q="./";if(Y){const _e=Object({url:self.location.href}).url;_e?q=z.dirname(z.dirname(V.fileURLToPath(_e))):typeof __dirname<"u"&&(q=z.dirname(__dirname))}const ne=Y?z.join(q,"/.cache/"):null,R="/models/",L=Y?z.join(q,R):R,T={version:se,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(K||v),localModelPath:L,useFS:re,useBrowserCache:k,useFSCache:re,cacheDir:ne,useCustomCache:!1,customCache:null};function S(_e){return Object.keys(_e).length===0}},"./src/generation/configuration_utils.js":(Le,P,r)=>{r.r(P),r.d(P,{GenerationConfig:()=>z});var y=r("./src/utils/core.js");class z{constructor(se){ke(this,"max_length",20);ke(this,"max_new_tokens",null);ke(this,"min_length",0);ke(this,"min_new_tokens",null);ke(this,"early_stopping",!1);ke(this,"max_time",null);ke(this,"do_sample",!1);ke(this,"num_beams",1);ke(this,"num_beam_groups",1);ke(this,"penalty_alpha",null);ke(this,"use_cache",!0);ke(this,"temperature",1);ke(this,"top_k",50);ke(this,"top_p",1);ke(this,"typical_p",1);ke(this,"epsilon_cutoff",0);ke(this,"eta_cutoff",0);ke(this,"diversity_penalty",0);ke(this,"repetition_penalty",1);ke(this,"encoder_repetition_penalty",1);ke(this,"length_penalty",1);ke(this,"no_repeat_ngram_size",0);ke(this,"bad_words_ids",null);ke(this,"force_words_ids",null);ke(this,"renormalize_logits",!1);ke(this,"constraints",null);ke(this,"forced_bos_token_id",null);ke(this,"forced_eos_token_id",null);ke(this,"remove_invalid_values",!1);ke(this,"exponential_decay_length_penalty",null);ke(this,"suppress_tokens",null);ke(this,"streamer",null);ke(this,"begin_suppress_tokens",null);ke(this,"forced_decoder_ids",null);ke(this,"guidance_scale",null);ke(this,"num_return_sequences",1);ke(this,"output_attentions",!1);ke(this,"output_hidden_states",!1);ke(this,"output_scores",!1);ke(this,"return_dict_in_generate",!1);ke(this,"pad_token_id",null);ke(this,"bos_token_id",null);ke(this,"eos_token_id",null);ke(this,"encoder_no_repeat_ngram_size",0);ke(this,"decoder_start_token_id",null);ke(this,"generation_kwargs",{});Object.assign(this,(0,y.pick)(se,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(Le,P,r)=>{r.r(P),r.d(P,{ClassifierFreeGuidanceLogitsProcessor:()=>Y,ForcedBOSTokenLogitsProcessor:()=>v,ForcedEOSTokenLogitsProcessor:()=>k,LogitsProcessor:()=>V,LogitsProcessorList:()=>K,LogitsWarper:()=>se,MinLengthLogitsProcessor:()=>re,MinNewTokensLengthLogitsProcessor:()=>ce,NoBadWordsLogitsProcessor:()=>me,NoRepeatNGramLogitsProcessor:()=>C,RepetitionPenaltyLogitsProcessor:()=>j,SuppressTokensAtBeginLogitsProcessor:()=>x,TemperatureLogitsWarper:()=>q,TopKLogitsWarper:()=>R,TopPLogitsWarper:()=>ne,WhisperTimeStampLogitsProcessor:()=>E});var y=r("./src/utils/generic.js");r("./src/utils/tensor.js");var z=r("./src/utils/maths.js");class V extends y.Callable{_call(T,S){throw Error("`_call` should be implemented in a subclass")}}class se extends y.Callable{_call(T,S){throw Error("`_call` should be implemented in a subclass")}}class K extends y.Callable{constructor(){super(),this.processors=[]}push(T){this.processors.push(T)}extend(T){this.processors.push(...T)}_call(T,S){let U=S;for(const ge of this.processors)U=ge(T,U);return U}[Symbol.iterator](){return this.processors.values()}}class v extends V{constructor(T){super(),this.bos_token_id=T}_call(T,S){for(let U=0;U<T.length;++U)if(T[U].length===1){const ge=S[U].data;ge.fill(-1/0),ge[this.bos_token_id]=0}return S}}class k extends V{constructor(T,S){super(),this.max_length=T,this.eos_token_id=Array.isArray(S)?S:[S]}_call(T,S){for(let U=0;U<T.length;++U)if(T[U].length===this.max_length-1){const ge=S[U].data;ge.fill(-1/0);for(const _e of this.eos_token_id)ge[_e]=0}return S}}class x extends V{constructor(T,S){super(),this.begin_suppress_tokens=T,this.begin_index=S}_call(T,S){for(let U=0;U<T.length;++U)if(T[U].length===this.begin_index){const ge=S[U].data;for(const _e of this.begin_suppress_tokens)ge[_e]=-1/0}return S}}class E extends V{constructor(T,S){super(),this.eos_token_id=Array.isArray(T.eos_token_id)?T.eos_token_id[0]:T.eos_token_id,this.no_timestamps_token_id=T.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=S.length,S.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=T.max_initial_timestamp_index}_call(T,S){for(let U=0;U<T.length;++U){const ge=S[U].data;if(ge[this.no_timestamps_token_id]=-1/0,T[U].length===this.begin_index-1){ge.fill(-1/0),ge[this.timestamp_begin]=0;continue}const _e=T[U].slice(this.begin_index),ze=_e.length>=1&&_e[_e.length-1]>=this.timestamp_begin,Ie=_e.length<2||_e[_e.length-2]>=this.timestamp_begin;if(ze&&(Ie?ge.subarray(this.timestamp_begin).fill(-1/0):ge.subarray(0,this.eos_token_id).fill(-1/0)),T[U].length===this.begin_index&&this.max_initial_timestamp_index!==null){const Ge=this.timestamp_begin+this.max_initial_timestamp_index;ge.subarray(Ge+1).fill(-1/0)}const fe=(0,z.log_softmax)(ge),Be=Math.log(fe.subarray(this.timestamp_begin).map(Math.exp).reduce((Ge,He)=>Ge+He)),ve=(0,z.max)(fe.subarray(0,this.timestamp_begin))[0];Be>ve&&ge.subarray(0,this.timestamp_begin).fill(-1/0)}return S}}class C extends V{constructor(T){super(),this.no_repeat_ngram_size=T}getNgrams(T){const S=T.length,U=[];for(let _e=0;_e<S+1-this.no_repeat_ngram_size;++_e){const ze=[];for(let Ie=0;Ie<this.no_repeat_ngram_size;++Ie)ze.push(T[_e+Ie]);U.push(ze.map(Number))}const ge=new Map;for(const _e of U){const ze=_e.slice(0,_e.length-1),Ie=JSON.stringify(ze),fe=ge.get(Ie)??[];fe.push(_e[_e.length-1]),ge.set(Ie,fe)}return ge}getGeneratedNgrams(T,S){const U=S.slice(S.length+1-this.no_repeat_ngram_size,S.length);return T.get(JSON.stringify(U.map(Number)))??[]}calcBannedNgramTokens(T){const S=[];if(T.length+1<this.no_repeat_ngram_size)return S;{const U=this.getNgrams(T);return this.getGeneratedNgrams(U,T)}}_call(T,S){for(let U=0;U<T.length;++U){const ge=S[U].data,_e=this.calcBannedNgramTokens(T[U]);for(const ze of _e)ge[ze]=-1/0}return S}}class j extends V{constructor(T){super(),this.penalty=T}_call(T,S){for(let U=0;U<T.length;++U){const ge=S[U].data;for(const _e of new Set(T[U])){const ze=Number(_e);ge[ze]<0?ge[ze]*=this.penalty:ge[ze]/=this.penalty}}return S}}class re extends V{constructor(T,S){super(),this.min_length=T,this.eos_token_id=Array.isArray(S)?S:[S]}_call(T,S){for(let U=0;U<T.length;++U)if(T[U].length<this.min_length){const ge=S[U].data;for(const _e of this.eos_token_id)ge[_e]=-1/0}return S}}class ce extends V{constructor(T,S,U){super(),this.prompt_length_to_skip=T,this.min_new_tokens=S,this.eos_token_id=Array.isArray(U)?U:[U]}_call(T,S){for(let U=0;U<T.length;++U)if(T[U].length-this.prompt_length_to_skip<this.min_new_tokens){const _e=S[U].data;for(const ze of this.eos_token_id)_e[ze]=-1/0}return S}}class me extends V{constructor(T,S){super(),this.bad_words_ids=T,this.eos_token_id=Array.isArray(S)?S:[S]}_call(T,S){for(let U=0;U<T.length;++U){const ge=S[U].data,_e=T[U];for(const ze of this.bad_words_ids){let Ie=!0;for(let fe=1;fe<=ze.length-1&&ze.length<_e.length;++fe)if(ze.at(-fe-1)!=_e.at(-fe)){Ie=!1;break}Ie&&(ge[ze.at(-1)]=-1/0)}}return S}}class Y extends V{constructor(T){if(super(),T<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${T}.`);this.guidance_scale=T}_call(T,S){if(S.dims[0]!==2*T.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${S.dims[0]} for the logits and ${T.length} for the input ids.`);const U=T.length,ge=S.slice([0,U],null),_e=S.slice([U,S.dims[0]],null);for(let ze=0;ze<_e.data.length;++ze)_e.data[ze]+=(ge.data[ze]-_e.data[ze])*this.guidance_scale;return _e}}class q extends se{constructor(T){super(),this.temperature=T}_call(T,S){const U=S.data;for(let ge=0;ge<U.length;++ge)U[ge]/=this.temperature;return S}}class ne extends se{constructor(T,{filter_value:S=-1/0,min_tokens_to_keep:U=1}={}){if(super(),T<0||T>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${T}`);if(!Number.isInteger(U)||U<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${U}`);this.top_p=T,this.filter_value=S,this.min_tokens_to_keep=U}}class R extends se{constructor(T,{filter_value:S=-1/0,min_tokens_to_keep:U=1}={}){if(super(),!Number.isInteger(T)||T<0)throw new Error(`\`top_k\` must be a positive integer, but is ${T}`);this.top_k=Math.max(T,U),this.filter_value=S}}},"./src/generation/logits_sampler.js":(Le,P,r)=>{r.r(P),r.d(P,{LogitsSampler:()=>se});var y=r("./src/utils/generic.js"),z=r("./src/utils/tensor.js"),V=r("./src/utils/maths.js");r("./src/generation/configuration_utils.js");class se extends y.Callable{constructor(E){super(),this.generation_config=E}async _call(E){return this.sample(E)}async sample(E){throw Error("sample should be implemented in subclasses.")}getLogits(E,C){let j=E.dims.at(-1),re=E.data;if(C===-1)re=re.slice(-j);else{let ce=C*j;re=re.slice(ce,ce+j)}return re}randomSelect(E){let C=0;for(let re=0;re<E.length;++re)C+=E[re];let j=Math.random()*C;for(let re=0;re<E.length;++re)if(j-=E[re],j<=0)return re;return 0}static getSampler(E){if(E.do_sample)return new v(E);if(E.num_beams>1)return new k(E);if(E.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${E.num_return_sequences}.`);return new K(E)}}class K extends se{async sample(E){const C=(0,V.max)(E.data)[1];return[[BigInt(C),0]]}}class v extends se{async sample(E){let C=E.dims.at(-1);this.generation_config.top_k>0&&(C=Math.min(this.generation_config.top_k,C));const[j,re]=await(0,z.topk)(E,C),ce=(0,V.softmax)(j.data);return Array.from({length:this.generation_config.num_beams},()=>{const me=this.randomSelect(ce);return[re.data[me],Math.log(ce[me])]})}}class k extends se{async sample(E){let C=E.dims.at(-1);this.generation_config.top_k>0&&(C=Math.min(this.generation_config.top_k,C));const[j,re]=await(0,z.topk)(E,C),ce=(0,V.softmax)(j.data);return Array.from({length:this.generation_config.num_beams},(me,Y)=>[re.data[Y],Math.log(ce[Y])])}}},"./src/generation/stopping_criteria.js":(Le,P,r)=>{r.r(P),r.d(P,{EosTokenCriteria:()=>K,InterruptableStoppingCriteria:()=>v,MaxLengthCriteria:()=>se,StoppingCriteria:()=>z,StoppingCriteriaList:()=>V});var y=r("./src/utils/generic.js");class z extends y.Callable{_call(x,E){throw Error("StoppingCriteria needs to be subclassed")}}class V extends y.Callable{constructor(){super(),this.criteria=[]}push(x){this.criteria.push(x)}extend(x){x instanceof V?x=x.criteria:x instanceof z&&(x=[x]),this.criteria.push(...x)}_call(x,E){const C=new Array(x.length).fill(!1);for(const j of this.criteria){const re=j(x,E);for(let ce=0;ce<C.length;++ce)C[ce]||(C[ce]=re[ce])}return C}[Symbol.iterator](){return this.criteria.values()}}class se extends z{constructor(x,E=null){super(),this.max_length=x,this.max_position_embeddings=E}_call(x){return x.map(E=>E.length>=this.max_length)}}class K extends z{constructor(x){super(),Array.isArray(x)||(x=[x]),this.eos_token_id=x}_call(x,E){return x.map(C=>{const j=C.at(-1);return this.eos_token_id.some(re=>j==re)})}}class v extends z{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(x,E){return new Array(x.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(Le,P,r)=>{r.r(P),r.d(P,{BaseStreamer:()=>se,TextStreamer:()=>v,WhisperTextStreamer:()=>k});var y=r("./src/utils/core.js"),z=r("./src/tokenizers.js"),V=r("./src/env.js");class se{put(E){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const K=V.apis.IS_PROCESS_AVAILABLE?x=>process.stdout.write(x):x=>console.log(x);class v extends se{constructor(E,{skip_prompt:C=!1,callback_function:j=null,token_callback_function:re=null,skip_special_tokens:ce=!0,decode_kwargs:me={},...Y}={}){super(),this.tokenizer=E,this.skip_prompt=C,this.callback_function=j??K,this.token_callback_function=re,this.decode_kwargs={skip_special_tokens:ce,...me,...Y},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(E){var ce;if(E.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const C=E[0];(ce=this.token_callback_function)==null||ce.call(this,C),this.token_cache=(0,y.mergeArrays)(this.token_cache,C);const j=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let re;j.endsWith(`
`)?(re=j.slice(this.print_len),this.token_cache=[],this.print_len=0):j.length>0&&(0,z.is_chinese_char)(j.charCodeAt(j.length-1))?(re=j.slice(this.print_len),this.print_len+=re.length):(re=j.slice(this.print_len,j.lastIndexOf(" ")+1),this.print_len+=re.length),this.on_finalized_text(re,!1)}end(){let E;this.token_cache.length>0?(E=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):E="",this.next_tokens_are_prompt=!0,this.on_finalized_text(E,!0)}on_finalized_text(E,C){var j,re;E.length>0&&((j=this.callback_function)==null||j.call(this,E)),C&&this.callback_function===K&&V.apis.IS_PROCESS_AVAILABLE&&((re=this.callback_function)==null||re.call(this,`
`))}}class k extends v{constructor(E,{skip_prompt:C=!1,callback_function:j=null,token_callback_function:re=null,on_chunk_start:ce=null,on_chunk_end:me=null,on_finalize:Y=null,time_precision:q=.02,skip_special_tokens:ne=!0,decode_kwargs:R={}}={}){super(E,{skip_prompt:C,skip_special_tokens:ne,callback_function:j,token_callback_function:re,decode_kwargs:R}),this.timestamp_begin=E.timestamp_begin,this.on_chunk_start=ce,this.on_chunk_end=me,this.on_finalize=Y,this.time_precision=q,this.waiting_for_timestamp=!1}put(E){var j,re;if(E.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const C=E[0];if(C.length===1){const ce=Number(C[0])-this.timestamp_begin;if(ce>=0){const me=ce*this.time_precision;this.waiting_for_timestamp?(j=this.on_chunk_end)==null||j.call(this,me):(re=this.on_chunk_start)==null||re.call(this,me),this.waiting_for_timestamp=!this.waiting_for_timestamp,E=[[]]}}return super.put(E)}end(){var E;super.end(),(E=this.on_finalize)==null||E.call(this)}}},"./src/models.js":(Le,P,r)=>{r.r(P),r.d(P,{ASTForAudioClassification:()=>Qo,ASTModel:()=>qa,ASTPreTrainedModel:()=>xs,AlbertForMaskedLM:()=>cs,AlbertForQuestionAnswering:()=>Er,AlbertForSequenceClassification:()=>vr,AlbertModel:()=>mr,AlbertPreTrainedModel:()=>Ps,AutoModel:()=>Aa,AutoModelForAudioClassification:()=>xd,AutoModelForAudioFrameClassification:()=>Pd,AutoModelForCTC:()=>Td,AutoModelForCausalLM:()=>pd,AutoModelForDepthEstimation:()=>Sd,AutoModelForDocumentQuestionAnswering:()=>Sh,AutoModelForImageClassification:()=>gd,AutoModelForImageFeatureExtraction:()=>Id,AutoModelForImageMatting:()=>Cd,AutoModelForImageSegmentation:()=>wd,AutoModelForImageToImage:()=>kd,AutoModelForMaskGeneration:()=>vd,AutoModelForMaskedLM:()=>md,AutoModelForNormalEstimation:()=>$h,AutoModelForObjectDetection:()=>Md,AutoModelForPoseEstimation:()=>$d,AutoModelForQuestionAnswering:()=>fd,AutoModelForSemanticSegmentation:()=>yd,AutoModelForSeq2SeqLM:()=>cd,AutoModelForSequenceClassification:()=>kh,AutoModelForSpeechSeq2Seq:()=>dd,AutoModelForTextToSpectrogram:()=>Oa,AutoModelForTextToWaveform:()=>hd,AutoModelForTokenClassification:()=>ud,AutoModelForUniversalSegmentation:()=>Fa,AutoModelForVision2Seq:()=>_d,AutoModelForXVector:()=>Ed,AutoModelForZeroShotObjectDetection:()=>bd,BartForConditionalGeneration:()=>ws,BartForSequenceClassification:()=>Ws,BartModel:()=>qt,BartPretrainedModel:()=>Lt,BaseModelOutput:()=>ot,BeitForImageClassification:()=>kn,BeitModel:()=>Cn,BeitPreTrainedModel:()=>Mu,BertForMaskedLM:()=>it,BertForQuestionAnswering:()=>st,BertForSequenceClassification:()=>at,BertForTokenClassification:()=>nt,BertModel:()=>Oe,BertPreTrainedModel:()=>we,BlenderbotForConditionalGeneration:()=>Br,BlenderbotModel:()=>et,BlenderbotPreTrainedModel:()=>Pr,BlenderbotSmallForConditionalGeneration:()=>Or,BlenderbotSmallModel:()=>ur,BlenderbotSmallPreTrainedModel:()=>hn,BloomForCausalLM:()=>Hl,BloomModel:()=>ql,BloomPreTrainedModel:()=>Ci,CLIPModel:()=>ol,CLIPPreTrainedModel:()=>Pn,CLIPSegForImageSegmentation:()=>hl,CLIPSegModel:()=>dl,CLIPSegPreTrainedModel:()=>si,CLIPTextModel:()=>Wd,CLIPTextModelWithProjection:()=>il,CLIPVisionModel:()=>Gd,CLIPVisionModelWithProjection:()=>al,CamembertForMaskedLM:()=>xn,CamembertForQuestionAnswering:()=>Xr,CamembertForSequenceClassification:()=>Gr,CamembertForTokenClassification:()=>sr,CamembertModel:()=>ns,CamembertPreTrainedModel:()=>qr,CausalLMOutput:()=>On,CausalLMOutputWithPast:()=>Ah,ChineseCLIPModel:()=>sn,ChineseCLIPPreTrainedModel:()=>Kd,ClapAudioModelWithProjection:()=>vc,ClapModel:()=>Wr,ClapPreTrainedModel:()=>ma,ClapTextModelWithProjection:()=>bc,CodeGenForCausalLM:()=>xl,CodeGenModel:()=>ui,CodeGenPreTrainedModel:()=>fo,CohereForCausalLM:()=>Fl,CohereModel:()=>Ol,CoherePreTrainedModel:()=>Mi,ConvBertForMaskedLM:()=>Ht,ConvBertForQuestionAnswering:()=>zs,ConvBertForSequenceClassification:()=>Jt,ConvBertForTokenClassification:()=>$s,ConvBertModel:()=>Vt,ConvBertPreTrainedModel:()=>Ot,ConvNextForImageClassification:()=>ra,ConvNextModel:()=>Du,ConvNextPreTrainedModel:()=>sa,ConvNextV2ForImageClassification:()=>oa,ConvNextV2Model:()=>Lu,ConvNextV2PreTrainedModel:()=>na,DPTForDepthEstimation:()=>eh,DPTModel:()=>Pu,DPTPreTrainedModel:()=>Zi,DebertaForMaskedLM:()=>l,DebertaForQuestionAnswering:()=>_,DebertaForSequenceClassification:()=>n,DebertaForTokenClassification:()=>u,DebertaModel:()=>c,DebertaPreTrainedModel:()=>B,DebertaV2ForMaskedLM:()=>X,DebertaV2ForQuestionAnswering:()=>be,DebertaV2ForSequenceClassification:()=>ie,DebertaV2ForTokenClassification:()=>je,DebertaV2Model:()=>N,DebertaV2PreTrainedModel:()=>O,DecisionTransformerModel:()=>yh,DecisionTransformerPreTrainedModel:()=>Dc,DeiTForImageClassification:()=>Gi,DeiTModel:()=>Tu,DeiTPreTrainedModel:()=>bo,DepthAnythingForDepthEstimation:()=>ku,DepthAnythingPreTrainedModel:()=>Cu,DepthProForDepthEstimation:()=>ta,DepthProPreTrainedModel:()=>xo,DetrForObjectDetection:()=>Sn,DetrForSegmentation:()=>kr,DetrModel:()=>Ri,DetrObjectDetectionOutput:()=>ji,DetrPreTrainedModel:()=>pn,DetrSegmentationOutput:()=>Ni,Dinov2ForImageClassification:()=>rh,Dinov2Model:()=>zu,Dinov2PreTrainedModel:()=>ia,Dinov2WithRegistersForImageClassification:()=>Ru,Dinov2WithRegistersModel:()=>Bu,Dinov2WithRegistersPreTrainedModel:()=>aa,DistilBertForMaskedLM:()=>Ce,DistilBertForQuestionAnswering:()=>bt,DistilBertForSequenceClassification:()=>qe,DistilBertForTokenClassification:()=>mt,DistilBertModel:()=>Ct,DistilBertPreTrainedModel:()=>Ze,DonutSwinModel:()=>Fu,DonutSwinPreTrainedModel:()=>sh,EfficientNetForImageClassification:()=>kc,EfficientNetModel:()=>Cc,EfficientNetPreTrainedModel:()=>Oo,ElectraForMaskedLM:()=>zr,ElectraForQuestionAnswering:()=>_r,ElectraForSequenceClassification:()=>en,ElectraForTokenClassification:()=>Qr,ElectraModel:()=>pr,ElectraPreTrainedModel:()=>tr,EsmForMaskedLM:()=>ps,EsmForSequenceClassification:()=>gs,EsmForTokenClassification:()=>Zs,EsmModel:()=>Kt,EsmPreTrainedModel:()=>St,ExaoneForCausalLM:()=>fi,ExaoneModel:()=>Cl,ExaonePreTrainedModel:()=>mi,FalconForCausalLM:()=>Mc,FalconModel:()=>yc,FalconPreTrainedModel:()=>pa,FastViTForImageClassification:()=>cu,FastViTModel:()=>uu,FastViTPreTrainedModel:()=>Fi,Florence2ForConditionalGeneration:()=>el,Florence2PreTrainedModel:()=>Za,GLPNForDepthEstimation:()=>Ou,GLPNModel:()=>th,GLPNPreTrainedModel:()=>Po,GPT2LMHeadModel:()=>ml,GPT2Model:()=>pl,GPT2PreTrainedModel:()=>ri,GPTBigCodeForCausalLM:()=>Tl,GPTBigCodeModel:()=>vl,GPTBigCodePreTrainedModel:()=>li,GPTJForCausalLM:()=>bl,GPTJModel:()=>Ml,GPTJPreTrainedModel:()=>ai,GPTNeoForCausalLM:()=>gl,GPTNeoModel:()=>nn,GPTNeoPreTrainedModel:()=>oi,GPTNeoXForCausalLM:()=>yl,GPTNeoXModel:()=>wl,GPTNeoXPreTrainedModel:()=>ii,Gemma2ForCausalLM:()=>Bl,Gemma2Model:()=>zl,Gemma2PreTrainedModel:()=>vi,GemmaForCausalLM:()=>Ll,GemmaModel:()=>Dl,GemmaPreTrainedModel:()=>bi,GlmForCausalLM:()=>Kn,GlmModel:()=>Pl,GlmPreTrainedModel:()=>pi,GraniteForCausalLM:()=>Al,GraniteModel:()=>Rs,GranitePreTrainedModel:()=>yi,GroundingDinoForObjectDetection:()=>ju,GroundingDinoPreTrainedModel:()=>nh,GroupViTModel:()=>on,GroupViTPreTrainedModel:()=>lu,HeliumForCausalLM:()=>El,HeliumModel:()=>_o,HeliumPreTrainedModel:()=>hi,HieraForImageClassification:()=>qi,HieraModel:()=>vo,HieraPreTrainedModel:()=>Ki,HubertForCTC:()=>ac,HubertForSequenceClassification:()=>hh,HubertModel:()=>ic,HubertPreTrainedModel:()=>dh,IJepaForImageClassification:()=>tu,IJepaModel:()=>eu,IJepaPreTrainedModel:()=>yo,Idefics3ForConditionalGeneration:()=>Zo,Idefics3PreTrainedModel:()=>rl,ImageMattingOutput:()=>Od,JAISLMHeadModel:()=>_l,JAISModel:()=>fl,JAISPreTrainedModel:()=>ni,JinaCLIPModel:()=>mo,JinaCLIPPreTrainedModel:()=>po,JinaCLIPTextModel:()=>ti,JinaCLIPVisionModel:()=>rn,LlamaForCausalLM:()=>qd,LlamaModel:()=>di,LlamaPreTrainedModel:()=>ci,LlavaForConditionalGeneration:()=>ho,LlavaOnevisionForConditionalGeneration:()=>Ya,LlavaPreTrainedModel:()=>wn,LongT5ForConditionalGeneration:()=>Ke,LongT5Model:()=>Fe,LongT5PreTrainedModel:()=>ye,M2M100ForConditionalGeneration:()=>ca,M2M100Model:()=>Ku,M2M100PreTrainedModel:()=>ua,MBartForCausalLM:()=>Ur,MBartForConditionalGeneration:()=>as,MBartForSequenceClassification:()=>Ss,MBartModel:()=>gr,MBartPreTrainedModel:()=>Bs,MPNetForMaskedLM:()=>Hs,MPNetForQuestionAnswering:()=>Ys,MPNetForSequenceClassification:()=>Os,MPNetForTokenClassification:()=>Qs,MPNetModel:()=>kt,MPNetPreTrainedModel:()=>zt,MT5ForConditionalGeneration:()=>Rt,MT5Model:()=>Ft,MT5PreTrainedModel:()=>ht,MarianMTModel:()=>Gu,MarianModel:()=>Wu,MarianPreTrainedModel:()=>ko,MaskFormerForInstanceSegmentation:()=>Au,MaskFormerModel:()=>Iu,MaskFormerPreTrainedModel:()=>Eo,MaskedLMOutput:()=>Fr,MgpstrForSceneTextRecognition:()=>jc,MgpstrModelOutput:()=>Bc,MgpstrPreTrainedModel:()=>Rc,MistralForCausalLM:()=>_c,MistralModel:()=>fc,MistralPreTrainedModel:()=>da,MobileBertForMaskedLM:()=>qs,MobileBertForQuestionAnswering:()=>Mt,MobileBertForSequenceClassification:()=>Re,MobileBertModel:()=>is,MobileBertPreTrainedModel:()=>es,MobileLLMForCausalLM:()=>Sl,MobileLLMModel:()=>kl,MobileLLMPreTrainedModel:()=>_i,MobileNetV1ForImageClassification:()=>Ma,MobileNetV1Model:()=>gh,MobileNetV1PreTrainedModel:()=>ya,MobileNetV2ForImageClassification:()=>$c,MobileNetV2Model:()=>Sc,MobileNetV2PreTrainedModel:()=>ba,MobileNetV3ForImageClassification:()=>Oc,MobileNetV3Model:()=>Ac,MobileNetV3PreTrainedModel:()=>Ic,MobileNetV4ForImageClassification:()=>Fc,MobileNetV4Model:()=>wh,MobileNetV4PreTrainedModel:()=>va,MobileViTForImageClassification:()=>mu,MobileViTModel:()=>pu,MobileViTPreTrainedModel:()=>Di,MobileViTV2ForImageClassification:()=>Yd,MobileViTV2Model:()=>fu,MobileViTV2PreTrainedModel:()=>Li,ModelOutput:()=>rt,ModernBertForMaskedLM:()=>At,ModernBertForSequenceClassification:()=>vt,ModernBertForTokenClassification:()=>Dt,ModernBertModel:()=>$t,ModernBertPreTrainedModel:()=>yt,Moondream1ForConditionalGeneration:()=>Ja,MoonshineForConditionalGeneration:()=>Xa,MoonshineModel:()=>Yr,MoonshinePreTrainedModel:()=>Yo,MptForCausalLM:()=>Xl,MptModel:()=>Ql,MptPreTrainedModel:()=>ki,MultiModalityCausalLM:()=>zc,MultiModalityPreTrainedModel:()=>Lc,MusicgenForCausalLM:()=>_h,MusicgenForConditionalGeneration:()=>Fo,MusicgenModel:()=>fh,MusicgenPreTrainedModel:()=>wa,NomicBertModel:()=>pe,NomicBertPreTrainedModel:()=>G,OPTForCausalLM:()=>Jl,OPTModel:()=>Yl,OPTPreTrainedModel:()=>Si,Olmo2ForCausalLM:()=>Qd,Olmo2Model:()=>Il,Olmo2PreTrainedModel:()=>wi,OlmoForCausalLM:()=>$l,OlmoModel:()=>Hd,OlmoPreTrainedModel:()=>gi,OpenELMForCausalLM:()=>jl,OpenELMModel:()=>Rl,OpenELMPreTrainedModel:()=>Ti,OwlViTForObjectDetection:()=>gu,OwlViTModel:()=>_u,OwlViTPreTrainedModel:()=>zi,Owlv2ForObjectDetection:()=>yu,Owlv2Model:()=>wu,Owlv2PreTrainedModel:()=>Bi,PaliGemmaForConditionalGeneration:()=>sl,PaliGemmaPreTrainedModel:()=>tl,PatchTSMixerForPrediction:()=>Gc,PatchTSMixerModel:()=>Wc,PatchTSMixerPreTrainedModel:()=>Ta,PatchTSTForPrediction:()=>Uc,PatchTSTModel:()=>Vc,PatchTSTPreTrainedModel:()=>Nc,Phi3ForCausalLM:()=>Kl,Phi3Model:()=>Gl,Phi3PreTrainedModel:()=>Pi,Phi3VForCausalLM:()=>Jr,Phi3VPreTrainedModel:()=>nl,PhiForCausalLM:()=>Wl,PhiModel:()=>Ul,PhiPreTrainedModel:()=>Ei,PreTrainedModel:()=>de,PretrainedMixin:()=>Xs,PvtForImageClassification:()=>Ai,PvtModel:()=>nu,PvtPreTrainedModel:()=>Ii,PyAnnoteForAudioFrameClassification:()=>Yu,PyAnnoteModel:()=>Xu,PyAnnotePreTrainedModel:()=>So,QuestionAnsweringModelOutput:()=>Rr,Qwen2ForCausalLM:()=>Nl,Qwen2Model:()=>qn,Qwen2PreTrainedModel:()=>xi,Qwen2VLForConditionalGeneration:()=>Vl,Qwen2VLPreTrainedModel:()=>go,RTDetrForObjectDetection:()=>Hn,RTDetrModel:()=>Jd,RTDetrObjectDetectionOutput:()=>Ui,RTDetrPreTrainedModel:()=>Vi,ResNetForImageClassification:()=>Zd,ResNetModel:()=>xu,ResNetPreTrainedModel:()=>Hi,RoFormerForMaskedLM:()=>We,RoFormerForQuestionAnswering:()=>Et,RoFormerForSequenceClassification:()=>tt,RoFormerForTokenClassification:()=>ut,RoFormerModel:()=>Te,RoFormerPreTrainedModel:()=>te,RobertaForMaskedLM:()=>tn,RobertaForQuestionAnswering:()=>Ut,RobertaForSequenceClassification:()=>Gs,RobertaForTokenClassification:()=>cr,RobertaModel:()=>Kr,RobertaPreTrainedModel:()=>rs,SamImageSegmentationOutput:()=>Xn,SamModel:()=>Co,SamPreTrainedModel:()=>oh,SapiensForDepthEstimation:()=>To,SapiensForNormalEstimation:()=>$u,SapiensForSemanticSegmentation:()=>Su,SapiensPreTrainedModel:()=>ea,SegformerForImageClassification:()=>Tc,SegformerForSemanticSegmentation:()=>xc,SegformerModel:()=>mh,SegformerPreTrainedModel:()=>An,Seq2SeqLMOutput:()=>Ih,SequenceClassifierOutput:()=>Es,SiglipModel:()=>ll,SiglipPreTrainedModel:()=>ei,SiglipTextModel:()=>ul,SiglipVisionModel:()=>cl,SpeechT5ForSpeechToText:()=>un,SpeechT5ForTextToSpeech:()=>mn,SpeechT5HifiGan:()=>$n,SpeechT5Model:()=>Yh,SpeechT5PreTrainedModel:()=>Ao,SqueezeBertForMaskedLM:()=>or,SqueezeBertForQuestionAnswering:()=>Vr,SqueezeBertForSequenceClassification:()=>Nr,SqueezeBertModel:()=>Ar,SqueezeBertPreTrainedModel:()=>Gt,StableLmForCausalLM:()=>Pc,StableLmModel:()=>Ec,StableLmPreTrainedModel:()=>ga,Starcoder2ForCausalLM:()=>wc,Starcoder2Model:()=>gc,Starcoder2PreTrainedModel:()=>ha,StyleTextToSpeech2Model:()=>pc,StyleTextToSpeech2PreTrainedModel:()=>hc,Swin2SRForImageSuperResolution:()=>Eu,Swin2SRModel:()=>Ji,Swin2SRPreTrainedModel:()=>Yi,SwinForImageClassification:()=>Qn,SwinModel:()=>Xi,SwinPreTrainedModel:()=>Qi,T5ForConditionalGeneration:()=>ae,T5Model:()=>I,T5PreTrainedModel:()=>Ne,TableTransformerForObjectDetection:()=>vu,TableTransformerModel:()=>bu,TableTransformerObjectDetectionOutput:()=>Wi,TableTransformerPreTrainedModel:()=>Mo,TokenClassifierOutput:()=>wr,TrOCRForCausalLM:()=>mc,TrOCRPreTrainedModel:()=>In,UniSpeechForCTC:()=>lh,UniSpeechForSequenceClassification:()=>ec,UniSpeechModel:()=>Zu,UniSpeechPreTrainedModel:()=>$o,UniSpeechSatForAudioFrameClassification:()=>rc,UniSpeechSatForCTC:()=>sc,UniSpeechSatForSequenceClassification:()=>uh,UniSpeechSatModel:()=>tc,UniSpeechSatPreTrainedModel:()=>Yn,ViTForImageClassification:()=>$i,ViTMAEModel:()=>iu,ViTMAEPreTrainedModel:()=>ou,ViTMSNForImageClassification:()=>au,ViTMSNModel:()=>Xd,ViTMSNPreTrainedModel:()=>Oi,ViTModel:()=>Zl,ViTPreTrainedModel:()=>wo,VisionEncoderDecoderModel:()=>Jo,VitMatteForImageMatting:()=>hu,VitMattePreTrainedModel:()=>du,VitPoseForPoseEstimation:()=>ru,VitPosePreTrainedModel:()=>su,VitsModel:()=>_a,VitsModelOutput:()=>Fd,VitsPreTrainedModel:()=>fa,Wav2Vec2BertForCTC:()=>ch,Wav2Vec2BertForSequenceClassification:()=>oc,Wav2Vec2BertModel:()=>nc,Wav2Vec2BertPreTrainedModel:()=>Io,Wav2Vec2ForAudioFrameClassification:()=>Qu,Wav2Vec2ForCTC:()=>Hu,Wav2Vec2ForSequenceClassification:()=>ih,Wav2Vec2Model:()=>qu,Wav2Vec2PreTrainedModel:()=>yn,WavLMForAudioFrameClassification:()=>dc,WavLMForCTC:()=>uc,WavLMForSequenceClassification:()=>cc,WavLMForXVector:()=>ph,WavLMModel:()=>lc,WavLMPreTrainedModel:()=>jn,WeSpeakerResNetModel:()=>ah,WeSpeakerResNetPreTrainedModel:()=>Ju,WhisperForConditionalGeneration:()=>Qa,WhisperModel:()=>Ha,WhisperPreTrainedModel:()=>Xo,XLMForQuestionAnswering:()=>En,XLMForSequenceClassification:()=>Cr,XLMForTokenClassification:()=>Zt,XLMModel:()=>yr,XLMPreTrainedModel:()=>vs,XLMRobertaForMaskedLM:()=>Wa,XLMRobertaForQuestionAnswering:()=>Ka,XLMRobertaForSequenceClassification:()=>Ho,XLMRobertaForTokenClassification:()=>Ga,XLMRobertaModel:()=>ts,XLMRobertaPreTrainedModel:()=>pt,XLMWithLMHeadModel:()=>dr,XVectorOutput:()=>Ad,YolosForObjectDetection:()=>Vu,YolosModel:()=>Nu,YolosObjectDetectionOutput:()=>Uu,YolosPreTrainedModel:()=>la});var y=r("./src/configs.js"),z=r("./src/backends/onnx.js"),V=r("./src/utils/dtypes.js"),se=r("./src/utils/generic.js"),K=r("./src/utils/core.js"),v=r("./src/utils/hub.js"),k=r("./src/utils/constants.js"),x=r("./src/generation/logits_process.js"),E=r("./src/generation/configuration_utils.js"),C=r("./src/utils/tensor.js"),j=r("./src/utils/image.js"),re=r("./src/utils/maths.js"),ce=r("./src/generation/stopping_criteria.js"),me=r("./src/generation/logits_sampler.js"),Y=r("./src/env.js"),q=r("./src/models/whisper/generation_whisper.js"),ne=r("./src/models/whisper/common_whisper.js");const R={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9},L=new Map,T=new Map,S=new Map;async function U(b,$,J){var rr;const Se=((rr=J.config)==null?void 0:rr["transformers.js_config"])??{};let Xe=J.device??Se.device;Xe&&typeof Xe!="string"&&(Xe.hasOwnProperty($)?Xe=Xe[$]:(console.warn(`device not specified for "${$}". Using the default device.`),Xe=null));const Ye=Xe??(Y.apis.IS_NODE_ENV?"cpu":"wasm"),_t=(0,z.deviceToExecutionProviders)(Ye);let Tt=J.dtype??Se.dtype;if(typeof Tt!="string"&&(Tt&&Tt.hasOwnProperty($)?Tt=Tt[$]:(Tt=V.DEFAULT_DEVICE_DTYPE_MAPPING[Ye]??V.DATA_TYPES.fp32,console.warn(`dtype not specified for "${$}". Using the default dtype (${Tt}) for this device (${Ye}).`))),Tt===V.DATA_TYPES.auto){let js=Se.dtype;typeof js!="string"&&(js=js[$]),js&&js!==V.DATA_TYPES.auto&&V.DATA_TYPES.hasOwnProperty(js)?Tt=js:Tt=V.DEFAULT_DEVICE_DTYPE_MAPPING[Ye]??V.DATA_TYPES.fp32}const Bt=Tt;if(V.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Bt)){if(Bt===V.DATA_TYPES.fp16&&Ye==="webgpu"&&!await(0,V.isWebGpuFp16Supported)())throw new Error(`The device (${Ye}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Bt}. Should be one of: ${Object.keys(V.DATA_TYPES).join(", ")}`);const Wt=Se.kv_cache_dtype?typeof Se.kv_cache_dtype=="string"?Se.kv_cache_dtype:Se.kv_cache_dtype[Bt]??"float32":void 0;if(Wt&&!["float32","float16"].includes(Wt))throw new Error(`Invalid kv_cache_dtype: ${Wt}. Should be one of: float32, float16`);const us={dtype:Bt,kv_cache_dtype:Wt},fs=V.DEFAULT_DTYPE_SUFFIX_MAPPING[Bt],os=`${J.subfolder??""}/${$}${fs}.onnx`,_s={...J.session_options};_s.executionProviders??(_s.executionProviders=_t);const Cs=Se.free_dimension_overrides;Cs?_s.freeDimensionOverrides??(_s.freeDimensionOverrides=Cs):Ye.startsWith("webnn")&&!_s.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Is=(0,v.getModelFile)(b,os,!0,J),Ts=J.use_external_data_format??Se.use_external_data_format;let Ds=[];if(Ts&&(Ts===!0||typeof Ts=="object"&&Ts.hasOwnProperty($)&&Ts[$]===!0)){if(Y.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const js=`${$}${fs}.onnx_data`,nr=`${J.subfolder??""}/${js}`;Ds.push(new Promise(async(hr,jr)=>{const Sr=await(0,v.getModelFile)(b,nr,!0,J);hr({path:js,data:Sr})}))}else _s.externalData!==void 0&&(Ds=_s.externalData.map(async js=>{if(typeof js.data=="string"){const nr=await(0,v.getModelFile)(b,js.data,!0,J);return{...js,data:nr}}return js}));if(Ds.length>0&&(_s.externalData=await Promise.all(Ds)),Ye==="webgpu"){const js=(0,y.getKeyValueShapes)(J.config,{prefix:"present"});if(Object.keys(js).length>0&&!(0,z.isONNXProxy)()){const nr={};for(const hr in js)nr[hr]="gpu-buffer";_s.preferredOutputLocation=nr}}return{buffer:await Is,session_options:_s,session_config:us}}async function ge(b,$,J){return Object.fromEntries(await Promise.all(Object.keys($).map(async Se=>{const{buffer:Xe,session_options:Ye,session_config:_t}=await U(b,$[Se],J),Tt=await(0,z.createInferenceSession)(Xe,Ye,_t);return[Se,Tt]})))}async function _e(b,$,J){return Object.fromEntries(await Promise.all(Object.keys($).map(async Se=>{const Xe=await(0,v.getModelJSON)(b,$[Se],!1,J);return[Se,Xe]})))}function ze(b,$){const J=Object.create(null),Se=[];for(const _t of b.inputNames){const Tt=$[_t];if(!(Tt instanceof C.Tensor)){Se.push(_t);continue}J[_t]=(0,z.isONNXProxy)()?Tt.clone():Tt}if(Se.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Se.join(", ")}.`);const Xe=Object.keys($).length,Ye=b.inputNames.length;if(Xe>Ye){let _t=Object.keys($).filter(Tt=>!b.inputNames.includes(Tt));console.warn(`WARNING: Too many inputs were provided (${Xe} > ${Ye}). The following inputs will be ignored: "${_t.join(", ")}".`)}return J}async function Ie(b,$){const J=ze(b,$);try{const Se=Object.fromEntries(Object.entries(J).map(([Ye,_t])=>[Ye,_t.ort_tensor]));let Xe=await b.run(Se);return Xe=fe(Xe),Xe}catch(Se){const Xe=Object.fromEntries(Object.entries(J).map(([Ye,{type:_t,dims:Tt,data:Bt}])=>[Ye,{type:_t,dims:Tt,data:Bt}]));throw console.error(`An error occurred during model execution: "${Se}".`),console.error("Inputs given to model:",Xe),Se}}function fe(b){for(let $ in b)(0,z.isONNXTensor)(b[$])?b[$]=new C.Tensor(b[$]):typeof b[$]=="object"&&fe(b[$]);return b}function Be(b){if(b instanceof C.Tensor)return b;if(b.length===0)throw Error("items must be non-empty");if(Array.isArray(b[0])){if(b.some($=>$.length!==b[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new C.Tensor("int64",BigInt64Array.from(b.flat().map($=>BigInt($))),[b.length,b[0].length])}else return new C.Tensor("int64",BigInt64Array.from(b.map($=>BigInt($))),[1,b.length])}function ve(b){return new C.Tensor("bool",[b],[1])}async function Ge(b,$){let{encoder_outputs:J,input_ids:Se,decoder_input_ids:Xe,...Ye}=$;if(!J){const Tt=(0,K.pick)($,b.sessions.model.inputNames);J=(await He(b,Tt)).last_hidden_state}return Ye.input_ids=Xe,Ye.encoder_hidden_states=J,b.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Ye.encoder_attention_mask=$.attention_mask),await Ve(b,Ye,!0)}async function He(b,$){const J=b.sessions.model,Se=(0,K.pick)($,J.inputNames);if(J.inputNames.includes("inputs_embeds")&&!Se.inputs_embeds){if(!$.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Se.inputs_embeds=await b.encode_text({input_ids:$.input_ids})}if(J.inputNames.includes("token_type_ids")&&!Se.token_type_ids){if(!Se.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");Se.token_type_ids=(0,C.zeros_like)(Se.input_ids)}if(J.inputNames.includes("pixel_mask")&&!Se.pixel_mask){if(!Se.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Xe=Se.pixel_values.dims;Se.pixel_mask=(0,C.ones)([Xe[0],Xe[2],Xe[3]])}return await Ie(J,Se)}async function Ve(b,$,J=!1){const Se=b.sessions[J?"decoder_model_merged":"model"],{past_key_values:Xe,...Ye}=$;if(Se.inputNames.includes("use_cache_branch")&&(Ye.use_cache_branch=ve(!!Xe)),Se.inputNames.includes("position_ids")&&Ye.attention_mask&&!Ye.position_ids){const Tt=b.config.model_type==="paligemma"?1:0;Ye.position_ids=ee(Ye,Xe,Tt)}b.addPastKeyValues(Ye,Xe);const _t=(0,K.pick)(Ye,Se.inputNames);return await Ie(Se,_t)}function wt({image_token_id:b,inputs_embeds:$,image_features:J,input_ids:Se,attention_mask:Xe}){const Ye=Se.tolist().map(Wt=>Wt.reduce((us,fs,os)=>(fs==b&&us.push(os),us),[])),_t=Ye.reduce((Wt,us)=>Wt+us.length,0),Tt=J.dims[0];if(_t!==Tt)throw new Error(`Image features and image tokens do not match: tokens: ${_t}, features ${Tt}`);let Bt=0;for(let Wt=0;Wt<Ye.length;++Wt){const us=Ye[Wt],fs=$[Wt];for(let os=0;os<us.length;++os)fs[us[os]].data.set(J[Bt++].data)}return{inputs_embeds:$,attention_mask:Xe}}async function lt(b,{input_ids:$=null,attention_mask:J=null,pixel_values:Se=null,position_ids:Xe=null,inputs_embeds:Ye=null,past_key_values:_t=null,generation_config:Tt=null,logits_processor:Bt=null,...Wt}){if(!Ye){if(Ye=await b.encode_text({input_ids:$,...Wt}),Se&&$.dims[1]!==1){const fs=await b.encode_image({pixel_values:Se,...Wt});({inputs_embeds:Ye,attention_mask:J}=b._merge_input_ids_with_image_features({image_features:fs,inputs_embeds:Ye,input_ids:$,attention_mask:J}))}else if(_t&&Se&&$.dims[1]===1){const fs=$.dims[1],os=Object.values(_t)[0].dims.at(-2);J=(0,C.cat)([(0,C.ones)([$.dims[0],os]),J.slice(null,[J.dims[1]-fs,J.dims[1]])],1)}}if(!Xe&&b.config.model_type==="qwen2_vl"){const{image_grid_thw:fs,video_grid_thw:os}=Wt;[Xe]=b.get_rope_index($,fs,os,J)}return await Ve(b,{inputs_embeds:Ye,past_key_values:_t,attention_mask:J,position_ids:Xe,generation_config:Tt,logits_processor:Bt},!0)}function Ae(b,$=0){const[J,Se]=b.dims,Xe=b.data,Ye=new BigInt64Array(Xe.length);for(let _t=0;_t<J;++_t){const Tt=_t*Se;let Bt=BigInt($);for(let Wt=0;Wt<Se;++Wt){const us=Tt+Wt;Xe[us]===0n?Ye[us]=BigInt(1):(Ye[us]=Bt,Bt+=Xe[us])}}return{data:Ye,dims:b.dims}}function ee(b,$=null,J=0){const{input_ids:Se,inputs_embeds:Xe,attention_mask:Ye}=b,{data:_t,dims:Tt}=Ae(Ye,J);let Bt=new C.Tensor("int64",_t,Tt);if($){const Wt=-(Se??Xe).dims.at(1);Bt=Bt.slice(null,[Wt,null])}return Bt}function Me(b,$,J,Se){if(J.past_key_values){const Xe=Object.values(J.past_key_values)[0].dims.at(-2),{input_ids:Ye,attention_mask:_t}=J;if(!(_t&&_t.dims[1]>Ye.dims[1])){if(Xe<Ye.dims[1])J.input_ids=Ye.slice(null,[Xe,null]);else if(b.config.image_token_index!=null&&Ye.data.some(Tt=>Tt==b.config.image_token_index)){const Tt=b.config.num_image_tokens;if(!Tt)throw new Error("`num_image_tokens` is missing in the model configuration.");const Bt=Ye.dims[1]-(Xe-Tt);J.input_ids=Ye.slice(null,[-Bt,null]),J.attention_mask=(0,C.ones)([1,Xe+Bt])}}}return J}function Ue(b,$,J,Se){return J.past_key_values&&($=$.map(Xe=>[Xe.at(-1)])),{...J,decoder_input_ids:Be($)}}function xe(b,...$){return b.config.is_encoder_decoder?Ue(b,...$):Me(b,...$)}function dt(b,$,J,Se){const Xe=!!J.past_key_values;return Se.guidance_scale!==null&&Se.guidance_scale>1&&(Xe?J.input_ids=(0,C.cat)([J.input_ids,J.input_ids],0):(J.input_ids=(0,C.cat)([J.input_ids,(0,C.full_like)(J.input_ids,BigInt(Se.pad_token_id))],0),J.attention_mask=(0,C.cat)([J.attention_mask,(0,C.full_like)(J.attention_mask,0n)],0))),(Xe||!J.pixel_values)&&(J.pixel_values=(0,C.full)([0,0,3,384,384],1)),Xe&&(J.images_seq_mask=new C.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),J.images_emb_mask=new C.Tensor("bool",new Array(0).fill(!1),[1,1,0])),J}class de extends se.Callable{constructor(J,Se,Xe){super();ke(this,"main_input_name","input_ids");ke(this,"forward_params",["input_ids","attention_mask"]);this.config=J,this.sessions=Se,this.configs=Xe;const Ye=S.get(this.constructor),_t=L.get(Ye);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,_t){case R.DecoderOnly:this.can_generate=!0,this._forward=Ve,this._prepare_inputs_for_generation=Me;break;case R.Seq2Seq:case R.Vision2Seq:case R.Musicgen:this.can_generate=!0,this._forward=Ge,this._prepare_inputs_for_generation=Ue;break;case R.EncoderDecoder:this._forward=Ge;break;case R.ImageTextToText:this.can_generate=!0,this._forward=lt,this._prepare_inputs_for_generation=xe;break;case R.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=xe;break;case R.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=dt;break;default:this._forward=He;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var Se;const J=[];for(const Xe of Object.values(this.sessions))(Se=Xe==null?void 0:Xe.handler)!=null&&Se.dispose&&J.push(Xe.handler.dispose());return await Promise.all(J)}static async from_pretrained(J,{progress_callback:Se=null,config:Xe=null,cache_dir:Ye=null,local_files_only:_t=!1,revision:Tt="main",model_file_name:Bt=null,subfolder:Wt="onnx",device:us=null,dtype:fs=null,use_external_data_format:os=null,session_options:_s={}}={}){let Cs={progress_callback:Se,config:Xe,cache_dir:Ye,local_files_only:_t,revision:Tt,model_file_name:Bt,subfolder:Wt,device:us,dtype:fs,use_external_data_format:os,session_options:_s};const Is=S.get(this),Ts=L.get(Is);Xe=Cs.config=await y.AutoConfig.from_pretrained(J,Cs);let Ds;if(Ts===R.DecoderOnly)Ds=await Promise.all([ge(J,{model:Cs.model_file_name??"model"},Cs),_e(J,{generation_config:"generation_config.json"},Cs)]);else if(Ts===R.Seq2Seq||Ts===R.Vision2Seq)Ds=await Promise.all([ge(J,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Cs),_e(J,{generation_config:"generation_config.json"},Cs)]);else if(Ts===R.MaskGeneration)Ds=await Promise.all([ge(J,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},Cs)]);else if(Ts===R.EncoderDecoder)Ds=await Promise.all([ge(J,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Cs)]);else if(Ts===R.ImageTextToText){const ir={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Xe.is_encoder_decoder&&(ir.model="encoder_model"),Ds=await Promise.all([ge(J,ir,Cs),_e(J,{generation_config:"generation_config.json"},Cs)])}else if(Ts===R.Musicgen)Ds=await Promise.all([ge(J,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},Cs),_e(J,{generation_config:"generation_config.json"},Cs)]);else if(Ts===R.MultiModality)Ds=await Promise.all([ge(J,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},Cs),_e(J,{generation_config:"generation_config.json"},Cs)]);else if(Ts===R.Phi3V)Ds=await Promise.all([ge(J,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},Cs),_e(J,{generation_config:"generation_config.json"},Cs)]);else{if(Ts!==R.EncoderOnly){const ir=Is??(Xe==null?void 0:Xe.model_type);ir!=="custom"&&console.warn(`Model type for '${ir}' not found, assuming encoder-only architecture. Please report this at ${k.GITHUB_ISSUE_URL}.`)}Ds=await Promise.all([ge(J,{model:Cs.model_file_name??"model"},Cs)])}return new this(Xe,...Ds)}async _call(J){return await this.forward(J)}async forward(J){return await this._forward(this,J)}get generation_config(){var J;return((J=this.configs)==null?void 0:J.generation_config)??null}_get_logits_warper(J){const Se=new x.LogitsProcessorList;return J.temperature!==null&&J.temperature!==1&&Se.push(new x.TemperatureLogitsWarper(J.temperature)),J.top_k!==null&&J.top_k!==0&&Se.push(new x.TopKLogitsWarper(J.top_k)),J.top_p!==null&&J.top_p<1&&Se.push(new x.TopPLogitsWarper(J.top_p)),Se}_get_logits_processor(J,Se,Xe=null){const Ye=new x.LogitsProcessorList;if(J.repetition_penalty!==null&&J.repetition_penalty!==1&&Ye.push(new x.RepetitionPenaltyLogitsProcessor(J.repetition_penalty)),J.no_repeat_ngram_size!==null&&J.no_repeat_ngram_size>0&&Ye.push(new x.NoRepeatNGramLogitsProcessor(J.no_repeat_ngram_size)),J.bad_words_ids!==null&&Ye.push(new x.NoBadWordsLogitsProcessor(J.bad_words_ids,J.eos_token_id)),J.min_length!==null&&J.eos_token_id!==null&&J.min_length>0&&Ye.push(new x.MinLengthLogitsProcessor(J.min_length,J.eos_token_id)),J.min_new_tokens!==null&&J.eos_token_id!==null&&J.min_new_tokens>0&&Ye.push(new x.MinNewTokensLengthLogitsProcessor(Se,J.min_new_tokens,J.eos_token_id)),J.forced_bos_token_id!==null&&Ye.push(new x.ForcedBOSTokenLogitsProcessor(J.forced_bos_token_id)),J.forced_eos_token_id!==null&&Ye.push(new x.ForcedEOSTokenLogitsProcessor(J.max_length,J.forced_eos_token_id)),J.begin_suppress_tokens!==null){const _t=Se>1||J.forced_bos_token_id===null?Se:Se+1;Ye.push(new x.SuppressTokensAtBeginLogitsProcessor(J.begin_suppress_tokens,_t))}return J.guidance_scale!==null&&J.guidance_scale>1&&Ye.push(new x.ClassifierFreeGuidanceLogitsProcessor(J.guidance_scale)),Xe!==null&&Ye.extend(Xe),Ye}_prepare_generation_config(J,Se,Xe=E.GenerationConfig){const Ye={...this.config};for(const Tt of["decoder","generator","text_config"])Tt in Ye&&Object.assign(Ye,Ye[Tt]);const _t=new Xe(Ye);return Object.assign(_t,this.generation_config??{}),J&&Object.assign(_t,J),Se&&Object.assign(_t,(0,K.pick)(Se,Object.getOwnPropertyNames(_t))),_t}_get_stopping_criteria(J,Se=null){const Xe=new ce.StoppingCriteriaList;return J.max_length!==null&&Xe.push(new ce.MaxLengthCriteria(J.max_length,this.config.max_position_embeddings??null)),J.eos_token_id!==null&&Xe.push(new ce.EosTokenCriteria(J.eos_token_id)),Se&&Xe.extend(Se),Xe}_validate_model_class(){if(!this.can_generate){const J=[Ca,$a,Do,Kc],Se=S.get(this.constructor),Xe=new Set,Ye=this.config.model_type;for(const Tt of J){const Bt=Tt.get(Ye);Bt&&Xe.add(Bt[0])}let _t=`The current model class (${Se}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Xe.size>0&&(_t+=` Please use the following class instead: ${[...Xe].join(", ")}`),Error(_t)}}prepare_inputs_for_generation(...J){return this._prepare_inputs_for_generation(this,...J)}_update_model_kwargs_for_generation({generated_input_ids:J,outputs:Se,model_inputs:Xe,is_encoder_decoder:Ye}){return Xe.past_key_values=this.getPastKeyValues(Se,Xe.past_key_values),Xe.input_ids=new C.Tensor("int64",J.flat(),[J.length,1]),Ye||(Xe.attention_mask=(0,C.cat)([Xe.attention_mask,(0,C.ones)([Xe.attention_mask.dims[0],1])],1)),Xe.position_ids=null,Xe}_prepare_model_inputs({inputs:J,bos_token_id:Se,model_kwargs:Xe}){const Ye=(0,K.pick)(Xe,this.forward_params),_t=this.main_input_name;if(_t in Ye){if(J)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Ye[_t]=J;return{inputs_tensor:Ye[_t],model_inputs:Ye,model_input_name:_t}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:J,model_inputs:Se,model_input_name:Xe,generation_config:Ye}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!Se.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Tt,pixel_values:Bt,attention_mask:Wt,...us}=Se,fs=await this._prepare_inputs_embeds(Se);Se={...us,...(0,K.pick)(fs,["inputs_embeds","attention_mask"])}}let{last_hidden_state:_t}=await He(this,Se);if(Ye.guidance_scale!==null&&Ye.guidance_scale>1)_t=(0,C.cat)([_t,(0,C.full_like)(_t,0)],0),"attention_mask"in Se&&(Se.attention_mask=(0,C.cat)([Se.attention_mask,(0,C.zeros_like)(Se.attention_mask)],0));else if(Se.decoder_input_ids){const Tt=Be(Se.decoder_input_ids).dims[0];if(Tt!==_t.dims[0]){if(_t.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${_t.dims[0]}) than the decoder inputs (${Tt}).`);_t=(0,C.cat)(Array.from({length:Tt},()=>_t),0)}}return Se.encoder_outputs=_t,Se}_prepare_decoder_input_ids_for_generation({batch_size:J,model_input_name:Se,model_kwargs:Xe,decoder_start_token_id:Ye,bos_token_id:_t,generation_config:Tt}){let{decoder_input_ids:Bt,...Wt}=Xe;if(!(Bt instanceof C.Tensor)){if(Bt)Array.isArray(Bt[0])||(Bt=Array.from({length:J},()=>Bt));else if(Ye??(Ye=_t),this.config.model_type==="musicgen")Bt=Array.from({length:J*this.config.decoder.num_codebooks},()=>[Ye]);else if(Array.isArray(Ye)){if(Ye.length!==J)throw new Error(`\`decoder_start_token_id\` expcted to have length ${J} but got ${Ye.length}`);Bt=Ye}else Bt=Array.from({length:J},()=>[Ye]);Bt=Be(Bt)}return Xe.decoder_attention_mask=(0,C.ones_like)(Bt),{input_ids:Bt,model_inputs:Wt}}async generate({inputs:J=null,generation_config:Se=null,logits_processor:Xe=null,stopping_criteria:Ye=null,streamer:_t=null,...Tt}){this._validate_model_class(),Se=this._prepare_generation_config(Se,Tt);let{inputs_tensor:Bt,model_inputs:Wt,model_input_name:us}=this._prepare_model_inputs({inputs:J,model_kwargs:Tt});const fs=this.config.is_encoder_decoder;fs&&("encoder_outputs"in Wt||(Wt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Bt,model_inputs:Wt,model_input_name:us,generation_config:Se})));let os;fs?{input_ids:os,model_inputs:Wt}=this._prepare_decoder_input_ids_for_generation({batch_size:Wt[us].dims.at(0),model_input_name:us,model_kwargs:Wt,decoder_start_token_id:Se.decoder_start_token_id,bos_token_id:Se.bos_token_id,generation_config:Se}):os=Wt[us];let _s=os.dims.at(-1);Se.max_new_tokens!==null&&(Se.max_length=_s+Se.max_new_tokens);const Cs=this._get_logits_processor(Se,_s,Xe),Is=this._get_stopping_criteria(Se,Ye),Ts=Wt[us].dims.at(0),Ds=me.LogitsSampler.getSampler(Se),ir=new Array(Ts).fill(0),rr=os.tolist();_t&&_t.put(rr);let js,nr={};for(;;){if(Wt=this.prepare_inputs_for_generation(rr,Wt,Se),js=await this.forward(Wt),Se.output_attentions&&Se.return_dict_in_generate){const Hr=this.getAttentions(js);for(const an in Hr)an in nr||(nr[an]=[]),nr[an].push(Hr[an])}const Sr=js.logits.slice(null,-1,null),cn=Cs(rr,Sr),Nn=[];for(let Hr=0;Hr<cn.dims.at(0);++Hr){const an=cn[Hr],zo=await Ds(an);for(const[Zn,Bo]of zo){const Ro=BigInt(Zn);ir[Hr]+=Bo,rr[Hr].push(Ro),Nn.push([Ro]);break}}if(_t&&_t.put(Nn),Is(rr).every(Hr=>Hr))break;Wt=this._update_model_kwargs_for_generation({generated_input_ids:Nn,outputs:js,model_inputs:Wt,is_encoder_decoder:fs})}_t&&_t.end();const hr=this.getPastKeyValues(js,Wt.past_key_values,!0),jr=new C.Tensor("int64",rr.flat(),[rr.length,rr[0].length]);if(Se.return_dict_in_generate)return{sequences:jr,past_key_values:hr,...nr};for(const Sr of Object.values(js))Sr.location==="gpu-buffer"&&Sr.dispose();return jr}getPastKeyValues(J,Se,Xe=!1){const Ye=Object.create(null);for(const _t in J)if(_t.startsWith("present")){const Tt=_t.replace("present","past_key_values"),Bt=_t.includes("encoder");if(Bt&&Se?Ye[Tt]=Se[Tt]:Ye[Tt]=J[_t],Se&&(!Bt||Xe)){const Wt=Se[Tt];Wt.location==="gpu-buffer"&&Wt.dispose()}}return Ye}getAttentions(J){const Se={};for(const Xe of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Ye in J)Ye.startsWith(Xe)&&(Xe in Se||(Se[Xe]=[]),Se[Xe].push(J[Ye]));return Se}addPastKeyValues(J,Se){var Xe,Ye,_t;if(Se)Object.assign(J,Se);else{const Tt=this.sessions.decoder_model_merged??this.sessions.model,Bt=((Xe=Tt==null?void 0:Tt.config)==null?void 0:Xe.kv_cache_dtype)??"float32",Wt=Bt==="float16"?new Uint16Array:[],us=((_t=(Ye=J[this.main_input_name]??J.attention_mask)==null?void 0:Ye.dims)==null?void 0:_t[0])??1,fs=(0,y.getKeyValueShapes)(this.config,{batch_size:us});for(const os in fs)J[os]=new C.Tensor(Bt,Wt,fs[os])}}async encode_image({pixel_values:J}){const Se=(await Ie(this.sessions.vision_encoder,{pixel_values:J})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${Se.dims[1]}).`),this.config.num_image_tokens=Se.dims[1]),Se}async encode_text({input_ids:J}){return(await Ie(this.sessions.embed_tokens,{input_ids:J})).inputs_embeds}}class rt{}class ot extends rt{constructor({last_hidden_state:$,hidden_states:J=null,attentions:Se=null}){super(),this.last_hidden_state=$,this.hidden_states=J,this.attentions=Se}}class we extends de{}class Oe extends we{}class it extends we{async _call($){return new Fr(await super._call($))}}class at extends we{async _call($){return new Es(await super._call($))}}class nt extends we{async _call($){return new wr(await super._call($))}}class st extends we{async _call($){return new Rr(await super._call($))}}class yt extends de{}class $t extends yt{}class At extends yt{async _call($){return new Fr(await super._call($))}}class vt extends yt{async _call($){return new Es(await super._call($))}}class Dt extends yt{async _call($){return new wr(await super._call($))}}class G extends de{}class pe extends G{}class te extends de{}class Te extends te{}class We extends te{async _call($){return new Fr(await super._call($))}}class tt extends te{async _call($){return new Es(await super._call($))}}class ut extends te{async _call($){return new wr(await super._call($))}}class Et extends te{async _call($){return new Rr(await super._call($))}}class Ot extends de{}class Vt extends Ot{}class Ht extends Ot{async _call($){return new Fr(await super._call($))}}class Jt extends Ot{async _call($){return new Es(await super._call($))}}class $s extends Ot{async _call($){return new wr(await super._call($))}}class zs extends Ot{async _call($){return new Rr(await super._call($))}}class tr extends de{}class pr extends tr{}class zr extends tr{async _call($){return new Fr(await super._call($))}}class en extends tr{async _call($){return new Es(await super._call($))}}class Qr extends tr{async _call($){return new wr(await super._call($))}}class _r extends tr{async _call($){return new Rr(await super._call($))}}class qr extends de{}class ns extends qr{}class xn extends qr{async _call($){return new Fr(await super._call($))}}class Gr extends qr{async _call($){return new Es(await super._call($))}}class sr extends qr{async _call($){return new wr(await super._call($))}}class Xr extends qr{async _call($){return new Rr(await super._call($))}}class B extends de{}class c extends B{}class l extends B{async _call($){return new Fr(await super._call($))}}class n extends B{async _call($){return new Es(await super._call($))}}class u extends B{async _call($){return new wr(await super._call($))}}class _ extends B{async _call($){return new Rr(await super._call($))}}class O extends de{}class N extends O{}class X extends O{async _call($){return new Fr(await super._call($))}}class ie extends O{async _call($){return new Es(await super._call($))}}class je extends O{async _call($){return new wr(await super._call($))}}class be extends O{async _call($){return new Rr(await super._call($))}}class Ze extends de{}class Ct extends Ze{}class qe extends Ze{async _call($){return new Es(await super._call($))}}class mt extends Ze{async _call($){return new wr(await super._call($))}}class bt extends Ze{async _call($){return new Rr(await super._call($))}}class Ce extends Ze{async _call($){return new Fr(await super._call($))}}class St extends de{}class Kt extends St{}class ps extends St{async _call($){return new Fr(await super._call($))}}class gs extends St{async _call($){return new Es(await super._call($))}}class Zs extends St{async _call($){return new wr(await super._call($))}}class es extends de{}class is extends es{}class qs extends es{async _call($){return new Fr(await super._call($))}}class Re extends es{async _call($){return new Es(await super._call($))}}class Mt extends es{async _call($){return new Rr(await super._call($))}}class zt extends de{}class kt extends zt{}class Hs extends zt{async _call($){return new Fr(await super._call($))}}class Os extends zt{async _call($){return new Es(await super._call($))}}class Qs extends zt{async _call($){return new wr(await super._call($))}}class Ys extends zt{async _call($){return new Rr(await super._call($))}}class Gt extends de{}class Ar extends Gt{}class or extends Gt{async _call($){return new Fr(await super._call($))}}class Nr extends Gt{async _call($){return new Es(await super._call($))}}class Vr extends Gt{async _call($){return new Rr(await super._call($))}}class Ps extends de{}class mr extends Ps{}class vr extends Ps{async _call($){return new Es(await super._call($))}}class Er extends Ps{async _call($){return new Rr(await super._call($))}}class cs extends Ps{async _call($){return new Fr(await super._call($))}}class Ne extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class I extends Ne{}class ae extends Ne{}class ye extends de{}class Fe extends ye{}class Ke extends ye{}class ht extends de{}class Ft extends ht{}class Rt extends ht{}class Lt extends de{}class qt extends Lt{}class ws extends Lt{}class Ws extends Lt{async _call($){return new Es(await super._call($))}}class Bs extends de{}class gr extends Bs{}class as extends Bs{}class Ss extends Bs{async _call($){return new Es(await super._call($))}}class Ur extends Bs{}class Pr extends de{}class et extends Pr{}class Br extends Pr{}class hn extends de{}class ur extends hn{}class Or extends hn{}class rs extends de{}class Kr extends rs{}class tn extends rs{async _call($){return new Fr(await super._call($))}}class Gs extends rs{async _call($){return new Es(await super._call($))}}class cr extends rs{async _call($){return new wr(await super._call($))}}class Ut extends rs{async _call($){return new Rr(await super._call($))}}class vs extends de{}class yr extends vs{}class dr extends vs{async _call($){return new Fr(await super._call($))}}class Cr extends vs{async _call($){return new Es(await super._call($))}}class Zt extends vs{async _call($){return new wr(await super._call($))}}class En extends vs{async _call($){return new Rr(await super._call($))}}class pt extends de{}class ts extends pt{}class Wa extends pt{async _call($){return new Fr(await super._call($))}}class Ho extends pt{async _call($){return new Es(await super._call($))}}class Ga extends pt{async _call($){return new wr(await super._call($))}}class Ka extends pt{async _call($){return new Rr(await super._call($))}}class xs extends de{}class qa extends xs{}class Qo extends xs{}class Xo extends de{constructor(){super(...arguments);ke(this,"requires_attention_mask",!1);ke(this,"main_input_name","input_features");ke(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Ha extends Xo{}class Qa extends Xo{_prepare_generation_config($,J){return super._prepare_generation_config($,J,q.WhisperGenerationConfig)}_retrieve_init_tokens($){const J=[$.decoder_start_token_id];let Se=$.language;const Xe=$.task;if($.is_multilingual){Se||(console.warn("No language specified - defaulting to English (en)."),Se="en");const _t=`<|${(0,ne.whisper_language_to_code)(Se)}|>`;J.push($.lang_to_id[_t]),J.push($.task_to_id[Xe??"transcribe"])}else if(Se||Xe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!$.return_timestamps&&$.no_timestamps_token_id&&J.at(-1)!==$.no_timestamps_token_id?J.push($.no_timestamps_token_id):$.return_timestamps&&J.at(-1)===$.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),J.pop()),J.filter(Ye=>Ye!=null)}async generate({inputs:$=null,generation_config:J=null,logits_processor:Se=null,stopping_criteria:Xe=null,...Ye}){J=this._prepare_generation_config(J,Ye);const _t=Ye.decoder_input_ids??this._retrieve_init_tokens(J);if(J.return_timestamps&&(Se??(Se=new x.LogitsProcessorList),Se.push(new x.WhisperTimeStampLogitsProcessor(J,_t))),J.begin_suppress_tokens&&(Se??(Se=new x.LogitsProcessorList),Se.push(new x.SuppressTokensAtBeginLogitsProcessor(J.begin_suppress_tokens,_t.length))),J.return_token_timestamps){if(!J.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");J.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),J.output_attentions=!0,J.return_dict_in_generate=!0}const Tt=await super.generate({inputs:$,generation_config:J,logits_processor:Se,decoder_input_ids:_t,...Ye});return J.return_token_timestamps&&(Tt.token_timestamps=this._extract_token_timestamps(Tt,J.alignment_heads,J.num_frames)),Tt}_extract_token_timestamps($,J,Se=null,Xe=.02){if(!$.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Se==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Ye=this.config.median_filter_width;Ye===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Ye=7);const _t=$.cross_attentions,Tt=Array.from({length:this.config.decoder_layers},(Is,Ts)=>(0,C.cat)(_t.map(Ds=>Ds[Ts]),2)),Bt=(0,C.stack)(J.map(([Is,Ts])=>{if(Is>=Tt.length)throw new Error(`Layer index ${Is} is out of bounds for cross attentions (length ${Tt.length}).`);return Se?Tt[Is].slice(null,Ts,null,[0,Se]):Tt[Is].slice(null,Ts)})).transpose(1,0,2,3),[Wt,us]=(0,C.std_mean)(Bt,-2,0,!0),fs=Bt.clone();for(let Is=0;Is<fs.dims[0];++Is){const Ts=fs[Is];for(let Ds=0;Ds<Ts.dims[0];++Ds){const ir=Ts[Ds],rr=Wt[Is][Ds][0].data,js=us[Is][Ds][0].data;for(let nr=0;nr<ir.dims[0];++nr){let hr=ir[nr].data;for(let jr=0;jr<hr.length;++jr)hr[jr]=(hr[jr]-js[jr])/rr[jr];hr.set((0,re.medianFilter)(hr,Ye))}}}const os=[(0,C.mean)(fs,1)],_s=$.sequences.dims,Cs=new C.Tensor("float32",new Float32Array(_s[0]*_s[1]),_s);for(let Is=0;Is<_s[0];++Is){const Ts=os[Is].neg().squeeze_(0),[Ds,ir]=(0,re.dynamic_time_warping)(Ts.tolist()),rr=Array.from({length:Ds.length-1},(hr,jr)=>Ds[jr+1]-Ds[jr]),js=(0,K.mergeArrays)([1],rr).map(hr=>!!hr),nr=[];for(let hr=0;hr<js.length;++hr)js[hr]&&nr.push(ir[hr]*Xe);Cs[Is].data.set(nr,1)}return Cs}}class Yo extends de{constructor(){super(...arguments);ke(this,"requires_attention_mask",!1);ke(this,"main_input_name","input_values");ke(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Yr extends Yo{}class Xa extends Yo{}class Jo extends de{constructor(){super(...arguments);ke(this,"main_input_name","pixel_values");ke(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class wn extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ho extends wn{_merge_input_ids_with_image_features({inputs_embeds:$,image_features:J,input_ids:Se,attention_mask:Xe}){const Ye=this.config.image_token_index,Tt=Se.tolist().map(os=>os.findIndex(_s=>_s==Ye)),Bt=Tt.every(os=>os===-1),Wt=Tt.every(os=>os!==-1);if(!Bt&&!Wt)throw new Error("Every input should contain either 0 or 1 image token.");if(Bt)return{inputs_embeds:$,attention_mask:Xe};const us=[],fs=[];for(let os=0;os<Tt.length;++os){const _s=Tt[os],Cs=$[os],Is=J[os],Ts=Xe[os];us.push((0,C.cat)([Cs.slice([0,_s]),Is,Cs.slice([_s+1,Cs.dims[0]])],0)),fs.push((0,C.cat)([Ts.slice([0,_s]),(0,C.ones)([Is.dims[0]]),Ts.slice([_s+1,Ts.dims[0]])],0))}return{inputs_embeds:(0,C.stack)(us,0),attention_mask:(0,C.stack)(fs,0)}}}class Ya extends ho{}class Ja extends ho{}class Za extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);ke(this,"main_input_name","inputs_embeds")}}class el extends Za{_merge_input_ids_with_image_features({inputs_embeds:$,image_features:J,input_ids:Se,attention_mask:Xe}){return{inputs_embeds:(0,C.cat)([J,$],1),attention_mask:(0,C.cat)([(0,C.ones)(J.dims.slice(0,2)),Xe],1)}}async _prepare_inputs_embeds({input_ids:$,pixel_values:J,inputs_embeds:Se,attention_mask:Xe}){if(!$&&!J)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Ye,_t;return $&&(Ye=await this.encode_text({input_ids:$})),J&&(_t=await this.encode_image({pixel_values:J})),Ye&&_t?{inputs_embeds:Se,attention_mask:Xe}=this._merge_input_ids_with_image_features({inputs_embeds:Ye,image_features:_t,input_ids:$,attention_mask:Xe}):Se=Ye||_t,{inputs_embeds:Se,attention_mask:Xe}}async forward({input_ids:$,pixel_values:J,attention_mask:Se,decoder_input_ids:Xe,decoder_attention_mask:Ye,encoder_outputs:_t,past_key_values:Tt,inputs_embeds:Bt,decoder_inputs_embeds:Wt}){if(Bt||({inputs_embeds:Bt,attention_mask:Se}=await this._prepare_inputs_embeds({input_ids:$,pixel_values:J,inputs_embeds:Bt,attention_mask:Se})),!_t){let{last_hidden_state:os}=await He(this,{inputs_embeds:Bt,attention_mask:Se});_t=os}if(!Wt){if(!Xe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Wt=await this.encode_text({input_ids:Xe})}return await Ve(this,{inputs_embeds:Wt,attention_mask:Ye,encoder_attention_mask:Se,encoder_hidden_states:_t,past_key_values:Tt},!0)}}class tl extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class sl extends tl{_merge_input_ids_with_image_features($){const J=$.image_features.dims.at(-1),Se=$.image_features.view(-1,J);return wt({image_token_id:this.config.image_token_index,...$,image_features:Se})}}class rl extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Zo extends rl{async encode_image({pixel_values:$,pixel_attention_mask:J}){return(await Ie(this.sessions.vision_encoder,{pixel_values:$,pixel_attention_mask:J})).image_features}_merge_input_ids_with_image_features($){const J=$.image_features.dims.at(-1),Se=$.image_features.view(-1,J);return wt({image_token_id:this.config.image_token_id,...$,image_features:Se})}}class nl extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Jr extends nl{async forward({input_ids:$=null,attention_mask:J=null,pixel_values:Se=null,image_sizes:Xe=null,position_ids:Ye=null,inputs_embeds:_t=null,past_key_values:Tt=null,generation_config:Bt=null,logits_processor:Wt=null,...us}){if(!_t){let os;if(Se&&$.dims[1]!==1){if(!Xe)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:os}=await Ie(this.sessions.vision_encoder,{pixel_values:Se,image_sizes:Xe}))}else{const _s=this.config.normalized_config.hidden_size;os=new C.Tensor("float32",[],[0,_s])}({inputs_embeds:_t}=await Ie(this.sessions.prepare_inputs_embeds,{input_ids:$,image_features:os}))}return await Ve(this,{inputs_embeds:_t,past_key_values:Tt,attention_mask:J,position_ids:Ye,generation_config:Bt,logits_processor:Wt},!1)}}class Pn extends de{}class ol extends Pn{}class Wd extends Pn{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"text_model"})}}class il extends Pn{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"text_model"})}}class Gd extends Pn{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"vision_model"})}}class al extends Pn{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"vision_model"})}}class ei extends de{}class ll extends ei{}class ul extends ei{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"text_model"})}}class cl extends Pn{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"vision_model"})}}class Kd extends de{}class sn extends Kd{}class po extends de{}class mo extends po{async forward($){const J=!$.input_ids,Se=!$.pixel_values;if(J&&Se)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(J&&($.input_ids=(0,C.ones)([$.pixel_values.dims[0],1])),Se){const{image_size:Wt}=this.config.vision_config;$.pixel_values=(0,C.full)([0,3,Wt,Wt],0)}const{text_embeddings:Xe,image_embeddings:Ye,l2norm_text_embeddings:_t,l2norm_image_embeddings:Tt}=await super.forward($),Bt={};return J||(Bt.text_embeddings=Xe,Bt.l2norm_text_embeddings=_t),Se||(Bt.image_embeddings=Ye,Bt.l2norm_image_embeddings=Tt),Bt}}class ti extends po{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"text_model"})}}class rn extends po{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"vision_model"})}}class si extends de{}class dl extends si{}class hl extends si{}class ri extends de{}class pl extends ri{}class ml extends ri{}class ni extends de{}class fl extends ni{}class _l extends ni{}class oi extends de{}class nn extends oi{}class gl extends oi{}class ii extends de{}class wl extends ii{}class yl extends ii{}class ai extends de{}class Ml extends ai{}class bl extends ai{}class li extends de{}class vl extends li{}class Tl extends li{}class fo extends de{}class ui extends fo{}class xl extends fo{}class ci extends de{}class di extends ci{}class qd extends ci{}class hi extends de{}class _o extends hi{}class El extends hi{}class pi extends de{}class Pl extends pi{}class Kn extends pi{}class mi extends de{}class Cl extends mi{}class fi extends mi{}class _i extends de{}class kl extends _i{}class Sl extends _i{}class gi extends de{}class Hd extends gi{}class $l extends gi{}class wi extends de{}class Il extends wi{}class Qd extends wi{}class yi extends de{}class Rs extends yi{}class Al extends yi{}class Mi extends de{}class Ol extends Mi{}class Fl extends Mi{}class bi extends de{}class Dl extends bi{}class Ll extends bi{}class vi extends de{}class zl extends vi{}class Bl extends vi{}class Ti extends de{}class Rl extends Ti{}class jl extends Ti{}class xi extends de{}class qn extends xi{}class Nl extends xi{}class go extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Vl extends go{get_rope_index($,J,Se,Xe){const{vision_config:Ye,image_token_id:_t,video_token_id:Tt,vision_start_token_id:Bt}=this.config,Wt=Ye.spatial_merge_size??2,us=[];if(J||Se){let fs=$.tolist();Xe||(Xe=(0,C.ones_like)($));const os=Xe.tolist(),_s=Array.from({length:3},ir=>Array.from({length:$.dims[0]},rr=>Array.from({length:$.dims[1]},js=>1))),Cs=J?J.tolist():[],Is=Se?Se.tolist():[];let Ts=0,Ds=0;for(let ir=0;ir<fs.length;++ir){const rr=fs[ir].filter((ar,Mr)=>os[ir][Mr]==1),nr=rr.reduce((ar,Mr,Mn)=>(Mr==Bt&&ar.push(Mn),ar),[]).map(ar=>rr[ar+1]),hr=nr.filter(ar=>ar==_t).length,jr=nr.filter(ar=>ar==Tt).length;let Sr=[],cn=0,Nn=hr,Lo=jr;for(let ar=0;ar<nr.length;++ar){const Mr=rr.findIndex((vn,Zr)=>Zr>cn&&vn==_t),Mn=rr.findIndex((vn,Zr)=>Zr>cn&&vn==Tt),Fn=Nn>0&&Mr!==-1?Mr:rr.length+1,eo=Lo>0&&Mn!==-1?Mn:rr.length+1;let jo,to,Da,La;Fn<eo?([to,Da,La]=Cs[Ts],++Ts,--Nn,jo=Fn):([to,Da,La]=Is[Ds],++Ds,--Lo,jo=eo);const[Zh,za,so]=[Number(to),Math.floor(Number(Da)/Wt),Math.floor(Number(La)/Wt)],No=jo-cn,bn=Sr.length>0?(0,re.max)(Sr.at(-1))[0]+1:0;Sr.push(Array.from({length:3*No},(vn,Zr)=>bn+Zr%No));const Ba=No+bn,Vn=Zh*za*so,Dd=Array.from({length:Vn},(vn,Zr)=>Ba+Math.floor(Zr/(za*so))),Ld=Array.from({length:Vn},(vn,Zr)=>Ba+Math.floor(Zr/so)%za),zd=Array.from({length:Vn},(vn,Zr)=>Ba+Zr%so);Sr.push([Dd,Ld,zd].flat()),cn=jo+Vn}if(cn<rr.length){const ar=Sr.length>0?(0,re.max)(Sr.at(-1))[0]+1:0,Mr=rr.length-cn;Sr.push(Array.from({length:3*Mr},(Mn,Fn)=>ar+Fn%Mr))}const Hr=Sr.reduce((ar,Mr)=>ar+Mr.length,0),an=new Array(Hr);let zo=0;for(let ar=0;ar<3;++ar)for(let Mr=0;Mr<Sr.length;++Mr){const Mn=Sr[Mr],Fn=Mn.length/3;for(let eo=ar*Fn;eo<(ar+1)*Fn;++eo)an[zo++]=Mn[eo]}let Zn=0;const Bo=os[ir];for(let ar=0;ar<Bo.length;++ar)if(Bo[ar]==1){for(let Mr=0;Mr<3;++Mr)_s[Mr][ir][ar]=an[Mr*Hr/3+Zn];++Zn}const Ro=(0,re.max)(an)[0];us.push(Ro+1-fs[ir].length)}return[new C.Tensor("int64",_s.flat(1/0),[3,$.dims[0],$.dims[1]]),new C.Tensor("int64",us,[us.length,1])]}else if(Xe){const{data:fs,dims:os}=Ae(Xe),_s=BigInt64Array.from({length:3*fs.length},(Is,Ts)=>fs[Ts%fs.length]),Cs=Array.from({length:os[0]},(Is,Ts)=>(0,re.max)(fs.subarray(os[1]*Ts,os[1]*(Ts+1)))[0]+1n+BigInt(os[1]));return[new C.Tensor("int64",_s,[3,...os]),new C.Tensor("int64",Cs,[Cs.length,1])]}else{const[fs,os]=$.dims,_s=BigInt64Array.from({length:3*fs*os},(Cs,Is)=>BigInt(Math.floor(Is%os/fs)));return[new C.Tensor("int64",_s,[3,...$.dims]),(0,C.zeros)([fs,1])]}}async encode_image({pixel_values:$,image_grid_thw:J}){return(await Ie(this.sessions.vision_encoder,{pixel_values:$,grid_thw:J})).image_features}_merge_input_ids_with_image_features($){return wt({image_token_id:this.config.image_token_id,...$})}prepare_inputs_for_generation($,J,Se){if(J.attention_mask&&!J.position_ids)if(!J.past_key_values)[J.position_ids,J.rope_deltas]=this.get_rope_index(J.input_ids,J.image_grid_thw,J.video_grid_thw,J.attention_mask);else{J.pixel_values=null;const Xe=BigInt(Object.values(J.past_key_values)[0].dims.at(-2)),Ye=J.rope_deltas.map(_t=>Xe+_t);J.position_ids=(0,C.stack)([Ye,Ye,Ye],0)}return J}}class Ei extends de{}class Ul extends Ei{}class Wl extends Ei{}class Pi extends de{}class Gl extends Pi{}class Kl extends Pi{}class Ci extends de{}class ql extends Ci{}class Hl extends Ci{}class ki extends de{}class Ql extends ki{}class Xl extends ki{}class Si extends de{}class Yl extends Si{}class Jl extends Si{}class wo extends de{}class Zl extends wo{}class $i extends wo{async _call($){return new Es(await super._call($))}}class yo extends de{}class eu extends yo{}class tu extends yo{async _call($){return new Es(await super._call($))}}class su extends de{}class ru extends su{}class Ii extends de{}class nu extends Ii{}class Ai extends Ii{async _call($){return new Es(await super._call($))}}class ou extends de{}class iu extends ou{}class Oi extends de{}class Xd extends Oi{}class au extends Oi{async _call($){return new Es(await super._call($))}}class lu extends de{}class on extends lu{}class Fi extends de{}class uu extends Fi{}class cu extends Fi{async _call($){return new Es(await super._call($))}}class du extends de{}class hu extends du{async _call($){return new Od(await super._call($))}}class Di extends de{}class pu extends Di{}class mu extends Di{async _call($){return new Es(await super._call($))}}class Li extends de{}class fu extends Li{}class Yd extends Li{async _call($){return new Es(await super._call($))}}class zi extends de{}class _u extends zi{}class gu extends zi{}class Bi extends de{}class wu extends Bi{}class yu extends Bi{}class Mu extends de{}class Cn extends Mu{}class kn extends Mu{async _call($){return new Es(await super._call($))}}class pn extends de{}class Ri extends pn{}class Sn extends pn{async _call($){return new ji(await super._call($))}}class kr extends pn{async _call($){return new Ni(await super._call($))}}class ji extends rt{constructor({logits:$,pred_boxes:J}){super(),this.logits=$,this.pred_boxes=J}}class Ni extends rt{constructor({logits:$,pred_boxes:J,pred_masks:Se}){super(),this.logits=$,this.pred_boxes=J,this.pred_masks=Se}}class Vi extends de{}class Jd extends Vi{}class Hn extends Vi{async _call($){return new Ui(await super._call($))}}class Ui extends rt{constructor({logits:$,pred_boxes:J}){super(),this.logits=$,this.pred_boxes=J}}class Mo extends de{}class bu extends Mo{}class vu extends Mo{async _call($){return new Wi(await super._call($))}}class Wi extends ji{}class bo extends de{}class Tu extends bo{}class Gi extends bo{async _call($){return new Es(await super._call($))}}class Ki extends de{}class vo extends Ki{}class qi extends Ki{async _call($){return new Es(await super._call($))}}class Hi extends de{}class xu extends Hi{}class Zd extends Hi{async _call($){return new Es(await super._call($))}}class Qi extends de{}class Xi extends Qi{}class Qn extends Qi{async _call($){return new Es(await super._call($))}}class Yi extends de{}class Ji extends Yi{}class Eu extends Yi{}class Zi extends de{}class Pu extends Zi{}class eh extends Zi{}class Cu extends de{}class ku extends Cu{}class ea extends de{}class Su extends ea{}class To extends ea{}class $u extends ea{}class xo extends de{}class ta extends xo{}class Eo extends de{}class Iu extends Eo{}class Au extends Eo{}class Po extends de{}class th extends Po{}class Ou extends Po{}class sh extends de{}class Fu extends sh{}class sa extends de{}class Du extends sa{}class ra extends sa{async _call($){return new Es(await super._call($))}}class na extends de{}class Lu extends na{}class oa extends na{async _call($){return new Es(await super._call($))}}class ia extends de{}class zu extends ia{}class rh extends ia{async _call($){return new Es(await super._call($))}}class aa extends de{}class Bu extends aa{}class Ru extends aa{async _call($){return new Es(await super._call($))}}class nh extends de{}class ju extends nh{}class la extends de{}class Nu extends la{}class Vu extends la{async _call($){return new Uu(await super._call($))}}class Uu extends rt{constructor({logits:$,pred_boxes:J}){super(),this.logits=$,this.pred_boxes=J}}class oh extends de{}class Co extends oh{async get_image_embeddings({pixel_values:$}){return await He(this,{pixel_values:$})}async forward($){if((!$.image_embeddings||!$.image_positional_embeddings)&&($={...$,...await this.get_image_embeddings($)}),!$.input_labels&&$.input_points){const Se=$.input_points.dims.slice(0,-1),Xe=Se.reduce((Ye,_t)=>Ye*_t,1);$.input_labels=new C.Tensor("int64",new BigInt64Array(Xe).fill(1n),Se)}const J={image_embeddings:$.image_embeddings,image_positional_embeddings:$.image_positional_embeddings};return $.input_points&&(J.input_points=$.input_points),$.input_labels&&(J.input_labels=$.input_labels),$.input_boxes&&(J.input_boxes=$.input_boxes),await Ie(this.sessions.prompt_encoder_mask_decoder,J)}async _call($){return new Xn(await super._call($))}}class Xn extends rt{constructor({iou_scores:$,pred_masks:J}){super(),this.iou_scores=$,this.pred_masks=J}}class ko extends de{}class Wu extends ko{}class Gu extends ko{}class ua extends de{}class Ku extends ua{}class ca extends ua{}class yn extends de{}class qu extends yn{}class Hu extends yn{async _call($){return new On(await super._call($))}}class ih extends yn{async _call($){return new Es(await super._call($))}}class Qu extends yn{async _call($){return new wr(await super._call($))}}class So extends de{}class Xu extends So{}class Yu extends So{async _call($){return new wr(await super._call($))}}class Ju extends de{}class ah extends Ju{}class $o extends de{}class Zu extends $o{}class lh extends $o{async _call($){return new On(await super._call($))}}class ec extends $o{async _call($){return new Es(await super._call($))}}class Yn extends de{}class tc extends Yn{}class sc extends Yn{async _call($){return new On(await super._call($))}}class uh extends Yn{async _call($){return new Es(await super._call($))}}class rc extends Yn{async _call($){return new wr(await super._call($))}}class Io extends de{}class nc extends Io{}class ch extends Io{async _call($){return new On(await super._call($))}}class oc extends Io{async _call($){return new Es(await super._call($))}}class dh extends de{}class ic extends yn{}class ac extends yn{async _call($){return new On(await super._call($))}}class hh extends yn{async _call($){return new Es(await super._call($))}}class jn extends de{}class lc extends jn{}class uc extends jn{async _call($){return new On(await super._call($))}}class cc extends jn{async _call($){return new Es(await super._call($))}}class ph extends jn{async _call($){return new Ad(await super._call($))}}class dc extends jn{async _call($){return new wr(await super._call($))}}class hc extends de{}class pc extends hc{}class Ao extends de{}class Yh extends Ao{}class un extends Ao{}class mn extends Ao{async generate_speech($,J,{threshold:Se=.5,minlenratio:Xe=0,maxlenratio:Ye=20,vocoder:_t=null}={}){const Tt={input_ids:$},{encoder_outputs:Bt,encoder_attention_mask:Wt}=await He(this,Tt),us=Bt.dims[1]/this.config.reduction_factor,fs=Math.floor(us*Ye),os=Math.floor(us*Xe),_s=this.config.num_mel_bins;let Cs=[],Is=null,Ts=null,Ds=0;for(;;){++Ds;const js=ve(!!Ts);let nr;Ts?nr=Ts.output_sequence_out:nr=new C.Tensor("float32",new Float32Array(_s),[1,1,_s]);let hr={use_cache_branch:js,output_sequence:nr,encoder_attention_mask:Wt,speaker_embeddings:J,encoder_hidden_states:Bt};this.addPastKeyValues(hr,Is),Ts=await Ie(this.sessions.decoder_model_merged,hr),Is=this.getPastKeyValues(Ts,Is);const{prob:jr,spectrum:Sr}=Ts;if(Cs.push(Sr),Ds>=os&&(Array.from(jr.data).filter(cn=>cn>=Se).length>0||Ds>=fs))break}const ir=(0,C.cat)(Cs),{waveform:rr}=await Ie(_t.sessions.model,{spectrogram:ir});return{spectrogram:ir,waveform:rr}}}class $n extends de{constructor(){super(...arguments);ke(this,"main_input_name","spectrogram")}}class In extends de{}class mc extends In{}class da extends de{}class fc extends da{}class _c extends da{}class ha extends de{}class gc extends ha{}class wc extends ha{}class pa extends de{}class yc extends pa{}class Mc extends pa{}class ma extends de{}class Wr extends ma{}class bc extends ma{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"text_model"})}}class vc extends ma{static async from_pretrained($,J={}){return super.from_pretrained($,{...J,model_file_name:J.model_file_name??"audio_model"})}}class fa extends de{}class _a extends fa{async _call($){return new Fd(await super._call($))}}class An extends de{}class mh extends An{}class Tc extends An{}class xc extends An{}class ga extends de{}class Ec extends ga{}class Pc extends ga{}class Oo extends de{}class Cc extends Oo{}class kc extends Oo{async _call($){return new Es(await super._call($))}}class wa extends de{}class fh extends wa{}class _h extends wa{}class Fo extends de{constructor(){super(...arguments);ke(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(J){const[Se,Xe]=J.dims,Ye=this.config.decoder.num_codebooks,_t=Xe-Ye;let Tt=0;for(let us=0;us<J.size;++us){if(J.data[us]===this.config.decoder.pad_token_id)continue;const fs=us%Xe,os=Math.floor(us/Xe)%Ye,_s=fs-os;_s>0&&_s<=_t&&(J.data[Tt++]=J.data[us])}const Bt=Math.floor(Se/Ye),Wt=Tt/(Bt*Ye);return new C.Tensor(J.type,J.data.slice(0,Tt),[Bt,Ye,Wt])}prepare_inputs_for_generation(J,Se,Xe){let Ye=structuredClone(J);for(let Tt=0;Tt<Ye.length;++Tt)for(let Bt=0;Bt<Ye[Tt].length;++Bt)Tt%this.config.decoder.num_codebooks>=Bt&&(Ye[Tt][Bt]=BigInt(this.config.decoder.pad_token_id));return Xe.guidance_scale!==null&&Xe.guidance_scale>1&&(Ye=Ye.concat(Ye)),super.prepare_inputs_for_generation(Ye,Se,Xe)}async generate(J){const Se=await super.generate(J),Xe=this._apply_and_filter_by_delay_pattern_mask(Se).unsqueeze_(0),{audio_values:Ye}=await Ie(this.sessions.encodec_decode,{audio_codes:Xe});return Ye}}class ya extends de{}class gh extends ya{}class Ma extends ya{async _call($){return new Es(await super._call($))}}class ba extends de{}class Sc extends ba{}class $c extends ba{async _call($){return new Es(await super._call($))}}class Ic extends de{}class Ac extends Ic{}class Oc extends Ic{async _call($){return new Es(await super._call($))}}class va extends de{}class wh extends va{}class Fc extends va{async _call($){return new Es(await super._call($))}}class Dc extends de{}class yh extends Dc{}class Lc extends de{}class zc extends Lc{constructor(...J){super(...J);ke(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(J){const Se=this._generation_mode??"text";let Xe;if(Se==="text"||!J.past_key_values){const Wt=this.sessions.prepare_inputs_embeds,us=(0,K.pick)(J,Wt.inputNames);Xe=await Ie(Wt,us)}else{const Wt=this.sessions.gen_img_embeds,us=(0,K.pick)({image_ids:J.input_ids},Wt.inputNames);Xe=await Ie(Wt,us)}const Ye={...J,...Xe},_t=await Ve(this,Ye),Tt=this.sessions[Se==="text"?"lm_head":"gen_head"];if(!Tt)throw new Error(`Unable to find "${Tt}" generation head`);const Bt=await Ie(Tt,(0,K.pick)(_t,Tt.inputNames));return{...Xe,..._t,...Bt}}async generate(J){return this._generation_mode="text",super.generate(J)}async generate_images(J){this._generation_mode="image";const Se=(J.inputs??J[this.main_input_name]).dims[1],Ye=(await super.generate(J)).slice(null,[Se,null]),_t=this.sessions.image_decode,{decoded_image:Tt}=await Ie(_t,{generated_tokens:Ye}),Bt=Tt.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Wt=[];for(const us of Bt){const fs=j.RawImage.fromTensor(us);Wt.push(fs)}return Wt}}class Bc extends rt{constructor({char_logits:$,bpe_logits:J,wp_logits:Se}){super(),this.char_logits=$,this.bpe_logits=J,this.wp_logits=Se}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Rc extends de{}class jc extends Rc{async _call($){return new Bc(await super._call($))}}class Nc extends de{}class Vc extends Nc{}class Uc extends Nc{}class Ta extends de{}class Wc extends Ta{}class Gc extends Ta{}class Xs{static async from_pretrained($,{progress_callback:J=null,config:Se=null,cache_dir:Xe=null,local_files_only:Ye=!1,revision:_t="main",model_file_name:Tt=null,subfolder:Bt="onnx",device:Wt=null,dtype:us=null,use_external_data_format:fs=null,session_options:os={}}={}){const _s={progress_callback:J,config:Se,cache_dir:Xe,local_files_only:Ye,revision:_t,model_file_name:Tt,subfolder:Bt,device:Wt,dtype:us,use_external_data_format:fs,session_options:os};if(_s.config=await y.AutoConfig.from_pretrained($,_s),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const Cs of this.MODEL_CLASS_MAPPINGS){const Is=Cs.get(_s.config.model_type);if(Is)return await Is[1].from_pretrained($,_s)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${_s.config.model_type}", attempting to construct from base class.`),await de.from_pretrained($,_s);throw Error(`Unsupported model type: ${_s.config.model_type}`)}}ke(Xs,"MODEL_CLASS_MAPPINGS",null),ke(Xs,"BASE_IF_FAIL",!1);const Mh=new Map([["bert",["BertModel",Oe]],["modernbert",["ModernBertModel",$t]],["nomic_bert",["NomicBertModel",pe]],["roformer",["RoFormerModel",Te]],["electra",["ElectraModel",pr]],["esm",["EsmModel",Kt]],["convbert",["ConvBertModel",Vt]],["camembert",["CamembertModel",ns]],["deberta",["DebertaModel",c]],["deberta-v2",["DebertaV2Model",N]],["mpnet",["MPNetModel",kt]],["albert",["AlbertModel",mr]],["distilbert",["DistilBertModel",Ct]],["roberta",["RobertaModel",Kr]],["xlm",["XLMModel",yr]],["xlm-roberta",["XLMRobertaModel",ts]],["clap",["ClapModel",Wr]],["clip",["CLIPModel",ol]],["clipseg",["CLIPSegModel",dl]],["chinese_clip",["ChineseCLIPModel",sn]],["siglip",["SiglipModel",ll]],["jina_clip",["JinaCLIPModel",mo]],["mobilebert",["MobileBertModel",is]],["squeezebert",["SqueezeBertModel",Ar]],["wav2vec2",["Wav2Vec2Model",qu]],["wav2vec2-bert",["Wav2Vec2BertModel",nc]],["unispeech",["UniSpeechModel",Zu]],["unispeech-sat",["UniSpeechSatModel",tc]],["hubert",["HubertModel",ic]],["wavlm",["WavLMModel",lc]],["audio-spectrogram-transformer",["ASTModel",qa]],["vits",["VitsModel",_a]],["pyannote",["PyAnnoteModel",Xu]],["wespeaker-resnet",["WeSpeakerResNetModel",ah]],["detr",["DetrModel",Ri]],["rt_detr",["RTDetrModel",Jd]],["table-transformer",["TableTransformerModel",bu]],["vit",["ViTModel",Zl]],["ijepa",["IJepaModel",eu]],["pvt",["PvtModel",nu]],["vit_msn",["ViTMSNModel",Xd]],["vit_mae",["ViTMAEModel",iu]],["groupvit",["GroupViTModel",on]],["fastvit",["FastViTModel",uu]],["mobilevit",["MobileViTModel",pu]],["mobilevitv2",["MobileViTV2Model",fu]],["owlvit",["OwlViTModel",_u]],["owlv2",["Owlv2Model",wu]],["beit",["BeitModel",Cn]],["deit",["DeiTModel",Tu]],["hiera",["HieraModel",vo]],["convnext",["ConvNextModel",Du]],["convnextv2",["ConvNextV2Model",Lu]],["dinov2",["Dinov2Model",zu]],["dinov2_with_registers",["Dinov2WithRegistersModel",Bu]],["resnet",["ResNetModel",xu]],["swin",["SwinModel",Xi]],["swin2sr",["Swin2SRModel",Ji]],["donut-swin",["DonutSwinModel",Fu]],["yolos",["YolosModel",Nu]],["dpt",["DPTModel",Pu]],["glpn",["GLPNModel",th]],["hifigan",["SpeechT5HifiGan",$n]],["efficientnet",["EfficientNetModel",Cc]],["decision_transformer",["DecisionTransformerModel",yh]],["patchtst",["PatchTSTForPrediction",Vc]],["patchtsmixer",["PatchTSMixerForPrediction",Wc]],["mobilenet_v1",["MobileNetV1Model",gh]],["mobilenet_v2",["MobileNetV2Model",Sc]],["mobilenet_v3",["MobileNetV3Model",Ac]],["mobilenet_v4",["MobileNetV4Model",wh]],["maskformer",["MaskFormerModel",Iu]],["mgp-str",["MgpstrForSceneTextRecognition",jc]],["style_text_to_speech_2",["StyleTextToSpeech2Model",pc]]]),bh=new Map([["t5",["T5Model",I]],["longt5",["LongT5Model",Fe]],["mt5",["MT5Model",Ft]],["bart",["BartModel",qt]],["mbart",["MBartModel",gr]],["marian",["MarianModel",Wu]],["whisper",["WhisperModel",Ha]],["m2m_100",["M2M100Model",Ku]],["blenderbot",["BlenderbotModel",et]],["blenderbot-small",["BlenderbotSmallModel",ur]]]),vh=new Map([["bloom",["BloomModel",ql]],["jais",["JAISModel",fl]],["gpt2",["GPT2Model",pl]],["gptj",["GPTJModel",Ml]],["gpt_bigcode",["GPTBigCodeModel",vl]],["gpt_neo",["GPTNeoModel",nn]],["gpt_neox",["GPTNeoXModel",wl]],["codegen",["CodeGenModel",ui]],["llama",["LlamaModel",di]],["exaone",["ExaoneModel",Cl]],["olmo",["OlmoModel",Hd]],["olmo2",["Olmo2Model",Il]],["mobilellm",["MobileLLMModel",kl]],["granite",["GraniteModel",Rs]],["cohere",["CohereModel",Ol]],["gemma",["GemmaModel",Dl]],["gemma2",["Gemma2Model",zl]],["helium",["HeliumModel",_o]],["glm",["GlmModel",Pl]],["openelm",["OpenELMModel",Rl]],["qwen2",["Qwen2Model",qn]],["phi",["PhiModel",Ul]],["phi3",["Phi3Model",Gl]],["mpt",["MptModel",Ql]],["opt",["OPTModel",Yl]],["mistral",["MistralModel",fc]],["starcoder2",["Starcoder2Model",gc]],["falcon",["FalconModel",yc]],["stablelm",["StableLmModel",Ec]]]),Kc=new Map([["speecht5",["SpeechT5ForSpeechToText",un]],["whisper",["WhisperForConditionalGeneration",Qa]],["moonshine",["MoonshineForConditionalGeneration",Xa]]]),Jn=new Map([["speecht5",["SpeechT5ForTextToSpeech",mn]]]),xa=new Map([["vits",["VitsModel",_a]],["musicgen",["MusicgenForConditionalGeneration",Fo]]]),Ea=new Map([["bert",["BertForSequenceClassification",at]],["modernbert",["ModernBertForSequenceClassification",vt]],["roformer",["RoFormerForSequenceClassification",tt]],["electra",["ElectraForSequenceClassification",en]],["esm",["EsmForSequenceClassification",gs]],["convbert",["ConvBertForSequenceClassification",Jt]],["camembert",["CamembertForSequenceClassification",Gr]],["deberta",["DebertaForSequenceClassification",n]],["deberta-v2",["DebertaV2ForSequenceClassification",ie]],["mpnet",["MPNetForSequenceClassification",Os]],["albert",["AlbertForSequenceClassification",vr]],["distilbert",["DistilBertForSequenceClassification",qe]],["roberta",["RobertaForSequenceClassification",Gs]],["xlm",["XLMForSequenceClassification",Cr]],["xlm-roberta",["XLMRobertaForSequenceClassification",Ho]],["bart",["BartForSequenceClassification",Ws]],["mbart",["MBartForSequenceClassification",Ss]],["mobilebert",["MobileBertForSequenceClassification",Re]],["squeezebert",["SqueezeBertForSequenceClassification",Nr]]]),Pa=new Map([["bert",["BertForTokenClassification",nt]],["modernbert",["ModernBertForTokenClassification",Dt]],["roformer",["RoFormerForTokenClassification",ut]],["electra",["ElectraForTokenClassification",Qr]],["esm",["EsmForTokenClassification",Zs]],["convbert",["ConvBertForTokenClassification",$s]],["camembert",["CamembertForTokenClassification",sr]],["deberta",["DebertaForTokenClassification",u]],["deberta-v2",["DebertaV2ForTokenClassification",je]],["mpnet",["MPNetForTokenClassification",Qs]],["distilbert",["DistilBertForTokenClassification",mt]],["roberta",["RobertaForTokenClassification",cr]],["xlm",["XLMForTokenClassification",Zt]],["xlm-roberta",["XLMRobertaForTokenClassification",Ga]]]),Do=new Map([["t5",["T5ForConditionalGeneration",ae]],["longt5",["LongT5ForConditionalGeneration",Ke]],["mt5",["MT5ForConditionalGeneration",Rt]],["bart",["BartForConditionalGeneration",ws]],["mbart",["MBartForConditionalGeneration",as]],["marian",["MarianMTModel",Gu]],["m2m_100",["M2M100ForConditionalGeneration",ca]],["blenderbot",["BlenderbotForConditionalGeneration",Br]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Or]]]),Ca=new Map([["bloom",["BloomForCausalLM",Hl]],["gpt2",["GPT2LMHeadModel",ml]],["jais",["JAISLMHeadModel",_l]],["gptj",["GPTJForCausalLM",bl]],["gpt_bigcode",["GPTBigCodeForCausalLM",Tl]],["gpt_neo",["GPTNeoForCausalLM",gl]],["gpt_neox",["GPTNeoXForCausalLM",yl]],["codegen",["CodeGenForCausalLM",xl]],["llama",["LlamaForCausalLM",qd]],["exaone",["ExaoneForCausalLM",fi]],["olmo",["OlmoForCausalLM",$l]],["olmo2",["Olmo2ForCausalLM",Qd]],["mobilellm",["MobileLLMForCausalLM",Sl]],["granite",["GraniteForCausalLM",Al]],["cohere",["CohereForCausalLM",Fl]],["gemma",["GemmaForCausalLM",Ll]],["gemma2",["Gemma2ForCausalLM",Bl]],["helium",["HeliumForCausalLM",El]],["glm",["GlmForCausalLM",Kn]],["openelm",["OpenELMForCausalLM",jl]],["qwen2",["Qwen2ForCausalLM",Nl]],["phi",["PhiForCausalLM",Wl]],["phi3",["Phi3ForCausalLM",Kl]],["mpt",["MptForCausalLM",Xl]],["opt",["OPTForCausalLM",Jl]],["mbart",["MBartForCausalLM",Ur]],["mistral",["MistralForCausalLM",_c]],["starcoder2",["Starcoder2ForCausalLM",wc]],["falcon",["FalconForCausalLM",Mc]],["trocr",["TrOCRForCausalLM",mc]],["stablelm",["StableLmForCausalLM",Pc]],["phi3_v",["Phi3VForCausalLM",Jr]]]),Th=new Map([["multi_modality",["MultiModalityCausalLM",zc]]]),ka=new Map([["bert",["BertForMaskedLM",it]],["modernbert",["ModernBertForMaskedLM",At]],["roformer",["RoFormerForMaskedLM",We]],["electra",["ElectraForMaskedLM",zr]],["esm",["EsmForMaskedLM",ps]],["convbert",["ConvBertForMaskedLM",Ht]],["camembert",["CamembertForMaskedLM",xn]],["deberta",["DebertaForMaskedLM",l]],["deberta-v2",["DebertaV2ForMaskedLM",X]],["mpnet",["MPNetForMaskedLM",Hs]],["albert",["AlbertForMaskedLM",cs]],["distilbert",["DistilBertForMaskedLM",Ce]],["roberta",["RobertaForMaskedLM",tn]],["xlm",["XLMWithLMHeadModel",dr]],["xlm-roberta",["XLMRobertaForMaskedLM",Wa]],["mobilebert",["MobileBertForMaskedLM",qs]],["squeezebert",["SqueezeBertForMaskedLM",or]]]),Sa=new Map([["bert",["BertForQuestionAnswering",st]],["roformer",["RoFormerForQuestionAnswering",Et]],["electra",["ElectraForQuestionAnswering",_r]],["convbert",["ConvBertForQuestionAnswering",zs]],["camembert",["CamembertForQuestionAnswering",Xr]],["deberta",["DebertaForQuestionAnswering",_]],["deberta-v2",["DebertaV2ForQuestionAnswering",be]],["mpnet",["MPNetForQuestionAnswering",Ys]],["albert",["AlbertForQuestionAnswering",Er]],["distilbert",["DistilBertForQuestionAnswering",bt]],["roberta",["RobertaForQuestionAnswering",Ut]],["xlm",["XLMForQuestionAnswering",En]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Ka]],["mobilebert",["MobileBertForQuestionAnswering",Mt]],["squeezebert",["SqueezeBertForQuestionAnswering",Vr]]]),$a=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Jo]],["idefics3",["Idefics3ForConditionalGeneration",Zo]]]),xh=new Map([["llava",["LlavaForConditionalGeneration",ho]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Ya]],["moondream1",["Moondream1ForConditionalGeneration",Ja]],["florence2",["Florence2ForConditionalGeneration",el]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Vl]],["idefics3",["Idefics3ForConditionalGeneration",Zo]],["paligemma",["PaliGemmaForConditionalGeneration",sl]]]),qc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Jo]]]),Hc=new Map([["vit",["ViTForImageClassification",$i]],["ijepa",["IJepaForImageClassification",tu]],["pvt",["PvtForImageClassification",Ai]],["vit_msn",["ViTMSNForImageClassification",au]],["fastvit",["FastViTForImageClassification",cu]],["mobilevit",["MobileViTForImageClassification",mu]],["mobilevitv2",["MobileViTV2ForImageClassification",Yd]],["beit",["BeitForImageClassification",kn]],["deit",["DeiTForImageClassification",Gi]],["hiera",["HieraForImageClassification",qi]],["convnext",["ConvNextForImageClassification",ra]],["convnextv2",["ConvNextV2ForImageClassification",oa]],["dinov2",["Dinov2ForImageClassification",rh]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Ru]],["resnet",["ResNetForImageClassification",Zd]],["swin",["SwinForImageClassification",Qn]],["segformer",["SegformerForImageClassification",Tc]],["efficientnet",["EfficientNetForImageClassification",kc]],["mobilenet_v1",["MobileNetV1ForImageClassification",Ma]],["mobilenet_v2",["MobileNetV2ForImageClassification",$c]],["mobilenet_v3",["MobileNetV3ForImageClassification",Oc]],["mobilenet_v4",["MobileNetV4ForImageClassification",Fc]]]),Qc=new Map([["detr",["DetrForObjectDetection",Sn]],["rt_detr",["RTDetrForObjectDetection",Hn]],["table-transformer",["TableTransformerForObjectDetection",vu]],["yolos",["YolosForObjectDetection",Vu]]]),Ia=new Map([["owlvit",["OwlViTForObjectDetection",gu]],["owlv2",["Owlv2ForObjectDetection",yu]],["grounding-dino",["GroundingDinoForObjectDetection",ju]]]),Xc=new Map([["detr",["DetrForSegmentation",kr]],["clipseg",["CLIPSegForImageSegmentation",hl]]]),Yc=new Map([["segformer",["SegformerForSemanticSegmentation",xc]],["sapiens",["SapiensForSemanticSegmentation",Su]]]),Jc=new Map([["detr",["DetrForSegmentation",kr]],["maskformer",["MaskFormerForInstanceSegmentation",Au]]]),Zc=new Map([["sam",["SamModel",Co]]]),Eh=new Map([["wav2vec2",["Wav2Vec2ForCTC",Hu]],["wav2vec2-bert",["Wav2Vec2BertForCTC",ch]],["unispeech",["UniSpeechForCTC",lh]],["unispeech-sat",["UniSpeechSatForCTC",sc]],["wavlm",["WavLMForCTC",uc]],["hubert",["HubertForCTC",ac]]]),ed=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",ih]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",oc]],["unispeech",["UniSpeechForSequenceClassification",ec]],["unispeech-sat",["UniSpeechSatForSequenceClassification",uh]],["wavlm",["WavLMForSequenceClassification",cc]],["hubert",["HubertForSequenceClassification",hh]],["audio-spectrogram-transformer",["ASTForAudioClassification",Qo]]]),td=new Map([["wavlm",["WavLMForXVector",ph]]]),sd=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",rc]],["wavlm",["WavLMForAudioFrameClassification",dc]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Qu]],["pyannote",["PyAnnoteForAudioFrameClassification",Yu]]]),rd=new Map([["vitmatte",["VitMatteForImageMatting",hu]]]),Jh=new Map([["patchtst",["PatchTSTForPrediction",Uc]],["patchtsmixer",["PatchTSMixerForPrediction",Gc]]]),nd=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Eu]]]),od=new Map([["dpt",["DPTForDepthEstimation",eh]],["depth_anything",["DepthAnythingForDepthEstimation",ku]],["glpn",["GLPNForDepthEstimation",Ou]],["sapiens",["SapiensForDepthEstimation",To]],["depth_pro",["DepthProForDepthEstimation",ta]]]),id=new Map([["sapiens",["SapiensForNormalEstimation",$u]]]),Ph=new Map([["vitpose",["VitPoseForPoseEstimation",ru]]]),ad=new Map([["clip",["CLIPVisionModelWithProjection",al]],["siglip",["SiglipVisionModel",cl]],["jina_clip",["JinaCLIPVisionModel",rn]]]),ld=[[Mh,R.EncoderOnly],[bh,R.EncoderDecoder],[vh,R.DecoderOnly],[Ea,R.EncoderOnly],[Pa,R.EncoderOnly],[Do,R.Seq2Seq],[Kc,R.Seq2Seq],[Ca,R.DecoderOnly],[Th,R.MultiModality],[ka,R.EncoderOnly],[Sa,R.EncoderOnly],[$a,R.Vision2Seq],[xh,R.ImageTextToText],[Hc,R.EncoderOnly],[Xc,R.EncoderOnly],[Jc,R.EncoderOnly],[Yc,R.EncoderOnly],[rd,R.EncoderOnly],[Jh,R.EncoderOnly],[nd,R.EncoderOnly],[od,R.EncoderOnly],[id,R.EncoderOnly],[Ph,R.EncoderOnly],[Qc,R.EncoderOnly],[Ia,R.EncoderOnly],[Zc,R.MaskGeneration],[Eh,R.EncoderOnly],[ed,R.EncoderOnly],[Jn,R.Seq2Seq],[xa,R.EncoderOnly],[td,R.EncoderOnly],[sd,R.EncoderOnly],[ad,R.EncoderOnly]];for(const[b,$]of ld)for(const[J,Se]of b.values())L.set(J,$),S.set(Se,J),T.set(J,Se);const Ch=[["MusicgenForConditionalGeneration",Fo,R.Musicgen],["Phi3VForCausalLM",Jr,R.Phi3V],["CLIPTextModelWithProjection",il,R.EncoderOnly],["SiglipTextModel",ul,R.EncoderOnly],["JinaCLIPTextModel",ti,R.EncoderOnly],["ClapTextModelWithProjection",bc,R.EncoderOnly],["ClapAudioModelWithProjection",vc,R.EncoderOnly]];for(const[b,$,J]of Ch)L.set(b,J),S.set($,b),T.set(b,$);class Aa extends Xs{}ke(Aa,"MODEL_CLASS_MAPPINGS",ld.map($=>$[0])),ke(Aa,"BASE_IF_FAIL",!0);class kh extends Xs{}ke(kh,"MODEL_CLASS_MAPPINGS",[Ea]);class ud extends Xs{}ke(ud,"MODEL_CLASS_MAPPINGS",[Pa]);class cd extends Xs{}ke(cd,"MODEL_CLASS_MAPPINGS",[Do]);class dd extends Xs{}ke(dd,"MODEL_CLASS_MAPPINGS",[Kc]);class Oa extends Xs{}ke(Oa,"MODEL_CLASS_MAPPINGS",[Jn]);class hd extends Xs{}ke(hd,"MODEL_CLASS_MAPPINGS",[xa]);class pd extends Xs{}ke(pd,"MODEL_CLASS_MAPPINGS",[Ca]);class md extends Xs{}ke(md,"MODEL_CLASS_MAPPINGS",[ka]);class fd extends Xs{}ke(fd,"MODEL_CLASS_MAPPINGS",[Sa]);class _d extends Xs{}ke(_d,"MODEL_CLASS_MAPPINGS",[$a]);class gd extends Xs{}ke(gd,"MODEL_CLASS_MAPPINGS",[Hc]);class wd extends Xs{}ke(wd,"MODEL_CLASS_MAPPINGS",[Xc]);class yd extends Xs{}ke(yd,"MODEL_CLASS_MAPPINGS",[Yc]);class Fa extends Xs{}ke(Fa,"MODEL_CLASS_MAPPINGS",[Jc]);class Md extends Xs{}ke(Md,"MODEL_CLASS_MAPPINGS",[Qc]);class bd extends Xs{}ke(bd,"MODEL_CLASS_MAPPINGS",[Ia]);class vd extends Xs{}ke(vd,"MODEL_CLASS_MAPPINGS",[Zc]);class Td extends Xs{}ke(Td,"MODEL_CLASS_MAPPINGS",[Eh]);class xd extends Xs{}ke(xd,"MODEL_CLASS_MAPPINGS",[ed]);class Ed extends Xs{}ke(Ed,"MODEL_CLASS_MAPPINGS",[td]);class Pd extends Xs{}ke(Pd,"MODEL_CLASS_MAPPINGS",[sd]);class Sh extends Xs{}ke(Sh,"MODEL_CLASS_MAPPINGS",[qc]);class Cd extends Xs{}ke(Cd,"MODEL_CLASS_MAPPINGS",[rd]);class kd extends Xs{}ke(kd,"MODEL_CLASS_MAPPINGS",[nd]);class Sd extends Xs{}ke(Sd,"MODEL_CLASS_MAPPINGS",[od]);class $h extends Xs{}ke($h,"MODEL_CLASS_MAPPINGS",[id]);class $d extends Xs{}ke($d,"MODEL_CLASS_MAPPINGS",[Ph]);class Id extends Xs{}ke(Id,"MODEL_CLASS_MAPPINGS",[ad]);class Ih extends rt{constructor({logits:$,past_key_values:J,encoder_outputs:Se,decoder_attentions:Xe=null,cross_attentions:Ye=null}){super(),this.logits=$,this.past_key_values=J,this.encoder_outputs=Se,this.decoder_attentions=Xe,this.cross_attentions=Ye}}class Es extends rt{constructor({logits:$,...J}){super(),this.logits=$;const Se=Object.values(J);Se.length>0&&(this.attentions=Se)}}class Ad extends rt{constructor({logits:$,embeddings:J}){super(),this.logits=$,this.embeddings=J}}class wr extends rt{constructor({logits:$}){super(),this.logits=$}}class Fr extends rt{constructor({logits:$}){super(),this.logits=$}}class Rr extends rt{constructor({start_logits:$,end_logits:J}){super(),this.start_logits=$,this.end_logits=J}}class On extends rt{constructor({logits:$}){super(),this.logits=$}}class Ah extends rt{constructor({logits:$,past_key_values:J}){super(),this.logits=$,this.past_key_values=J}}class Od extends rt{constructor({alphas:$}){super(),this.alphas=$}}class Fd extends rt{constructor({waveform:$,spectrogram:J}){super(),this.waveform=$,this.spectrogram=J}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(Le,P,r)=>{r.r(P),r.d(P,{ASTFeatureExtractor:()=>V});var y=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var z=r("./src/utils/audio.js");class V extends y.FeatureExtractor{constructor(K){super(K);const v=this.config.sampling_rate,k=(0,z.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(v/2),v,null,"kaldi",!0);for(let x=0;x<k.length;++x)k[x].push(0);this.mel_filters=k,this.window=(0,z.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(K,v){return(0,z.spectrogram)(K,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:v,transpose:!0})}async _call(K){(0,y.validate_audio_inputs)(K,"ASTFeatureExtractor");const v=await this._extract_fbank_features(K,this.config.max_length);if(this.config.do_normalize){const k=this.std*2,x=v.data;for(let E=0;E<x.length;++E)x[E]=(x[E]-this.mean)/k}return{input_values:v.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(Le,P,r)=>{r.r(P),r.d(P,{AutoFeatureExtractor:()=>se});var y=r("./src/utils/constants.js"),z=r("./src/utils/hub.js");r("./src/base/feature_extraction_utils.js");var V=r("./src/models/feature_extractors.js");class se{static async from_pretrained(v,k={}){const x=await(0,z.getModelJSON)(v,y.FEATURE_EXTRACTOR_NAME,!0,k),E=x.feature_extractor_type,C=V[E];if(!C)throw new Error(`Unknown feature_extractor_type: '${E}'. Please report this at ${y.GITHUB_ISSUE_URL}.`);return new C(x)}}},"./src/models/auto/image_processing_auto.js":(Le,P,r)=>{r.r(P),r.d(P,{AutoImageProcessor:()=>K});var y=r("./src/utils/constants.js"),z=r("./src/utils/hub.js"),V=r("./src/base/image_processors_utils.js"),se=r("./src/models/image_processors.js");class K{static async from_pretrained(k,x={}){const E=await(0,z.getModelJSON)(k,y.IMAGE_PROCESSOR_NAME,!0,x),C=E.image_processor_type??E.feature_extractor_type;let j=se[C];return j||(C!==void 0&&console.warn(`Image processor type '${C}' not found, assuming base ImageProcessor. Please report this at ${y.GITHUB_ISSUE_URL}.`),j=V.ImageProcessor),new j(E)}}},"./src/models/auto/processing_auto.js":(Le,P,r)=>{r.r(P),r.d(P,{AutoProcessor:()=>k});var y=r("./src/utils/constants.js"),z=r("./src/utils/hub.js"),V=r("./src/base/processing_utils.js"),se=r("./src/models/processors.js"),K=r("./src/models/image_processors.js"),v=r("./src/models/feature_extractors.js");class k{static async from_pretrained(E,C={}){const j=await(0,z.getModelJSON)(E,y.IMAGE_PROCESSOR_NAME,!0,C),{image_processor_type:re,feature_extractor_type:ce,processor_class:me}=j;if(me&&se[me])return se[me].from_pretrained(E,C);if(!re&&!ce)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const Y={};if(re){const ne=K[re];if(!ne)throw new Error(`Unknown image_processor_type: '${re}'.`);Y.image_processor=new ne(j)}if(ce){const ne=K[ce];if(ne)Y.image_processor=new ne(j);else{const R=v[ce];if(!R)throw new Error(`Unknown feature_extractor_type: '${ce}'.`);Y.feature_extractor=new R(j)}}const q={};return new V.Processor(q,Y)}}},"./src/models/beit/image_processing_beit.js":(Le,P,r)=>{r.r(P),r.d(P,{BeitFeatureExtractor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(Le,P,r)=>{r.r(P),r.d(P,{BitImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(Le,P,r)=>{r.r(P),r.d(P,{ChineseCLIPFeatureExtractor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(Le,P,r)=>{r.r(P),r.d(P,{ClapFeatureExtractor:()=>V});var y=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var z=r("./src/utils/audio.js");class V extends y.FeatureExtractor{constructor(K){super(K),this.mel_filters=(0,z.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,z.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,z.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(K,v,k,x){let E;const C=K.length-v;if(C>0)if(k==="rand_trunc"){const j=Math.floor(Math.random()*(C+1));K=K.subarray(j,j+v),E=await this._extract_fbank_features(K,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${k}" not implemented`);else{if(C<0){let j=new Float64Array(v);if(j.set(K),x==="repeat")for(let re=K.length;re<v;re+=K.length)j.set(K.subarray(0,Math.min(K.length,v-re)),re);else if(x==="repeatpad")for(let re=K.length;re<-C;re+=K.length)j.set(K,re);K=j}if(k==="fusion")throw new Error(`Truncation strategy "${k}" not implemented`);E=await this._extract_fbank_features(K,this.mel_filters_slaney,this.config.nb_max_samples)}return E.unsqueeze_(0)}async _extract_fbank_features(K,v,k=null){return(0,z.spectrogram)(K,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:v,log_mel:"dB",max_num_frames:k,do_pad:!1,transpose:!0})}async _call(K,{max_length:v=null}={}){return(0,y.validate_audio_inputs)(K,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(K,v??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(Le,P,r)=>{r.r(P),r.d(P,{CLIPFeatureExtractor:()=>V,CLIPImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/convnext/image_processing_convnext.js":(Le,P,r)=>{r.r(P),r.d(P,{ConvNextFeatureExtractor:()=>V,ConvNextImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{constructor(K){super(K),this.crop_pct=this.config.crop_pct??.875}async resize(K){var k;const v=(k=this.size)==null?void 0:k.shortest_edge;if(v===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(v<384){const x=Math.floor(v/this.crop_pct),[E,C]=this.get_resize_output_image_size(K,{shortest_edge:x});K=await K.resize(E,C,{resample:this.resample}),K=await K.center_crop(v,v)}else K=await K.resize(v,v,{resample:this.resample});return K}}class V extends z{}},"./src/models/deit/image_processing_deit.js":(Le,P,r)=>{r.r(P),r.d(P,{DeiTFeatureExtractor:()=>V,DeiTImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/detr/image_processing_detr.js":(Le,P,r)=>{r.r(P),r.d(P,{DetrFeatureExtractor:()=>se,DetrImageProcessor:()=>V});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/tensor.js");class V extends y.ImageProcessor{async _call(v){const k=await super._call(v),x=[k.pixel_values.dims[0],64,64],E=(0,z.full)(x,1n);return{...k,pixel_mask:E}}post_process_object_detection(...v){return(0,y.post_process_object_detection)(...v)}post_process_panoptic_segmentation(...v){return(0,y.post_process_panoptic_segmentation)(...v)}post_process_instance_segmentation(...v){return(0,y.post_process_instance_segmentation)(...v)}}class se extends V{}},"./src/models/donut/image_processing_donut.js":(Le,P,r)=>{r.r(P),r.d(P,{DonutFeatureExtractor:()=>V,DonutImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{pad_image(K,v,k,x={}){const[E,C,j]=v;let re=this.image_mean;Array.isArray(this.image_mean)||(re=new Array(j).fill(re));let ce=this.image_std;Array.isArray(ce)||(ce=new Array(j).fill(re));const me=re.map((Y,q)=>-Y/ce[q]);return super.pad_image(K,v,k,{center:!0,constant_values:me,...x})}}class V extends z{}},"./src/models/dpt/image_processing_dpt.js":(Le,P,r)=>{r.r(P),r.d(P,{DPTFeatureExtractor:()=>V,DPTImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/efficientnet/image_processing_efficientnet.js":(Le,P,r)=>{r.r(P),r.d(P,{EfficientNetImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{constructor(se){super(se),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(K=>K*K))}}},"./src/models/feature_extractors.js":(Le,P,r)=>{r.r(P),r.d(P,{ASTFeatureExtractor:()=>y.ASTFeatureExtractor,ClapFeatureExtractor:()=>z.ClapFeatureExtractor,ImageFeatureExtractor:()=>C.ImageProcessor,MoonshineFeatureExtractor:()=>V.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>se.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>K.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>v.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>k.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>x.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>E.WhisperFeatureExtractor});var y=r("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),z=r("./src/models/clap/feature_extraction_clap.js"),V=r("./src/models/moonshine/feature_extraction_moonshine.js"),se=r("./src/models/pyannote/feature_extraction_pyannote.js"),K=r("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),v=r("./src/models/speecht5/feature_extraction_speecht5.js"),k=r("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),x=r("./src/models/wespeaker/feature_extraction_wespeaker.js"),E=r("./src/models/whisper/feature_extraction_whisper.js"),C=r("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(Le,P,r)=>{r.r(P),r.d(P,{Florence2Processor:()=>se});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");class se extends y.Processor{constructor(v,k){super(v,k);const{tasks_answer_post_processing_type:x,task_prompts_without_inputs:E,task_prompts_with_input:C}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(x??{})),this.task_prompts_without_inputs=new Map(Object.entries(E??{})),this.task_prompts_with_input=new Map(Object.entries(C??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(v){typeof v=="string"&&(v=[v]);const k=[];for(const x of v)if(this.task_prompts_without_inputs.has(x))k.push(this.task_prompts_without_inputs.get(x));else{for(const[E,C]of this.task_prompts_with_input)if(x.includes(E)){k.push(C.replaceAll("{input}",x).replaceAll(E,""));break}k.length!==v.length&&k.push(x)}return k}post_process_generation(v,k,x){const E=this.tasks_answer_post_processing_type.get(k)??"pure_text";v=v.replaceAll("<s>","").replaceAll("</s>","");let C;switch(E){case"pure_text":C=v;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const j=E==="ocr"?"quad_boxes":"bboxes",re=v.matchAll(this.regexes[j]),ce=[],me=[];for(const[Y,q,...ne]of re)ce.push(q?q.trim():ce.at(-1)??""),me.push(ne.map((R,L)=>(Number(R)+.5)/this.size_per_bin*x[L%2]));C={labels:ce,[j]:me};break;default:throw new Error(`Task "${k}" (of type "${E}") not yet implemented.`)}return{[k]:C}}async _call(v,k=null,x={}){if(!v&&!k)throw new Error("Either text or images must be provided");const E=await this.image_processor(v,x),C=k?this.tokenizer(k,x):{};return{...E,...C}}}ke(se,"tokenizer_class",V.AutoTokenizer),ke(se,"image_processor_class",z.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(Le,P,r)=>{r.r(P),r.d(P,{GLPNFeatureExtractor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(Le,P,r)=>{r.r(P),r.d(P,{GroundingDinoImageProcessor:()=>V});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/tensor.js");class V extends y.ImageProcessor{async _call(K){const v=await super._call(K),k=v.pixel_values.dims,x=(0,z.ones)([k[0],k[2],k[3]]);return{...v,pixel_mask:x}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(Le,P,r)=>{r.r(P),r.d(P,{GroundingDinoProcessor:()=>v});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js"),se=r("./src/base/image_processors_utils.js");function K(k,x){const C=k.dims.at(-1)-1,j=k.tolist();j.fill(!1,0,1),j.fill(!1,C);const re=x.tolist();return j.map((ce,me)=>ce?me:null).filter(ce=>ce!==null).map(ce=>re[ce])}class v extends y.Processor{async _call(x,E,C={}){const j=x?await this.image_processor(x,C):{};return{...E?this.tokenizer(E,C):{},...j}}post_process_grounded_object_detection(x,E,{box_threshold:C=.25,text_threshold:j=.25,target_sizes:re=null}={}){const{logits:ce,pred_boxes:me}=x,Y=ce.dims[0];if(re!==null&&re.length!==Y)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const q=ce.dims.at(1),ne=ce.sigmoid(),R=ne.max(-1).tolist(),L=me.tolist().map(S=>S.map(U=>(0,se.center_to_corners_format)(U))),T=[];for(let S=0;S<Y;++S){const U=re!==null?re[S]:null;U!==null&&(L[S]=L[S].map(fe=>fe.map((Be,ve)=>Be*U[(ve+1)%2])));const ge=R[S],_e=[],ze=[],Ie=[];for(let fe=0;fe<q;++fe){const Be=ge[fe];if(Be<=C)continue;const ve=L[S][fe],Ge=ne[S][fe];_e.push(Be),Ie.push(ve);const He=K(Ge.gt(j),E[S]);ze.push(He)}T.push({scores:_e,boxes:Ie,labels:this.batch_decode(ze)})}return T}}ke(v,"tokenizer_class",V.AutoTokenizer),ke(v,"image_processor_class",z.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(Le,P,r)=>{r.r(P),r.d(P,{Idefics3ImageProcessor:()=>V});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/tensor.js");class V extends y.ImageProcessor{constructor(K){super(K),this.do_image_splitting=K.do_image_splitting??!0,this.max_image_size=K.max_image_size}get_resize_for_vision_encoder(K,v){let[k,x]=K.dims.slice(-2);const E=x/k;return x>=k?(x=Math.ceil(x/v)*v,k=Math.floor(x/E),k=Math.ceil(k/v)*v):(k=Math.ceil(k/v)*v,x=Math.floor(k*E),x=Math.ceil(x/v)*v),{height:k,width:x}}async _call(K,{do_image_splitting:v=null,return_row_col_info:k=!1}={}){let x;if(!Array.isArray(K))x=[[K]];else{if(K.length===0||!K[0])throw new Error("No images provided.");Array.isArray(K[0])?x=K:x=[K]}let E=[],C=[],j=[];const re=[],ce=[];for(const S of x){let U=await Promise.all(S.map(ze=>this.preprocess(ze)));re.push(...U.map(ze=>ze.original_size)),ce.push(...U.map(ze=>ze.reshaped_input_size)),U.forEach(ze=>ze.pixel_values.unsqueeze_(0));const{longest_edge:ge}=this.max_image_size;let _e;if(v??this.do_image_splitting){let ze=new Array(U.length),Ie=new Array(U.length);_e=await Promise.all(U.map(async(fe,Be)=>{const ve=this.get_resize_for_vision_encoder(fe.pixel_values,ge),Ge=await(0,z.interpolate_4d)(fe.pixel_values,{size:[ve.height,ve.width]}),{frames:He,num_splits_h:Ve,num_splits_w:wt}=await this.split_image(Ge,this.max_image_size);return ze[Be]=Ve,Ie[Be]=wt,(0,z.cat)(He,0)})),C.push(ze),j.push(Ie)}else{const ze=[ge,ge];_e=await Promise.all(U.map(Ie=>(0,z.interpolate_4d)(Ie.pixel_values,{size:ze}))),C.push(new Array(U.length).fill(0)),j.push(new Array(U.length).fill(0))}E.push((0,z.cat)(_e,0))}const me=E.length,[Y,q,ne,R]=E[0].dims;let L,T;if(me===1)L=E[0].unsqueeze_(0),T=(0,z.full)([me,Y,ne,R],!0);else{const S=Math.max(...E.map(_e=>_e.dims.at(0)));T=(0,z.full)([me,S,ne,R],!0);const U=T.data,ge=S*ne*R;for(let _e=0;_e<me;++_e){const ze=E[_e].dims[0];if(ze<S){E[_e]=(0,z.cat)([E[_e],(0,z.full)([S-ze,q,ne,R],0)],0);const Ie=_e*ge+ze*ne*R,fe=(_e+1)*ge;U.fill(!1,Ie,fe)}}L=(0,z.stack)(E,0)}return{pixel_values:L,pixel_attention_mask:T,original_sizes:re,reshaped_input_sizes:ce,...k?{rows:C,cols:j}:{}}}async split_image(K,{longest_edge:v}){const k=v,x=v,E=[],[C,j]=K.dims.slice(-2);let re=0,ce=0;if(C>k||j>x){re=Math.ceil(C/k),ce=Math.ceil(j/x);const me=Math.ceil(C/re),Y=Math.ceil(j/ce);for(let R=0;R<re;++R)for(let L=0;L<ce;++L){let T,S,U,ge;R===re-1?(S=C-me,ge=C):(S=R*me,ge=(R+1)*me),L===ce-1?(T=j-Y,U=j):(T=L*Y,U=(L+1)*Y);const _e=[S,T],ze=[ge,U],Ie=await(0,z.slice)(K,_e,ze,[2,3]);E.push(Ie)}const q=k,ne=x;(C!==q||j!==ne)&&(K=await(0,z.interpolate_4d)(K,{size:[q,ne]}))}return E.push(K),{frames:E,num_splits_h:re,num_splits_w:ce}}}},"./src/models/idefics3/processing_idefics3.js":(Le,P,r)=>{r.r(P),r.d(P,{Idefics3Processor:()=>x});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");r("./src/utils/image.js");var se=r("./src/utils/core.js");function K(E,C,j,re,ce,me){let Y="";for(let q=0;q<C;++q){for(let ne=0;ne<j;++ne)Y+=re+`<row_${q+1}_col_${ne+1}>`+ce.repeat(E);Y+=`
`}return Y+=`
${re}${me}`+ce.repeat(E)+`${re}`,Y}function v(E,C,j,re){return`${C}${re}`+j.repeat(E)+`${C}`}function k(E,C,j,re,ce,me){return E===0&&C===0?v(j,re,ce,me):K(j,E,C,re,ce,me)}class x extends y.Processor{constructor(){super(...arguments);ke(this,"fake_image_token","<fake_token_around_image>");ke(this,"image_token","<image>");ke(this,"global_img_token","<global-img>")}async _call(j,re=null,ce={}){ce.return_row_col_info??(ce.return_row_col_info=!0);let me;re&&(me=await this.image_processor(re,ce)),Array.isArray(j)||(j=[j]);const Y=me.rows??[new Array(j.length).fill(0)],q=me.cols??[new Array(j.length).fill(0)],ne=this.config.image_seq_len,R=[],L=[];for(let S=0;S<j.length;++S){const U=j[S],ge=Y[S],_e=q[S];R.push((0,se.count)(U,this.image_token));const ze=ge.map((Be,ve)=>k(Be,_e[ve],ne,this.fake_image_token,this.image_token,this.global_img_token)),Ie=U.split(this.image_token);if(Ie.length===0)throw new Error("The image token should be present in the text.");let fe=Ie[0];for(let Be=0;Be<ze.length;++Be)fe+=ze[Be]+Ie[Be+1];L.push(fe)}return{...this.tokenizer(L),...me}}}ke(x,"image_processor_class",z.AutoImageProcessor),ke(x,"tokenizer_class",V.AutoTokenizer),ke(x,"uses_processor_config",!0)},"./src/models/image_processors.js":(Le,P,r)=>{r.r(P),r.d(P,{BeitFeatureExtractor:()=>y.BeitFeatureExtractor,BitImageProcessor:()=>z.BitImageProcessor,CLIPFeatureExtractor:()=>se.CLIPFeatureExtractor,CLIPImageProcessor:()=>se.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>V.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>K.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>K.ConvNextImageProcessor,DPTFeatureExtractor:()=>E.DPTFeatureExtractor,DPTImageProcessor:()=>E.DPTImageProcessor,DeiTFeatureExtractor:()=>v.DeiTFeatureExtractor,DeiTImageProcessor:()=>v.DeiTImageProcessor,DetrFeatureExtractor:()=>k.DetrFeatureExtractor,DetrImageProcessor:()=>k.DetrImageProcessor,DonutFeatureExtractor:()=>x.DonutFeatureExtractor,DonutImageProcessor:()=>x.DonutImageProcessor,EfficientNetImageProcessor:()=>C.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>j.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>re.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>ce.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>Y.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>q.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>ne.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>R.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>R.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>L.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>L.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>T.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>T.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>S.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>S.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>U.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>U.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>ge.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>ge.MobileViTImageProcessor,NougatImageProcessor:()=>_e.NougatImageProcessor,OwlViTFeatureExtractor:()=>Ie.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Ie.OwlViTImageProcessor,Owlv2ImageProcessor:()=>ze.Owlv2ImageProcessor,Phi3VImageProcessor:()=>fe.Phi3VImageProcessor,PvtImageProcessor:()=>Be.PvtImageProcessor,Qwen2VLImageProcessor:()=>ve.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Ge.RTDetrImageProcessor,SamImageProcessor:()=>He.SamImageProcessor,SegformerFeatureExtractor:()=>Ve.SegformerFeatureExtractor,SegformerImageProcessor:()=>Ve.SegformerImageProcessor,SiglipImageProcessor:()=>wt.SiglipImageProcessor,Swin2SRImageProcessor:()=>lt.Swin2SRImageProcessor,VLMImageProcessor:()=>me.VLMImageProcessor,ViTFeatureExtractor:()=>Ae.ViTFeatureExtractor,ViTImageProcessor:()=>Ae.ViTImageProcessor,VitMatteImageProcessor:()=>ee.VitMatteImageProcessor,VitPoseImageProcessor:()=>Me.VitPoseImageProcessor,YolosFeatureExtractor:()=>Ue.YolosFeatureExtractor,YolosImageProcessor:()=>Ue.YolosImageProcessor});var y=r("./src/models/beit/image_processing_beit.js"),z=r("./src/models/bit/image_processing_bit.js"),V=r("./src/models/chinese_clip/image_processing_chinese_clip.js"),se=r("./src/models/clip/image_processing_clip.js"),K=r("./src/models/convnext/image_processing_convnext.js"),v=r("./src/models/deit/image_processing_deit.js"),k=r("./src/models/detr/image_processing_detr.js"),x=r("./src/models/donut/image_processing_donut.js"),E=r("./src/models/dpt/image_processing_dpt.js"),C=r("./src/models/efficientnet/image_processing_efficientnet.js"),j=r("./src/models/glpn/image_processing_glpn.js"),re=r("./src/models/grounding_dino/image_processing_grounding_dino.js"),ce=r("./src/models/idefics3/image_processing_idefics3.js"),me=r("./src/models/janus/image_processing_janus.js"),Y=r("./src/models/jina_clip/image_processing_jina_clip.js"),q=r("./src/models/llava_onevision/image_processing_llava_onevision.js"),ne=r("./src/models/mask2former/image_processing_mask2former.js"),R=r("./src/models/maskformer/image_processing_maskformer.js"),L=r("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),T=r("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),S=r("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),U=r("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),ge=r("./src/models/mobilevit/image_processing_mobilevit.js"),_e=r("./src/models/nougat/image_processing_nougat.js"),ze=r("./src/models/owlv2/image_processing_owlv2.js"),Ie=r("./src/models/owlvit/image_processing_owlvit.js"),fe=r("./src/models/phi3_v/image_processing_phi3_v.js"),Be=r("./src/models/pvt/image_processing_pvt.js"),ve=r("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Ge=r("./src/models/rt_detr/image_processing_rt_detr.js"),He=r("./src/models/sam/image_processing_sam.js"),Ve=r("./src/models/segformer/image_processing_segformer.js"),wt=r("./src/models/siglip/image_processing_siglip.js"),lt=r("./src/models/swin2sr/image_processing_swin2sr.js"),Ae=r("./src/models/vit/image_processing_vit.js"),ee=r("./src/models/vitmatte/image_processing_vitmatte.js"),Me=r("./src/models/vitpose/image_processing_vitpose.js"),Ue=r("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(Le,P,r)=>{r.r(P),r.d(P,{VLMImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{constructor(se){super({do_pad:!0,pad_size:{width:se.image_size,height:se.image_size},...se}),this.constant_values=this.config.background_color.map(K=>K*this.rescale_factor)}pad_image(se,K,v,k){return super.pad_image(se,K,v,{constant_values:this.constant_values,center:!0,...k})}}},"./src/models/janus/processing_janus.js":(Le,P,r)=>{r.r(P),r.d(P,{VLChatProcessor:()=>k});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js"),se=r("./src/utils/core.js"),K=r("./src/utils/tensor.js"),v=r("./src/utils/image.js");class k extends y.Processor{constructor(E,C){super(E,C),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(E,{images:C=null,chat_template:j="default"}={}){C?Array.isArray(C)||(C=[C]):C=await Promise.all(E.filter(_e=>_e.images).flatMap(_e=>_e.images).map(_e=>v.RawImage.read(_e)));const re=this.tokenizer,ce=re.apply_chat_template(E,{tokenize:!1,add_generation_prompt:!0,chat_template:j}),me=_e=>re.encode(_e,{add_special_tokens:!1}),Y=ce.split(this.image_tag),q=Y.length-1;if(C.length!==q)throw new Error(`Number of images provided (${C.length}) does not match number of "${this.image_tag}" image tags (${q})`);const[ne,R,L]=re.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let T=me(Y[0]),S=new Array(T.length).fill(!1);for(let _e=1;_e<Y.length;++_e){const ze=new Array(this.num_image_tokens).fill(ne),Ie=me(Y[_e]);T=(0,se.mergeArrays)(T,[R],ze,[L],Ie);const fe=new Array(this.num_image_tokens).fill(!0);S=(0,se.mergeArrays)(S,[!1],fe,[!1],new Array(Ie.length).fill(!1))}const U=[1,T.length],ge={input_ids:new K.Tensor("int64",T,U),attention_mask:new K.Tensor("int64",new Array(T.length).fill(1),U),images_seq_mask:new K.Tensor("bool",S,U),images_emb_mask:new K.Tensor("bool",new Array(q*this.num_image_tokens).fill(!0),[1,q,this.num_image_tokens])};if(C&&C.length>0){const _e=await this.image_processor(C);return _e.pixel_values.unsqueeze_(0),{...ge,..._e}}return ge}}ke(k,"image_processor_class",z.AutoImageProcessor),ke(k,"tokenizer_class",V.AutoTokenizer),ke(k,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(Le,P,r)=>{r.r(P),r.d(P,{JinaCLIPImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{constructor(se){const{resize_mode:K,fill_color:v,interpolation:k,size:x,...E}=se,C=K==="squash"?{width:x,height:x}:K==="shortest"?{shortest_edge:x}:{longest_edge:x},j=k==="bicubic"?3:2;super({...E,size:C,resample:j,do_center_crop:!0,crop_size:x,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(Le,P,r)=>{r.r(P),r.d(P,{JinaCLIPProcessor:()=>se});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");class se extends y.Processor{async _call(v=null,k=null,x={}){if(!v&&!k)throw new Error("Either text or images must be provided");const E=v?this.tokenizer(v,x):{},C=k?await this.image_processor(k,x):{};return{...E,...C}}}ke(se,"tokenizer_class",V.AutoTokenizer),ke(se,"image_processor_class",z.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(Le,P,r)=>{r.r(P),r.d(P,{LlavaOnevisionImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(Le,P,r)=>{r.r(P),r.d(P,{Mask2FormerImageProcessor:()=>z});var y=r("./src/models/maskformer/image_processing_maskformer.js");class z extends y.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(Le,P,r)=>{r.r(P),r.d(P,{MaskFormerFeatureExtractor:()=>V,MaskFormerImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{post_process_panoptic_segmentation(...K){return(0,y.post_process_panoptic_segmentation)(...K)}post_process_instance_segmentation(...K){return(0,y.post_process_instance_segmentation)(...K)}}class V extends z{}},"./src/models/mgp_str/processing_mgp_str.js":(Le,P,r)=>{r.r(P),r.d(P,{MgpstrProcessor:()=>v});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js"),se=r("./src/utils/maths.js");const K={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class v extends y.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(x,E){if(!K.hasOwnProperty(E))throw new Error(`Format ${E} is not supported.`);const[C,j]=K[E],re=this[C].bind(this),[ce,me]=x.dims,Y=[],q=[],ne=x.tolist();for(let L=0;L<ce;++L){const T=ne[L],S=[],U=[];for(let _e=1;_e<me;++_e){const[ze,Ie]=(0,se.max)((0,se.softmax)(T[_e]));if(U.push(ze),Ie==j)break;S.push(Ie)}const ge=U.length>0?U.reduce((_e,ze)=>_e*ze,1):0;q.push(S),Y.push(ge)}return[re(q),Y]}char_decode(x){return this.char_tokenizer.batch_decode(x).map(E=>E.replaceAll(" ",""))}bpe_decode(x){return this.bpe_tokenizer.batch_decode(x)}wp_decode(x){return this.wp_tokenizer.batch_decode(x).map(E=>E.replaceAll(" ",""))}batch_decode([x,E,C]){const[j,re]=this._decode_helper(x,"char"),[ce,me]=this._decode_helper(E,"bpe"),[Y,q]=this._decode_helper(C,"wp"),ne=[],R=[];for(let L=0;L<j.length;++L){const[T,S]=(0,se.max)([re[L],me[L],q[L]]);ne.push([j[L],ce[L],Y[L]][S]),R.push(T)}return{generated_text:ne,scores:R,char_preds:j,bpe_preds:ce,wp_preds:Y}}static async from_pretrained(...x){const E=await super.from_pretrained(...x),C=await V.AutoTokenizer.from_pretrained("Xenova/gpt2"),j=await V.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return E.components={image_processor:E.image_processor,char_tokenizer:E.tokenizer,bpe_tokenizer:C,wp_tokenizer:j},E}async _call(x,E=null){const C=await this.image_processor(x);return E&&(C.labels=this.tokenizer(E).input_ids),C}}ke(v,"tokenizer_class",V.AutoTokenizer),ke(v,"image_processor_class",z.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(Le,P,r)=>{r.r(P),r.d(P,{MobileNetV1FeatureExtractor:()=>V,MobileNetV1ImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(Le,P,r)=>{r.r(P),r.d(P,{MobileNetV2FeatureExtractor:()=>V,MobileNetV2ImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(Le,P,r)=>{r.r(P),r.d(P,{MobileNetV3FeatureExtractor:()=>V,MobileNetV3ImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(Le,P,r)=>{r.r(P),r.d(P,{MobileNetV4FeatureExtractor:()=>V,MobileNetV4ImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/mobilevit/image_processing_mobilevit.js":(Le,P,r)=>{r.r(P),r.d(P,{MobileViTFeatureExtractor:()=>V,MobileViTImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/moonshine/feature_extraction_moonshine.js":(Le,P,r)=>{r.r(P),r.d(P,{MoonshineFeatureExtractor:()=>V});var y=r("./src/base/feature_extraction_utils.js"),z=r("./src/utils/tensor.js");class V extends y.FeatureExtractor{async _call(K){(0,y.validate_audio_inputs)(K,"MoonshineFeatureExtractor"),K instanceof Float64Array&&(K=new Float32Array(K));const v=[1,K.length];return{input_values:new z.Tensor("float32",K,v)}}}},"./src/models/moonshine/processing_moonshine.js":(Le,P,r)=>{r.r(P),r.d(P,{MoonshineProcessor:()=>se});var y=r("./src/models/auto/feature_extraction_auto.js"),z=r("./src/tokenizers.js"),V=r("./src/base/processing_utils.js");class se extends V.Processor{async _call(v){return await this.feature_extractor(v)}}ke(se,"tokenizer_class",z.AutoTokenizer),ke(se,"feature_extractor_class",y.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(Le,P,r)=>{r.r(P),r.d(P,{NougatImageProcessor:()=>z});var y=r("./src/models/donut/image_processing_donut.js");class z extends y.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(Le,P,r)=>{r.r(P),r.d(P,{Owlv2ImageProcessor:()=>z});var y=r("./src/models/owlvit/image_processing_owlvit.js");class z extends y.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(Le,P,r)=>{r.r(P),r.d(P,{OwlViTFeatureExtractor:()=>V,OwlViTImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{post_process_object_detection(...K){return(0,y.post_process_object_detection)(...K)}}class V extends z{}},"./src/models/owlvit/processing_owlvit.js":(Le,P,r)=>{r.r(P),r.d(P,{OwlViTProcessor:()=>se});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");class se extends y.Processor{}ke(se,"tokenizer_class",V.AutoTokenizer),ke(se,"image_processor_class",z.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(Le,P,r)=>{r.r(P),r.d(P,{PaliGemmaProcessor:()=>v});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");const se="<image>";function K(k,x,E,C,j){return`${C.repeat(E*j)}${x}${k}
`}class v extends y.Processor{async _call(x,E=null,C={}){E||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),E=""),Array.isArray(x)||(x=[x]),Array.isArray(E)||(E=[E]);const j=this.tokenizer.bos_token,re=this.image_processor.config.image_seq_length;let ce;E.some(q=>q.includes(se))?ce=E.map(q=>{const ne=q.replaceAll(se,se.repeat(re)),R=ne.lastIndexOf(se),L=R===-1?0:R+se.length;return ne.slice(0,L)+j+ne.slice(L)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),ce=E.map(q=>K(q,j,re,se,x.length)));const me=this.tokenizer(ce,C);return{...await this.image_processor(x,C),...me}}}ke(v,"tokenizer_class",V.AutoTokenizer),ke(v,"image_processor_class",z.AutoImageProcessor),ke(v,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(Le,P,r)=>{r.r(P),r.d(P,{Phi3VImageProcessor:()=>x});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/tensor.js");const V=336,se=[2,3],{ceil:K,floor:v,sqrt:k}=Math;class x extends y.ImageProcessor{constructor(C){super({...C,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=C.num_crops}calc_num_image_tokens_from_image_size(C,j){const{num_img_tokens:re}=this.config;return v((v(j/V)*v(C/V)+1)*re+1+(v(j/V)+1)*k(re))}get_resize_output_image_size(C,j){const re=this._num_crops,[ce,me]=C.size;let Y=ce/me,q=1;for(;q*Math.ceil(q/Y)<=re;)q+=1;q-=1;const ne=Math.floor(q*336),R=Math.floor(ne/Y);return[ne,R]}pad_image(C,j,re,ce={}){const[me,Y]=j,q=V*K(me/V),ne=V*K(Y/V),R=[1,1,1].map((L,T)=>(L-this.image_mean[T])/this.image_std[T]);return super.pad_image(C,j,{width:ne,height:q},{center:!0,constant_values:R,...ce})}async _call(C,{num_crops:j=null}={}){if(this._num_crops=j??(j=this.config.num_crops),j<4||k(j)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(C)||(C=[C]);const re=C.length,ce=await Promise.all(C.map(S=>this.preprocess(S))),me=ce.map(S=>S.original_size),Y=ce.map(S=>S.reshaped_input_size),q=[];for(const{pixel_values:S}of ce){S.unsqueeze_(0);const[U,ge]=S.dims.slice(-2),_e=await(0,z.interpolate_4d)(S,{size:[V,V],mode:"bicubic"});if(j>0){const ze=[],Ie=k(j),fe=v(ge/Ie),Be=v(U/Ie);for(let Ge=0;Ge<Ie;++Ge)for(let He=0;He<Ie;++He){let Ve,wt,lt,Ae;Ge===Ie-1?(wt=U-Be,Ae=U):(wt=Ge*Be,Ae=(Ge+1)*Be),He===Ie-1?(Ve=ge-fe,lt=ge):(Ve=He*fe,lt=(He+1)*fe);const ee=[wt,Ve],Me=[Ae,lt],Ue=await(0,z.slice)(S,ee,Me,se);ze.push(Ue)}const ve=await(0,z.interpolate_4d)((0,z.cat)(ze,0),{size:[V,V],mode:"bicubic"});q.push((0,z.cat)([_e,ve],0))}else q.push(_e)}const ne=(0,z.stack)(q,0),R=Y.map(S=>S.map(U=>V*K(U/V))),L=new z.Tensor("int64",R.flat(),[re,2]),T=R.map(([S,U])=>this.calc_num_image_tokens_from_image_size(U,S));return{pixel_values:ne,original_sizes:me,reshaped_input_sizes:Y,image_sizes:L,num_img_tokens:T}}}},"./src/models/phi3_v/processing_phi3_v.js":(Le,P,r)=>{r.r(P),r.d(P,{Phi3VProcessor:()=>v});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");r("./src/utils/image.js");const se="<|image|>",K=/<\|image_\d+\|>/g;class v extends y.Processor{async _call(x,E=null,{padding:C=!0,truncation:j=!0,num_crops:re=null}={}){Array.isArray(x)||(x=[x]);let ce,me;if(E){me=await this.image_processor(E,{num_crops:re});const{num_img_tokens:Y}=me,q=x.map((R,L)=>R.split(K).join(se.repeat(Y[L])));ce=this.tokenizer(q,{padding:C,truncation:j});const ne=this.tokenizer.model.convert_tokens_to_ids([se])[0];ce.input_ids.map_(R=>R==ne?-R:R)}else ce=this.tokenizer(x);return{...ce,...me}}}ke(v,"image_processor_class",z.AutoImageProcessor),ke(v,"tokenizer_class",V.AutoTokenizer)},"./src/models/processors.js":(Le,P,r)=>{r.r(P),r.d(P,{Florence2Processor:()=>y.Florence2Processor,GroundingDinoProcessor:()=>z.GroundingDinoProcessor,Idefics3Processor:()=>V.Idefics3Processor,JinaCLIPProcessor:()=>K.JinaCLIPProcessor,MgpstrProcessor:()=>v.MgpstrProcessor,MoonshineProcessor:()=>k.MoonshineProcessor,OwlViTProcessor:()=>x.OwlViTProcessor,PaliGemmaProcessor:()=>C.PaliGemmaProcessor,Phi3VProcessor:()=>E.Phi3VProcessor,PyAnnoteProcessor:()=>j.PyAnnoteProcessor,Qwen2VLProcessor:()=>re.Qwen2VLProcessor,SamProcessor:()=>ce.SamProcessor,SpeechT5Processor:()=>me.SpeechT5Processor,VLChatProcessor:()=>se.VLChatProcessor,Wav2Vec2Processor:()=>Y.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>q.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>ne.WhisperProcessor});var y=r("./src/models/florence2/processing_florence2.js"),z=r("./src/models/grounding_dino/processing_grounding_dino.js"),V=r("./src/models/idefics3/processing_idefics3.js"),se=r("./src/models/janus/processing_janus.js"),K=r("./src/models/jina_clip/processing_jina_clip.js"),v=r("./src/models/mgp_str/processing_mgp_str.js"),k=r("./src/models/moonshine/processing_moonshine.js"),x=r("./src/models/owlvit/processing_owlvit.js"),E=r("./src/models/phi3_v/processing_phi3_v.js"),C=r("./src/models/paligemma/processing_paligemma.js"),j=r("./src/models/pyannote/processing_pyannote.js"),re=r("./src/models/qwen2_vl/processing_qwen2_vl.js"),ce=r("./src/models/sam/processing_sam.js"),me=r("./src/models/speecht5/processing_speecht5.js"),Y=r("./src/models/wav2vec2/processing_wav2vec2.js"),q=r("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),ne=r("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(Le,P,r)=>{r.r(P),r.d(P,{PvtImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(Le,P,r)=>{r.r(P),r.d(P,{PyAnnoteFeatureExtractor:()=>se});var y=r("./src/base/feature_extraction_utils.js"),z=r("./src/utils/tensor.js"),V=r("./src/utils/maths.js");class se extends y.FeatureExtractor{async _call(v){(0,y.validate_audio_inputs)(v,"PyAnnoteFeatureExtractor"),v instanceof Float64Array&&(v=new Float32Array(v));const k=[1,1,v.length];return{input_values:new z.Tensor("float32",v,k)}}samples_to_frames(v){return(v-this.config.offset)/this.config.step}post_process_speaker_diarization(v,k){const x=k/this.samples_to_frames(k)/this.config.sampling_rate,E=[];for(const C of v.tolist()){const j=[];let re=-1;for(let ce=0;ce<C.length;++ce){const me=(0,V.softmax)(C[ce]),[Y,q]=(0,V.max)(me),[ne,R]=[ce,ce+1];q!==re?(re=q,j.push({id:q,start:ne,end:R,score:Y})):(j.at(-1).end=R,j.at(-1).score+=Y)}E.push(j.map(({id:ce,start:me,end:Y,score:q})=>({id:ce,start:me*x,end:Y*x,confidence:q/(Y-me)})))}return E}}},"./src/models/pyannote/processing_pyannote.js":(Le,P,r)=>{r.r(P),r.d(P,{PyAnnoteProcessor:()=>V});var y=r("./src/base/processing_utils.js"),z=r("./src/models/pyannote/feature_extraction_pyannote.js");class V extends y.Processor{async _call(K){return await this.feature_extractor(K)}post_process_speaker_diarization(...K){return this.feature_extractor.post_process_speaker_diarization(...K)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}ke(V,"feature_extractor_class",z.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(Le,P,r)=>{r.r(P),r.d(P,{Qwen2VLImageProcessor:()=>V});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/tensor.js");class V extends y.ImageProcessor{async _call(K,...v){const{pixel_values:k,original_sizes:x,reshaped_input_sizes:E}=await super._call(K,...v);let C=k;const{temporal_patch_size:j,merge_size:re,patch_size:ce}=this.config;C.dims[0]===1&&(C=(0,z.cat)(Array.from({length:j},()=>C),0));const me=C.dims[0]/j,Y=C.dims[1],q=Math.floor(C.dims[2]/ce),ne=Math.floor(C.dims[3]/ce),R=C.view(me,j,Y,Math.floor(q/re),re,ce,Math.floor(ne/re),re,ce).permute(0,3,6,4,7,2,1,5,8).view(me*q*ne,Y*j*ce*ce),L=new z.Tensor("int64",[me,q,ne],[1,3]);return{pixel_values:R,image_grid_thw:L,original_sizes:x,reshaped_input_sizes:E}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(Le,P,r)=>{r.r(P),r.d(P,{Qwen2VLProcessor:()=>se});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js"),V=r("./src/tokenizers.js");r("./src/utils/image.js");class se extends y.Processor{async _call(v,k=null,...x){Array.isArray(v)||(v=[v]);let E,C;if(k&&(E=await this.image_processor(k),C=E.image_grid_thw),C){let re=this.image_processor.config.merge_size**2,ce=0;const me=C.tolist();v=v.map(Y=>{for(;Y.includes("<|image_pad|>");){const q=Number(me[ce++].reduce((ne,R)=>ne*R,1n));Y=Y.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(q/re)))}return Y.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(v),...E}}}ke(se,"image_processor_class",z.AutoImageProcessor),ke(se,"tokenizer_class",V.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(Le,P,r)=>{r.r(P),r.d(P,{RTDetrImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{post_process_object_detection(...se){return(0,y.post_process_object_detection)(...se)}}},"./src/models/sam/image_processing_sam.js":(Le,P,r)=>{r.r(P),r.d(P,{SamImageProcessor:()=>se});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/core.js"),V=r("./src/utils/tensor.js");class se extends y.ImageProcessor{reshape_input_points(v,k,x,E=!1){v=structuredClone(v);let C=(0,z.calculateDimensions)(v);if(C.length===3)E||(C=[1,...C]),v=[v];else if(C.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let j=0;j<v.length;++j){let re=k[j],ce=x[j],me=[ce[0]/re[0],ce[1]/re[1]];for(let Y=0;Y<v[j].length;++Y)for(let q=0;q<v[j][Y].length;++q)for(let ne=0;ne<v[j][Y][q].length;++ne)v[j][Y][q][ne]*=me[ne%2]}return new V.Tensor("float32",Float32Array.from(v.flat(1/0)),C)}add_input_labels(v,k){let x=(0,z.calculateDimensions)(v);if(x.length===2)x=[1,...x],v=[v];else if(x.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(x.some((E,C)=>E!==k.dims[C]))throw Error(`The first ${x.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new V.Tensor("int64",v.flat(1/0).map(BigInt),x)}async _call(v,{input_points:k=null,input_labels:x=null,input_boxes:E=null}={}){const C=await super._call(v);if(k&&(C.input_points=this.reshape_input_points(k,C.original_sizes,C.reshaped_input_sizes)),x){if(!C.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");C.input_labels=this.add_input_labels(x,C.input_points)}return E&&(C.input_boxes=this.reshape_input_points(E,C.original_sizes,C.reshaped_input_sizes,!0)),C}async post_process_masks(v,k,x,{mask_threshold:E=0,binarize:C=!0,pad_size:j=null}={}){const re=[];j=j??this.pad_size;const ce=[j.height,j.width];for(let me=0;me<k.length;++me){const Y=k[me],q=x[me];let ne=await(0,V.interpolate_4d)(v[me],{mode:"bilinear",size:ce});if(ne=ne.slice(null,null,[0,q[0]],[0,q[1]]),ne=await(0,V.interpolate_4d)(ne,{mode:"bilinear",size:Y}),C){const R=ne.data,L=new Uint8Array(R.length);for(let T=0;T<R.length;++T)R[T]>E&&(L[T]=1);ne=new V.Tensor("bool",L,ne.dims)}re.push(ne)}return re}generate_crop_boxes(v,k,{crop_n_layers:x=0,overlap_ratio:E=.3413333333333333,points_per_crop:C=32,crop_n_points_downscale_factor:j=1}={}){}}},"./src/models/sam/processing_sam.js":(Le,P,r)=>{r.r(P),r.d(P,{SamProcessor:()=>V});var y=r("./src/base/processing_utils.js"),z=r("./src/models/auto/image_processing_auto.js");class V extends y.Processor{async _call(...K){return await this.image_processor(...K)}post_process_masks(...K){return this.image_processor.post_process_masks(...K)}reshape_input_points(...K){return this.image_processor.reshape_input_points(...K)}}ke(V,"image_processor_class",z.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(Le,P,r)=>{r.r(P),r.d(P,{SeamlessM4TFeatureExtractor:()=>se});var y=r("./src/base/feature_extraction_utils.js"),z=r("./src/utils/tensor.js"),V=r("./src/utils/audio.js");class se extends y.FeatureExtractor{constructor(v){super(v);const k=this.config.sampling_rate,x=(0,V.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(k/2),k,null,"kaldi",!0);for(let E=0;E<x.length;++E)x[E].push(0);this.mel_filters=x,this.window=(0,V.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(v,k){return v=v.map(x=>x*32768),(0,V.spectrogram)(v,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:k,transpose:!0})}async _call(v,{padding:k=!0,pad_to_multiple_of:x=2,do_normalize_per_mel_bins:E=!0,return_attention_mask:C=!0}={}){(0,y.validate_audio_inputs)(v,"SeamlessM4TFeatureExtractor");let j=await this._extract_fbank_features(v,this.config.max_length);if(E){const[L,T]=j.dims,S=j.data;for(let U=0;U<T;++U){let ge=0;for(let fe=0;fe<L;++fe)ge+=S[fe*T+U];const _e=ge/L;let ze=0;for(let fe=0;fe<L;++fe)ze+=(S[fe*T+U]-_e)**2;ze/=L-1;const Ie=Math.sqrt(ze+1e-7);for(let fe=0;fe<L;++fe){const Be=fe*T+U;S[Be]=(S[Be]-_e)/Ie}}}let re;if(k){const[L,T]=j.dims,S=j.data,U=L%x;if(U>0){const ge=new Float32Array(T*(L+U));ge.set(S),ge.fill(this.config.padding_value,S.length);const _e=L+U;j=new z.Tensor(j.type,ge,[_e,T]),C&&(re=new z.Tensor("int64",new BigInt64Array(_e),[1,_e]),re.data.fill(1n,0,L))}}const[ce,me]=j.dims,Y=this.config.stride;if(ce%Y!==0)throw new Error(`The number of frames (${ce}) must be a multiple of the stride (${Y}).`);const ne=j.view(1,Math.floor(ce/Y),me*Y),R={input_features:ne};if(C){const L=ne.dims[1],T=new BigInt64Array(L);if(re){const S=re.data;for(let U=1,ge=0;U<ce;U+=Y,++ge)T[ge]=S[U]}else T.fill(1n);R.attention_mask=new z.Tensor("int64",T,[1,L])}return R}}},"./src/models/segformer/image_processing_segformer.js":(Le,P,r)=>{r.r(P),r.d(P,{SegformerFeatureExtractor:()=>V,SegformerImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{post_process_semantic_segmentation(...K){return(0,y.post_process_semantic_segmentation)(...K)}}class V extends z{}},"./src/models/siglip/image_processing_siglip.js":(Le,P,r)=>{r.r(P),r.d(P,{SiglipImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(Le,P,r)=>{r.r(P),r.d(P,{SpeechT5FeatureExtractor:()=>z});var y=r("./src/base/feature_extraction_utils.js");class z extends y.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(Le,P,r)=>{r.r(P),r.d(P,{SpeechT5Processor:()=>se});var y=r("./src/base/processing_utils.js"),z=r("./src/tokenizers.js"),V=r("./src/models/auto/feature_extraction_auto.js");class se extends y.Processor{async _call(v){return await this.feature_extractor(v)}}ke(se,"tokenizer_class",z.AutoTokenizer),ke(se,"feature_extractor_class",V.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(Le,P,r)=>{r.r(P),r.d(P,{Swin2SRImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{pad_image(se,K,v,k={}){const[x,E,C]=K;return super.pad_image(se,K,{width:E+(v-E%v)%v,height:x+(v-x%v)%v},{mode:"symmetric",center:!1,constant_values:-1,...k})}}},"./src/models/vit/image_processing_vit.js":(Le,P,r)=>{r.r(P),r.d(P,{ViTFeatureExtractor:()=>V,ViTImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{}class V extends z{}},"./src/models/vitmatte/image_processing_vitmatte.js":(Le,P,r)=>{r.r(P),r.d(P,{VitMatteImageProcessor:()=>V});var y=r("./src/base/image_processors_utils.js"),z=r("./src/utils/tensor.js");class V extends y.ImageProcessor{async _call(K,v){Array.isArray(K)||(K=[K]),Array.isArray(v)||(v=[v]);const k=await Promise.all(K.map(C=>this.preprocess(C))),x=await Promise.all(v.map(C=>this.preprocess(C,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,z.stack)(k.map((C,j)=>(0,z.cat)([C.pixel_values,x[j].pixel_values],0)),0),original_sizes:k.map(C=>C.original_size),reshaped_input_sizes:k.map(C=>C.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(Le,P,r)=>{r.r(P),r.d(P,{VitPoseImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{post_process_pose_estimation(se,K,{threshold:v=null}={}){const k=se.tolist(),[x,E,C,j]=se.dims,re=[];for(let ce=0;ce<x;++ce){const me=k[ce],Y=K[ce],q=[];for(let ne=0;ne<Y.length;++ne){const R=Y[ne],L=[],T=[],S=[],U=R.at(-2)/j,ge=R.at(-1)/C;for(let _e=0;_e<me.length;++_e){let[ze,Ie]=[0,0],fe=0,Be=-1/0;const ve=me[_e];for(let He=0;He<ve.length;++He){const Ve=ve[He];for(let wt=0;wt<Ve.length;++wt){const lt=Ve[wt];fe+=lt,Be=Math.max(Be,lt),ze+=(wt+.5)*lt,Ie+=He*lt}}if(v!=null&&Be<v)continue;const Ge=[U*ze/fe,ge*Ie/fe];L.push(Ge),S.push(_e),T.push(Be)}q.push({bbox:R,scores:T,labels:S,keypoints:L})}re.push(q)}return re}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(Le,P,r)=>{r.r(P),r.d(P,{Wav2Vec2FeatureExtractor:()=>V});var y=r("./src/base/feature_extraction_utils.js"),z=r("./src/utils/tensor.js");class V extends y.FeatureExtractor{_zero_mean_unit_var_norm(K){const k=K.reduce((E,C)=>E+C,0)/K.length,x=K.reduce((E,C)=>E+(C-k)**2,0)/K.length;return K.map(E=>(E-k)/Math.sqrt(x+1e-7))}async _call(K){(0,y.validate_audio_inputs)(K,"Wav2Vec2FeatureExtractor"),K instanceof Float64Array&&(K=new Float32Array(K));let v=K;this.config.do_normalize&&(v=this._zero_mean_unit_var_norm(v));const k=[1,v.length];return{input_values:new z.Tensor("float32",v,k),attention_mask:new z.Tensor("int64",new BigInt64Array(v.length).fill(1n),k)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(Le,P,r)=>{r.r(P),r.d(P,{Wav2Vec2Processor:()=>se});var y=r("./src/tokenizers.js"),z=r("./src/models/auto/feature_extraction_auto.js"),V=r("./src/base/processing_utils.js");class se extends V.Processor{async _call(v){return await this.feature_extractor(v)}}ke(se,"tokenizer_class",y.AutoTokenizer),ke(se,"feature_extractor_class",z.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(Le,P,r)=>{r.r(P),r.d(P,{Wav2Vec2ProcessorWithLM:()=>se});var y=r("./src/tokenizers.js"),z=r("./src/models/auto/feature_extraction_auto.js"),V=r("./src/base/processing_utils.js");class se extends V.Processor{async _call(v){return await this.feature_extractor(v)}}ke(se,"tokenizer_class",y.AutoTokenizer),ke(se,"feature_extractor_class",z.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(Le,P,r)=>{r.r(P),r.d(P,{WeSpeakerFeatureExtractor:()=>V});var y=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var z=r("./src/utils/audio.js");class V extends y.FeatureExtractor{constructor(K){super(K);const v=this.config.sampling_rate,k=(0,z.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(v/2),v,null,"kaldi",!0);for(let x=0;x<k.length;++x)k[x].push(0);this.mel_filters=k,this.window=(0,z.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(K){return K=K.map(v=>v*32768),(0,z.spectrogram)(K,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(K){(0,y.validate_audio_inputs)(K,"WeSpeakerFeatureExtractor");const v=(await this._extract_fbank_features(K)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const k=v.mean(1).data,x=v.data,[E,C,j]=v.dims;for(let re=0;re<E;++re){const ce=re*C*j,me=re*j;for(let Y=0;Y<C;++Y){const q=ce+Y*j;for(let ne=0;ne<j;++ne)x[q+ne]-=k[me+ne]}}}return{input_features:v}}}},"./src/models/whisper/common_whisper.js":(Le,P,r)=>{r.r(P),r.d(P,{WHISPER_LANGUAGE_MAPPING:()=>z,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>V,whisper_language_to_code:()=>se});const y=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],z=new Map(y),V=new Map([...y.map(([K,v])=>[v,K]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function se(K){K=K.toLowerCase();let v=V.get(K);if(v===void 0)if(z.has(K))v=K;else{const x=K.length===2?z.keys():z.values();throw new Error(`Language "${K}" is not supported. Must be one of: ${JSON.stringify(x)}`)}return v}},"./src/models/whisper/feature_extraction_whisper.js":(Le,P,r)=>{r.r(P),r.d(P,{WhisperFeatureExtractor:()=>se});var y=r("./src/base/feature_extraction_utils.js");r("./src/utils/tensor.js");var z=r("./src/utils/audio.js"),V=r("./src/utils/maths.js");class se extends y.FeatureExtractor{constructor(v){var k;super(v),(k=this.config).mel_filters??(k.mel_filters=(0,z.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,z.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(v){const k=await(0,z.spectrogram)(v,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),x=k.data,E=(0,V.max)(x)[0];for(let C=0;C<x.length;++C)x[C]=(Math.max(x[C],E-8)+4)/4;return k}async _call(v){(0,y.validate_audio_inputs)(v,"WhisperFeatureExtractor");let k;return v.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),k=v.slice(0,this.config.n_samples)):(k=new Float32Array(this.config.n_samples),k.set(v)),{input_features:(await this._extract_fbank_features(k)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(Le,P,r)=>{r.r(P),r.d(P,{WhisperGenerationConfig:()=>z});var y=r("./src/generation/configuration_utils.js");class z extends y.GenerationConfig{constructor(){super(...arguments);ke(this,"return_timestamps",null);ke(this,"return_token_timestamps",null);ke(this,"num_frames",null);ke(this,"alignment_heads",null);ke(this,"task",null);ke(this,"language",null);ke(this,"no_timestamps_token_id",null);ke(this,"prompt_ids",null);ke(this,"is_multilingual",null);ke(this,"lang_to_id",null);ke(this,"task_to_id",null);ke(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(Le,P,r)=>{r.r(P),r.d(P,{WhisperProcessor:()=>se});var y=r("./src/models/auto/feature_extraction_auto.js"),z=r("./src/tokenizers.js"),V=r("./src/base/processing_utils.js");class se extends V.Processor{async _call(v){return await this.feature_extractor(v)}}ke(se,"tokenizer_class",z.AutoTokenizer),ke(se,"feature_extractor_class",y.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(Le,P,r)=>{r.r(P),r.d(P,{YolosFeatureExtractor:()=>V,YolosImageProcessor:()=>z});var y=r("./src/base/image_processors_utils.js");class z extends y.ImageProcessor{post_process_object_detection(...K){return(0,y.post_process_object_detection)(...K)}}class V extends z{}},"./src/ops/registry.js":(Le,P,r)=>{r.r(P),r.d(P,{TensorOpRegistry:()=>v});var y=r("./src/backends/onnx.js"),z=r("./src/utils/tensor.js"),V=r("./src/env.js");const se=V.apis.IS_BROWSER_ENV||V.apis.IS_WEBWORKER_ENV,K=async(k,x,E)=>{const C=await(0,y.createInferenceSession)(new Uint8Array(k),x);let j=Promise.resolve();return async re=>{const ce=(0,y.isONNXProxy)(),me=Object.fromEntries(Object.entries(re).map(([q,ne])=>[q,(ce?ne.clone():ne).ort_tensor])),Y=await(j=se?j.then(()=>C.run(me)):C.run(me));return Array.isArray(E)?E.map(q=>new z.Tensor(Y[q])):new z.Tensor(Y[E])}};class v{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=K([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=K([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=K([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=K([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=K([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=K([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=K([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=K([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}ke(v,"session_options",{})},"./src/pipelines.js":(Le,P,r)=>{r.r(P),r.d(P,{AudioClassificationPipeline:()=>Ie,AutomaticSpeechRecognitionPipeline:()=>Be,DepthEstimationPipeline:()=>Ue,DocumentQuestionAnsweringPipeline:()=>Ae,FeatureExtractionPipeline:()=>_e,FillMaskPipeline:()=>ne,ImageClassificationPipeline:()=>Ge,ImageFeatureExtractionPipeline:()=>ze,ImageSegmentationPipeline:()=>He,ImageToImagePipeline:()=>Me,ImageToTextPipeline:()=>ve,ObjectDetectionPipeline:()=>wt,Pipeline:()=>ce,QuestionAnsweringPipeline:()=>q,SummarizationPipeline:()=>L,Text2TextGenerationPipeline:()=>R,TextClassificationPipeline:()=>me,TextGenerationPipeline:()=>U,TextToAudioPipeline:()=>ee,TokenClassificationPipeline:()=>Y,TranslationPipeline:()=>T,ZeroShotAudioClassificationPipeline:()=>fe,ZeroShotClassificationPipeline:()=>ge,ZeroShotImageClassificationPipeline:()=>Ve,ZeroShotObjectDetectionPipeline:()=>lt,pipeline:()=>de});var y=r("./src/tokenizers.js"),z=r("./src/models.js"),V=r("./src/models/auto/processing_auto.js");r("./src/base/processing_utils.js");var se=r("./src/utils/generic.js"),K=r("./src/utils/core.js"),v=r("./src/utils/maths.js"),k=r("./src/utils/audio.js"),x=r("./src/utils/tensor.js"),E=r("./src/utils/image.js");async function C(ot){return Array.isArray(ot)||(ot=[ot]),await Promise.all(ot.map(we=>E.RawImage.read(we)))}async function j(ot,we){return Array.isArray(ot)||(ot=[ot]),await Promise.all(ot.map(Oe=>typeof Oe=="string"||Oe instanceof URL?(0,k.read_audio)(Oe,we):Oe instanceof Float64Array?new Float32Array(Oe):Oe))}function re(ot,we){we&&(ot=ot.map(st=>st|0));const[Oe,it,at,nt]=ot;return{xmin:Oe,ymin:it,xmax:at,ymax:nt}}class ce extends se.Callable{constructor({task:we,model:Oe,tokenizer:it=null,processor:at=null}){super(),this.task=we,this.model=Oe,this.tokenizer=it,this.processor=at}async dispose(){await this.model.dispose()}}class me extends ce{constructor(we){super(we)}async _call(we,{top_k:Oe=1}={}){const it=this.tokenizer(we,{padding:!0,truncation:!0}),at=await this.model(it),nt=this.model.config.problem_type==="multi_label_classification"?$t=>$t.sigmoid():$t=>new x.Tensor("float32",(0,v.softmax)($t.data),$t.dims),st=this.model.config.id2label,yt=[];for(const $t of at.logits){const At=nt($t),vt=await(0,x.topk)(At,Oe),Dt=vt[0].tolist(),pe=vt[1].tolist().map((te,Te)=>({label:st?st[te]:`LABEL_${te}`,score:Dt[Te]}));Oe===1?yt.push(...pe):yt.push(pe)}return Array.isArray(we)||Oe===1?yt:yt[0]}}class Y extends ce{constructor(we){super(we)}async _call(we,{ignore_labels:Oe=["O"]}={}){const it=Array.isArray(we),at=this.tokenizer(it?we:[we],{padding:!0,truncation:!0}),st=(await this.model(at)).logits,yt=this.model.config.id2label,$t=[];for(let At=0;At<st.dims[0];++At){const vt=at.input_ids[At],Dt=st[At],G=[];for(let pe=0;pe<Dt.dims[0];++pe){const te=Dt[pe],Te=(0,v.max)(te.data)[1],We=yt?yt[Te]:`LABEL_${Te}`;if(Oe.includes(We))continue;const tt=this.tokenizer.decode([vt[pe].item()],{skip_special_tokens:!0});if(tt==="")continue;const ut=(0,v.softmax)(te.data);G.push({entity:We,score:ut[Te],index:pe,word:tt})}$t.push(G)}return it?$t:$t[0]}}class q extends ce{constructor(we){super(we)}async _call(we,Oe,{top_k:it=1}={}){const at=this.tokenizer(we,{text_pair:Oe,padding:!0,truncation:!0}),{start_logits:nt,end_logits:st}=await this.model(at),yt=at.input_ids.tolist(),$t=at.attention_mask.tolist(),At=this.tokenizer.all_special_ids,vt=[];for(let Dt=0;Dt<nt.dims[0];++Dt){const G=yt[Dt],pe=G.findIndex(Et=>Et==this.tokenizer.sep_token_id);$t[Dt].map((Et,Ot)=>Et==1&&(Ot===0||Ot>pe&&At.findIndex(Vt=>Vt==G[Ot])===-1));const te=nt[Dt].tolist(),Te=st[Dt].tolist();for(let Et=1;Et<te.length;++Et)($t[Dt]==0||Et<=pe||At.findIndex(Ot=>Ot==G[Et])!==-1)&&(te[Et]=-1/0,Te[Et]=-1/0);const We=(0,v.softmax)(te).map((Et,Ot)=>[Et,Ot]),tt=(0,v.softmax)(Te).map((Et,Ot)=>[Et,Ot]);We[0][0]=0,tt[0][0]=0;const ut=(0,K.product)(We,tt).filter(Et=>Et[0][1]<=Et[1][1]).map(Et=>[Et[0][1],Et[1][1],Et[0][0]*Et[1][0]]).sort((Et,Ot)=>Ot[2]-Et[2]);for(let Et=0;Et<Math.min(ut.length,it);++Et){const[Ot,Vt,Ht]=ut[Et],Jt=G.slice(Ot,Vt+1),$s=this.tokenizer.decode(Jt,{skip_special_tokens:!0});vt.push({answer:$s,score:Ht})}}return it===1?vt[0]:vt}}class ne extends ce{constructor(we){super(we)}async _call(we,{top_k:Oe=5}={}){const it=this.tokenizer(we,{padding:!0,truncation:!0}),{logits:at}=await this.model(it),nt=[],st=it.input_ids.tolist();for(let yt=0;yt<st.length;++yt){const $t=st[yt],At=$t.findIndex(te=>te==this.tokenizer.mask_token_id);if(At===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const vt=at[yt][At],Dt=await(0,x.topk)(new x.Tensor("float32",(0,v.softmax)(vt.data),vt.dims),Oe),G=Dt[0].tolist(),pe=Dt[1].tolist();nt.push(pe.map((te,Te)=>{const We=$t.slice();return We[At]=te,{score:G[Te],token:Number(te),token_str:this.tokenizer.decode([te]),sequence:this.tokenizer.decode(We,{skip_special_tokens:!0})}}))}return Array.isArray(we)?nt:nt[0]}}class R extends ce{constructor(Oe){super(Oe);ke(this,"_key","generated_text")}async _call(Oe,it={}){Array.isArray(Oe)||(Oe=[Oe]),this.model.config.prefix&&(Oe=Oe.map(At=>this.model.config.prefix+At));const at=this.model.config.task_specific_params;at&&at[this.task]&&at[this.task].prefix&&(Oe=Oe.map(At=>at[this.task].prefix+At));const nt=this.tokenizer,st={padding:!0,truncation:!0};let yt;this instanceof T&&"_build_translation_inputs"in nt?yt=nt._build_translation_inputs(Oe,st,it):yt=nt(Oe,st);const $t=await this.model.generate({...yt,...it});return nt.batch_decode($t,{skip_special_tokens:!0}).map(At=>({[this._key]:At}))}}class L extends R{constructor(Oe){super(Oe);ke(this,"_key","summary_text")}}class T extends R{constructor(Oe){super(Oe);ke(this,"_key","translation_text")}}function S(ot){return Array.isArray(ot)&&ot.every(we=>"role"in we&&"content"in we)}class U extends ce{constructor(we){super(we)}async _call(we,Oe={}){let it=!1,at=!1,nt;if(typeof we=="string")nt=we=[we];else if(Array.isArray(we)&&we.every(pe=>typeof pe=="string"))it=!0,nt=we;else{if(S(we))we=[we];else if(Array.isArray(we)&&we.every(S))it=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");at=!0,nt=we.map(pe=>this.tokenizer.apply_chat_template(pe,{tokenize:!1,add_generation_prompt:!0}))}const st=Oe.add_special_tokens??!1,yt=at?!1:Oe.return_full_text??!0;this.tokenizer.padding_side="left";const $t=this.tokenizer(nt,{add_special_tokens:st,padding:!0,truncation:!0}),At=await this.model.generate({...$t,...Oe}),vt=this.tokenizer.batch_decode(At,{skip_special_tokens:!0});let Dt;!yt&&$t.input_ids.dims.at(-1)>0&&(Dt=this.tokenizer.batch_decode($t.input_ids,{skip_special_tokens:!0}).map(pe=>pe.length));const G=Array.from({length:we.length},pe=>[]);for(let pe=0;pe<vt.length;++pe){const te=Math.floor(pe/At.dims[0]*we.length);Dt&&(vt[pe]=vt[pe].slice(Dt[te])),G[te].push({generated_text:at?[...we[te],{role:"assistant",content:vt[pe]}]:vt[pe]})}return!it&&G.length===1?G[0]:G}}class ge extends ce{constructor(we){super(we),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Oe,it])=>[Oe.toLowerCase(),it])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(we,Oe,{hypothesis_template:it="This example is {}.",multi_label:at=!1}={}){const nt=Array.isArray(we);nt||(we=[we]),Array.isArray(Oe)||(Oe=[Oe]);const st=Oe.map(At=>it.replace("{}",At)),yt=at||Oe.length===1,$t=[];for(const At of we){const vt=[];for(const pe of st){const te=this.tokenizer(At,{text_pair:pe,padding:!0,truncation:!0}),Te=await this.model(te);yt?vt.push([Te.logits.data[this.contradiction_id],Te.logits.data[this.entailment_id]]):vt.push(Te.logits.data[this.entailment_id])}const G=(yt?vt.map(pe=>(0,v.softmax)(pe)[1]):(0,v.softmax)(vt)).map((pe,te)=>[pe,te]).sort((pe,te)=>te[0]-pe[0]);$t.push({sequence:At,labels:G.map(pe=>Oe[pe[1]]),scores:G.map(pe=>pe[0])})}return nt?$t:$t[0]}}class _e extends ce{constructor(we){super(we)}async _call(we,{pooling:Oe="none",normalize:it=!1,quantize:at=!1,precision:nt="binary"}={}){const st=this.tokenizer(we,{padding:!0,truncation:!0}),yt=await this.model(st);let $t=yt.last_hidden_state??yt.logits??yt.token_embeddings;if(Oe!=="none")if(Oe==="mean")$t=(0,x.mean_pooling)($t,st.attention_mask);else if(Oe==="cls")$t=$t.slice(null,0);else throw Error(`Pooling method '${Oe}' not supported.`);return it&&($t=$t.normalize(2,-1)),at&&($t=(0,x.quantize_embeddings)($t,nt)),$t}}class ze extends ce{constructor(we){super(we)}async _call(we,{pool:Oe=null}={}){const it=await C(we),{pixel_values:at}=await this.processor(it),nt=await this.model({pixel_values:at});let st;if(Oe){if(!("pooler_output"in nt))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");st=nt.pooler_output}else st=nt.last_hidden_state??nt.logits??nt.image_embeds;return st}}class Ie extends ce{constructor(we){super(we)}async _call(we,{top_k:Oe=5}={}){const it=this.processor.feature_extractor.config.sampling_rate,at=await j(we,it),nt=this.model.config.id2label,st=[];for(const yt of at){const $t=await this.processor(yt),vt=(await this.model($t)).logits[0],Dt=await(0,x.topk)(new x.Tensor("float32",(0,v.softmax)(vt.data),vt.dims),Oe),G=Dt[0].tolist(),te=Dt[1].tolist().map((Te,We)=>({label:nt?nt[Te]:`LABEL_${Te}`,score:G[We]}));st.push(te)}return Array.isArray(we)?st:st[0]}}class fe extends ce{constructor(we){super(we)}async _call(we,Oe,{hypothesis_template:it="This is a sound of {}."}={}){const at=!Array.isArray(we);at&&(we=[we]);const nt=Oe.map(vt=>it.replace("{}",vt)),st=this.tokenizer(nt,{padding:!0,truncation:!0}),yt=this.processor.feature_extractor.config.sampling_rate,$t=await j(we,yt),At=[];for(const vt of $t){const Dt=await this.processor(vt),G=await this.model({...st,...Dt}),pe=(0,v.softmax)(G.logits_per_audio.data);At.push([...pe].map((te,Te)=>({score:te,label:Oe[Te]})))}return at?At[0]:At}}class Be extends ce{constructor(we){super(we)}async _call(we,Oe={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(we,Oe);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(we,Oe);case"moonshine":return this._call_moonshine(we,Oe);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(we,Oe){Oe.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Oe.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const it=!Array.isArray(we);it&&(we=[we]);const at=this.processor.feature_extractor.config.sampling_rate,nt=await j(we,at),st=[];for(const yt of nt){const $t=await this.processor(yt),vt=(await this.model($t)).logits[0],Dt=[];for(const pe of vt)Dt.push((0,v.max)(pe.data)[1]);const G=this.tokenizer.decode(Dt);st.push({text:G})}return it?st[0]:st}async _call_whisper(we,Oe){const it=Oe.return_timestamps??!1,at=Oe.chunk_length_s??0,nt=Oe.force_full_sequences??!1;let st=Oe.stride_length_s??null;const yt={...Oe};it==="word"&&(yt.return_token_timestamps=!0,yt.return_timestamps=!1);const $t=!Array.isArray(we);$t&&(we=[we]);const At=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,vt=this.processor.feature_extractor.config.hop_length,Dt=this.processor.feature_extractor.config.sampling_rate,G=await j(we,Dt),pe=[];for(const te of G){let Te=[];if(at>0){if(st===null)st=at/6;else if(at<=st)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const ut=Dt*at,Et=Dt*st,Ot=ut-2*Et;let Vt=0;for(;;){const Ht=Vt+ut,Jt=te.subarray(Vt,Ht),$s=await this.processor(Jt),zs=Vt===0,tr=Ht>=te.length;if(Te.push({stride:[Jt.length,zs?0:Et,tr?0:Et],input_features:$s.input_features,is_last:tr}),tr)break;Vt+=Ot}}else Te=[{stride:[te.length,0,0],input_features:(await this.processor(te)).input_features,is_last:!0}];for(const ut of Te){yt.num_frames=Math.floor(ut.stride[0]/vt);const Et=await this.model.generate({inputs:ut.input_features,...yt});it==="word"?(ut.tokens=Et.sequences.tolist()[0],ut.token_timestamps=Et.token_timestamps.tolist()[0].map(Ot=>(0,v.round)(Ot,2))):ut.tokens=Et[0].tolist(),ut.stride=ut.stride.map(Ot=>Ot/Dt)}const[We,tt]=this.tokenizer._decode_asr(Te,{time_precision:At,return_timestamps:it,force_full_sequences:nt});pe.push({text:We,...tt})}return $t?pe[0]:pe}async _call_moonshine(we,Oe){const it=!Array.isArray(we);it&&(we=[we]);const at=this.processor.feature_extractor.config.sampling_rate,nt=await j(we,at),st=[];for(const yt of nt){const $t=await this.processor(yt),At=Math.floor(yt.length/at)*6,vt=await this.model.generate({max_new_tokens:At,...Oe,...$t}),Dt=this.processor.batch_decode(vt,{skip_special_tokens:!0})[0];st.push({text:Dt})}return it?st[0]:st}}class ve extends ce{constructor(we){super(we)}async _call(we,Oe={}){const it=Array.isArray(we),at=await C(we),{pixel_values:nt}=await this.processor(at),st=[];for(const yt of nt){yt.dims=[1,...yt.dims];const $t=await this.model.generate({inputs:yt,...Oe}),At=this.tokenizer.batch_decode($t,{skip_special_tokens:!0}).map(vt=>({generated_text:vt.trim()}));st.push(At)}return it?st:st[0]}}class Ge extends ce{constructor(we){super(we)}async _call(we,{top_k:Oe=5}={}){const it=await C(we),{pixel_values:at}=await this.processor(it),nt=await this.model({pixel_values:at}),st=this.model.config.id2label,yt=[];for(const $t of nt.logits){const At=await(0,x.topk)(new x.Tensor("float32",(0,v.softmax)($t.data),$t.dims),Oe),vt=At[0].tolist(),G=At[1].tolist().map((pe,te)=>({label:st?st[pe]:`LABEL_${pe}`,score:vt[te]}));yt.push(G)}return Array.isArray(we)?yt:yt[0]}}class He extends ce{constructor(we){super(we),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(we,{threshold:Oe=.5,mask_threshold:it=.5,overlap_mask_area_threshold:at=.8,label_ids_to_fuse:nt=null,target_sizes:st=null,subtask:yt=null}={}){if(Array.isArray(we)&&we.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const At=await C(we),vt=At.map(tt=>[tt.height,tt.width]),{pixel_values:Dt,pixel_mask:G}=await this.processor(At),pe=await this.model({pixel_values:Dt,pixel_mask:G});let te=null;if(yt!==null)te=this.subtasks_mapping[yt];else for(let[tt,ut]of Object.entries(this.subtasks_mapping))if(ut in this.processor.image_processor){te=this.processor.image_processor[ut].bind(this.processor.image_processor),yt=tt;break}const Te=this.model.config.id2label,We=[];if(yt==="panoptic"||yt==="instance"){const tt=te(pe,Oe,it,at,nt,st??vt)[0],ut=tt.segmentation;for(const Et of tt.segments_info){const Ot=new Uint8ClampedArray(ut.data.length);for(let Ht=0;Ht<ut.data.length;++Ht)ut.data[Ht]===Et.id&&(Ot[Ht]=255);const Vt=new E.RawImage(Ot,ut.dims[1],ut.dims[0],1);We.push({score:Et.score,label:Te[Et.label_id],mask:Vt})}}else if(yt==="semantic"){const{segmentation:tt,labels:ut}=te(pe,st??vt)[0];for(const Et of ut){const Ot=new Uint8ClampedArray(tt.data.length);for(let Ht=0;Ht<tt.data.length;++Ht)tt.data[Ht]===Et&&(Ot[Ht]=255);const Vt=new E.RawImage(Ot,tt.dims[1],tt.dims[0],1);We.push({score:null,label:Te[Et],mask:Vt})}}else throw Error(`Subtask ${yt} not supported.`);return We}}class Ve extends ce{constructor(we){super(we)}async _call(we,Oe,{hypothesis_template:it="This is a photo of {}"}={}){const at=Array.isArray(we),nt=await C(we),st=Oe.map(G=>it.replace("{}",G)),yt=this.tokenizer(st,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:$t}=await this.processor(nt),At=await this.model({...yt,pixel_values:$t}),vt=this.model.config.model_type==="siglip"?G=>G.sigmoid().data:G=>(0,v.softmax)(G.data),Dt=[];for(const G of At.logits_per_image){const te=[...vt(G)].map((Te,We)=>({score:Te,label:Oe[We]}));te.sort((Te,We)=>We.score-Te.score),Dt.push(te)}return at?Dt:Dt[0]}}class wt extends ce{constructor(we){super(we)}async _call(we,{threshold:Oe=.9,percentage:it=!1}={}){const at=Array.isArray(we);if(at&&we.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const nt=await C(we),st=it?null:nt.map(pe=>[pe.height,pe.width]),{pixel_values:yt,pixel_mask:$t}=await this.processor(nt),At=await this.model({pixel_values:yt,pixel_mask:$t}),vt=this.processor.image_processor.post_process_object_detection(At,Oe,st),Dt=this.model.config.id2label,G=vt.map(pe=>pe.boxes.map((te,Te)=>({score:pe.scores[Te],label:Dt[pe.classes[Te]],box:re(te,!it)})));return at?G:G[0]}}class lt extends ce{constructor(we){super(we)}async _call(we,Oe,{threshold:it=.1,top_k:at=null,percentage:nt=!1}={}){const st=Array.isArray(we),yt=await C(we),$t=this.tokenizer(Oe,{padding:!0,truncation:!0}),At=await this.processor(yt),vt=[];for(let Dt=0;Dt<yt.length;++Dt){const G=yt[Dt],pe=nt?null:[[G.height,G.width]],te=At.pixel_values[Dt].unsqueeze_(0),Te=await this.model({...$t,pixel_values:te});let We;if("post_process_grounded_object_detection"in this.processor){const tt=this.processor.post_process_grounded_object_detection(Te,$t.input_ids,{box_threshold:it,text_threshold:it,target_sizes:pe})[0];We=tt.boxes.map((ut,Et)=>({score:tt.scores[Et],label:tt.labels[Et],box:re(ut,!nt)}))}else{const tt=this.processor.image_processor.post_process_object_detection(Te,it,pe,!0)[0];We=tt.boxes.map((ut,Et)=>({score:tt.scores[Et],label:Oe[tt.classes[Et]],box:re(ut,!nt)}))}We.sort((tt,ut)=>ut.score-tt.score),at!==null&&(We=We.slice(0,at)),vt.push(We)}return st?vt:vt[0]}}class Ae extends ce{constructor(we){super(we)}async _call(we,Oe,it={}){const at=(await C(we))[0],{pixel_values:nt}=await this.processor(at),st=`<s_docvqa><s_question>${Oe}</s_question><s_answer>`,yt=this.tokenizer(st,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,$t=await this.model.generate({inputs:nt,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:yt,...it}),vt=this.tokenizer.batch_decode($t)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Dt=null;return vt&&vt.length>=2&&(Dt=vt[1].trim()),[{answer:Dt}]}}class ee extends ce{constructor(Oe){super(Oe);ke(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Oe.vocoder??null}async _call(Oe,{speaker_embeddings:it=null}={}){return this.processor?this._call_text_to_spectrogram(Oe,{speaker_embeddings:it}):this._call_text_to_waveform(Oe)}async _call_text_to_waveform(Oe){const it=this.tokenizer(Oe,{padding:!0,truncation:!0}),{waveform:at}=await this.model(it),nt=this.model.config.sampling_rate;return new k.RawAudio(at.data,nt)}async _call_text_to_spectrogram(Oe,{speaker_embeddings:it}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await z.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof it=="string"||it instanceof URL)&&(it=new Float32Array(await(await fetch(it)).arrayBuffer())),it instanceof Float32Array)it=new x.Tensor("float32",it,[1,it.length]);else if(!(it instanceof x.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:at}=this.tokenizer(Oe,{padding:!0,truncation:!0}),{waveform:nt}=await this.model.generate_speech(at,it,{vocoder:this.vocoder}),st=this.processor.feature_extractor.config.sampling_rate;return new k.RawAudio(nt.data,st)}}class Me extends ce{constructor(we){super(we)}async _call(we){const Oe=await C(we),it=await this.processor(Oe),at=await this.model(it),nt=[];for(const st of at.reconstruction){const yt=st.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");nt.push(E.RawImage.fromTensor(yt))}return nt.length>1?nt:nt[0]}}class Ue extends ce{constructor(we){super(we)}async _call(we){const Oe=await C(we),it=await this.processor(Oe),{predicted_depth:at}=await this.model(it),nt=[];for(let st=0;st<Oe.length;++st){const yt=at[st],[$t,At]=yt.dims.slice(-2),[vt,Dt]=Oe[st].size,G=(await(0,x.interpolate_4d)(yt.view(1,1,$t,At),{size:[Dt,vt],mode:"bilinear"})).view(Dt,vt),pe=G.min().item(),te=G.max().item(),Te=G.sub(pe).div_(te-pe).mul_(255).to("uint8").unsqueeze(0),We=E.RawImage.fromTensor(Te);nt.push({predicted_depth:G,depth:We})}return nt.length>1?nt:nt[0]}}const xe=Object.freeze({"text-classification":{tokenizer:y.AutoTokenizer,pipeline:me,model:z.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:y.AutoTokenizer,pipeline:Y,model:z.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:y.AutoTokenizer,pipeline:q,model:z.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:y.AutoTokenizer,pipeline:ne,model:z.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:y.AutoTokenizer,pipeline:L,model:z.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:y.AutoTokenizer,pipeline:T,model:z.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:y.AutoTokenizer,pipeline:R,model:z.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:y.AutoTokenizer,pipeline:U,model:z.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:y.AutoTokenizer,pipeline:ge,model:z.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ie,model:z.AutoModelForAudioClassification,processor:V.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:y.AutoTokenizer,pipeline:fe,model:z.AutoModel,processor:V.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:y.AutoTokenizer,pipeline:Be,model:[z.AutoModelForSpeechSeq2Seq,z.AutoModelForCTC],processor:V.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:y.AutoTokenizer,pipeline:ee,model:[z.AutoModelForTextToWaveform,z.AutoModelForTextToSpectrogram],processor:[V.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:y.AutoTokenizer,pipeline:ve,model:z.AutoModelForVision2Seq,processor:V.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:Ge,model:z.AutoModelForImageClassification,processor:V.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:He,model:[z.AutoModelForImageSegmentation,z.AutoModelForSemanticSegmentation,z.AutoModelForUniversalSegmentation],processor:V.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:y.AutoTokenizer,pipeline:Ve,model:z.AutoModel,processor:V.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:wt,model:z.AutoModelForObjectDetection,processor:V.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:y.AutoTokenizer,pipeline:lt,model:z.AutoModelForZeroShotObjectDetection,processor:V.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:y.AutoTokenizer,pipeline:Ae,model:z.AutoModelForDocumentQuestionAnswering,processor:V.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Me,model:z.AutoModelForImageToImage,processor:V.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:Ue,model:z.AutoModelForDepthEstimation,processor:V.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:y.AutoTokenizer,pipeline:_e,model:z.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:V.AutoProcessor,pipeline:ze,model:[z.AutoModelForImageFeatureExtraction,z.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),dt=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function de(ot,we=null,{progress_callback:Oe=null,config:it=null,cache_dir:at=null,local_files_only:nt=!1,revision:st="main",device:yt=null,dtype:$t=null,model_file_name:At=null,session_options:vt={}}={}){ot=dt[ot]??ot;const Dt=xe[ot.split("_",1)[0]];if(!Dt)throw Error(`Unsupported pipeline: ${ot}. Must be one of [${Object.keys(xe)}]`);we||(we=Dt.default.model,console.log(`No model specified. Using default model: "${we}".`));const G={progress_callback:Oe,config:it,cache_dir:at,local_files_only:nt,revision:st,device:yt,dtype:$t,model_file_name:At,session_options:vt},pe=new Map([["tokenizer",Dt.tokenizer],["model",Dt.model],["processor",Dt.processor]]),te=await rt(pe,we,G);te.task=ot,(0,K.dispatchCallback)(Oe,{status:"ready",task:ot,model:we});const Te=Dt.pipeline;return new Te(te)}async function rt(ot,we,Oe){const it=Object.create(null),at=[];for(const[nt,st]of ot.entries()){if(!st)continue;let yt;Array.isArray(st)?yt=new Promise(async($t,At)=>{var Dt,G;let vt;for(const pe of st){if(pe===null){$t(null);return}try{$t(await pe.from_pretrained(we,Oe));return}catch(te){if((Dt=te.message)!=null&&Dt.includes("Unsupported model type"))vt=te;else if((G=te.message)!=null&&G.includes("Could not locate file"))vt=te;else{At(te);return}}}At(vt)}):yt=st.from_pretrained(we,Oe),it[nt]=yt,at.push(yt)}await Promise.all(at);for(const[nt,st]of Object.entries(it))it[nt]=await st;return it}},"./src/tokenizers.js":(Le,P,r)=>{r.r(P),r.d(P,{AlbertTokenizer:()=>Gr,AutoTokenizer:()=>cs,BartTokenizer:()=>be,BertTokenizer:()=>xn,BlenderbotSmallTokenizer:()=>Nr,BlenderbotTokenizer:()=>or,BloomTokenizer:()=>mt,CLIPTokenizer:()=>Qs,CamembertTokenizer:()=>O,CodeGenTokenizer:()=>Os,CodeLlamaTokenizer:()=>St,CohereTokenizer:()=>vr,ConvBertTokenizer:()=>n,DebertaTokenizer:()=>B,DebertaV2Tokenizer:()=>c,DistilBertTokenizer:()=>_,ElectraTokenizer:()=>X,EsmTokenizer:()=>es,FalconTokenizer:()=>gs,GPT2Tokenizer:()=>je,GPTNeoXTokenizer:()=>Zs,GemmaTokenizer:()=>qs,Grok1Tokenizer:()=>Re,HerbertTokenizer:()=>l,LlamaTokenizer:()=>Ce,M2M100Tokenizer:()=>kt,MBart50Tokenizer:()=>Ct,MBartTokenizer:()=>Ze,MPNetTokenizer:()=>ps,MarianTokenizer:()=>Gt,MgpstrTokenizer:()=>Er,MobileBertTokenizer:()=>sr,NllbTokenizer:()=>zt,NougatTokenizer:()=>Ps,PreTrainedTokenizer:()=>ns,Qwen2Tokenizer:()=>is,RoFormerTokenizer:()=>u,RobertaTokenizer:()=>qe,SiglipTokenizer:()=>Ys,SpeechT5Tokenizer:()=>Vr,SqueezeBertTokenizer:()=>Xr,T5Tokenizer:()=>ie,TokenizerModel:()=>ze,VitsTokenizer:()=>mr,Wav2Vec2CTCTokenizer:()=>Ar,WhisperTokenizer:()=>Hs,XLMRobertaTokenizer:()=>Kt,XLMTokenizer:()=>N,is_chinese_char:()=>ne});var y=r("./src/utils/generic.js"),z=r("./src/utils/core.js"),V=r("./src/utils/hub.js"),se=r("./src/utils/maths.js"),K=r("./src/utils/tensor.js"),v=r("./src/utils/data-structures.js"),k=r("./node_modules/@huggingface/jinja/dist/index.js"),x=r("./src/models/whisper/common_whisper.js");async function E(Ne,I){const ae=await Promise.all([(0,V.getModelJSON)(Ne,"tokenizer.json",!0,I),(0,V.getModelJSON)(Ne,"tokenizer_config.json",!0,I)]);return I.legacy!==null&&(ae[1].legacy=I.legacy),ae}function C(Ne,I){const ae=[];let ye=0;for(const Fe of Ne.matchAll(I)){const Ke=Fe[0];ye<Fe.index&&ae.push(Ne.slice(ye,Fe.index)),Ke.length>0&&ae.push(Ke),ye=Fe.index+Ke.length}return ye<Ne.length&&ae.push(Ne.slice(ye)),ae}function j(Ne,I=!0){if(Ne.Regex!==void 0){let ae=Ne.Regex.replace(/\\([#&~])/g,"$1");for(const[ye,Fe]of ge)ae=ae.replaceAll(ye,Fe);return new RegExp(ae,"gu")}else if(Ne.String!==void 0){const ae=(0,z.escapeRegExp)(Ne.String);return new RegExp(I?ae:`(${ae})`,"gu")}else return console.warn("Unknown pattern type:",Ne),null}function re(Ne){return new Map(Object.entries(Ne))}function ce(Ne){const I=Ne.dims;switch(I.length){case 1:return Ne.tolist();case 2:if(I[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Ne.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${I.length}.`)}}function me(Ne){return Ne.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Y(Ne){return Ne.replace(new RegExp("\\p{M}","gu"),"")}function q(Ne){return Y(Ne.toLowerCase())}function ne(Ne){return Ne>=19968&&Ne<=40959||Ne>=13312&&Ne<=19903||Ne>=131072&&Ne<=173791||Ne>=173824&&Ne<=177983||Ne>=177984&&Ne<=178207||Ne>=178208&&Ne<=183983||Ne>=63744&&Ne<=64255||Ne>=194560&&Ne<=195103}function R(Ne,I,ae){const ye=[];let Fe=0;for(;Fe<Ne.length;){if(ye.push(Ne[Fe]),(I.get(Ne[Fe])??ae)!==ae){++Fe;continue}for(;++Fe<Ne.length&&(I.get(Ne[Fe])??ae)===ae;)I.get(ye.at(-1))!==ae&&(ye[ye.length-1]+=Ne[Fe])}return ye}function L(Ne){return Ne.match(/\S+/g)||[]}const T="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",S=new RegExp(`^[${T}]+$`,"gu"),U=".,!?…。，、।۔،",ge=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${U}])]+`,` ?[^\\s${U}]+`]]);class _e{constructor(I){this.content=I.content,this.id=I.id,this.single_word=I.single_word??!1,this.lstrip=I.lstrip??!1,this.rstrip=I.rstrip??!1,this.special=I.special??!1,this.normalized=I.normalized??null}}class ze extends y.Callable{constructor(I){super(),this.config=I,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(I,...ae){switch(I.type){case"WordPiece":return new Ie(I);case"Unigram":return new fe(I,...ae);case"BPE":return new Ge(I);default:if(I.vocab)return Array.isArray(I.vocab)?new fe(I,...ae):typeof I.vocab=="object"&&I.continuing_subword_prefix&&I.unk_token?new Ie(I):new He(I,...ae);throw new Error(`Unknown TokenizerModel type: ${I.type}`)}}_call(I){return I=this.encode(I),this.fuse_unk&&(I=R(I,this.tokens_to_ids,this.unk_token_id)),I}encode(I){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(I){return I.map(ae=>this.tokens_to_ids.get(ae)??this.unk_token_id)}convert_ids_to_tokens(I){return I.map(ae=>this.vocab[ae]??this.unk_token)}}class Ie extends ze{constructor(I){super(I),this.tokens_to_ids=re(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.max_input_chars_per_word=I.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[ae,ye]of this.tokens_to_ids)this.vocab[ye]=ae}encode(I){const ae=[];for(const ye of I){const Fe=[...ye];if(Fe.length>this.max_input_chars_per_word){ae.push(this.unk_token);continue}let Ke=!1,ht=0;const Ft=[];for(;ht<Fe.length;){let Rt=Fe.length,Lt=null;for(;ht<Rt;){let qt=Fe.slice(ht,Rt).join("");if(ht>0&&(qt=this.config.continuing_subword_prefix+qt),this.tokens_to_ids.has(qt)){Lt=qt;break}--Rt}if(Lt===null){Ke=!0;break}Ft.push(Lt),ht=Rt}Ke?ae.push(this.unk_token):ae.push(...Ft)}return ae}}class fe extends ze{constructor(I,ae){super(I);const ye=I.vocab.length;this.vocab=new Array(ye),this.scores=new Array(ye);for(let Fe=0;Fe<ye;++Fe)[this.vocab[Fe],this.scores[Fe]]=I.vocab[Fe];this.unk_token_id=I.unk_id,this.unk_token=this.vocab[I.unk_id],this.tokens_to_ids=new Map(this.vocab.map((Fe,Ke)=>[Fe,Ke])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ae.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,se.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new v.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(I){const ae=I.chars,ye=1;let Fe=0;for(;Fe<ae.length;){let Ke=!1;const ht=ae.slice(Fe).join(""),Ft=this.trie.commonPrefixSearch(ht);for(const Rt of Ft){const Lt=this.tokens_to_ids.get(Rt),qt=this.scores[Lt],ws=(0,z.len)(Rt);I.insert(Fe,ws,qt,Lt),!Ke&&ws===ye&&(Ke=!0)}Ke||I.insert(Fe,ye,this.unk_score,this.unk_token_id),Fe+=ye}}tokenize(I){const ae=new v.TokenLattice(I,this.bos_token_id,this.eos_token_id);return this.populateNodes(ae),ae.tokens()}encode(I){const ae=[];for(const ye of I){const Fe=this.tokenize(ye);ae.push(...Fe)}return ae}}const Be=(()=>{const Ne=[...Array.from({length:94},(Fe,Ke)=>Ke+33),...Array.from({length:12},(Fe,Ke)=>Ke+161),...Array.from({length:82},(Fe,Ke)=>Ke+174)],I=Ne.slice();let ae=0;for(let Fe=0;Fe<256;++Fe)Ne.includes(Fe)||(Ne.push(Fe),I.push(256+ae),ae+=1);const ye=I.map(Fe=>String.fromCharCode(Fe));return Object.fromEntries(Ne.map((Fe,Ke)=>[Fe,ye[Ke]]))})(),ve=(0,z.reverseDictionary)(Be);class Ge extends ze{constructor(I){super(I),this.tokens_to_ids=re(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ye,Fe]of this.tokens_to_ids)this.vocab[Fe]=ye;const ae=Array.isArray(I.merges[0]);this.merges=ae?I.merges:I.merges.map(ye=>ye.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ye,Fe)=>[JSON.stringify(ye),Fe])),this.end_of_word_suffix=I.end_of_word_suffix,this.continuing_subword_suffix=I.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(I){if(I.length===0)return[];const ae=this.cache.get(I);if(ae!==void 0)return ae;const ye=Array.from(I);this.end_of_word_suffix&&(ye[ye.length-1]+=this.end_of_word_suffix);let Fe=[];if(ye.length>1){const Ke=new v.PriorityQueue((Rt,Lt)=>Rt.score<Lt.score);let ht={token:ye[0],bias:0,prev:null,next:null},Ft=ht;for(let Rt=1;Rt<ye.length;++Rt){const Lt={bias:Rt/ye.length,token:ye[Rt],prev:Ft,next:null};Ft.next=Lt,this._add_node(Ke,Ft),Ft=Lt}for(;!Ke.isEmpty();){const Rt=Ke.pop();if(Rt.deleted||!Rt.next||Rt.next.deleted)continue;if(Rt.deleted=!0,Rt.next.deleted=!0,Rt.prev){const qt={...Rt.prev};Rt.prev.deleted=!0,Rt.prev=qt,qt.prev?qt.prev.next=qt:ht=qt}const Lt={token:Rt.token+Rt.next.token,bias:Rt.bias,prev:Rt.prev,next:Rt.next.next};Lt.prev?(Lt.prev.next=Lt,this._add_node(Ke,Lt.prev)):ht=Lt,Lt.next&&(Lt.next.prev=Lt,this._add_node(Ke,Lt))}for(let Rt=ht;Rt!==null;Rt=Rt.next)Fe.push(Rt.token)}else Fe=ye;if(this.continuing_subword_suffix)for(let Ke=0;Ke<Fe.length-1;++Ke)Fe[Ke]+=this.continuing_subword_suffix;return this.cache.set(I,Fe),Fe}_add_node(I,ae){const ye=this.bpe_ranks.get(JSON.stringify([ae.token,ae.next.token]));ye!==void 0&&(ae.score=ye+ae.bias,I.push(ae))}encode(I){const ae=[];for(const ye of I){if(this.ignore_merges&&this.tokens_to_ids.has(ye)){ae.push(ye);continue}const Fe=this.bpe(ye);for(const Ke of Fe)if(this.tokens_to_ids.has(Ke))ae.push(Ke);else if(this.byte_fallback){const ht=Array.from(this.text_encoder.encode(Ke)).map(Ft=>`<0x${Ft.toString(16).toUpperCase().padStart(2,"0")}>`);ht.every(Ft=>this.tokens_to_ids.has(Ft))?ae.push(...ht):ae.push(this.unk_token)}else ae.push(this.unk_token)}return ae}}class He extends ze{constructor(I,ae){super(I),this.tokens_to_ids=re(ae.target_lang?I.vocab[ae.target_lang]:I.vocab),this.bos_token=ae.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ae.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=ae.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=ae.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ye,Fe]of this.tokens_to_ids)this.vocab[Fe]=ye}encode(I){return I}}class Ve extends y.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"BertNormalizer":return new rt(I);case"Precompiled":return new zs(I);case"Sequence":return new de(I);case"Replace":return new wt(I);case"NFC":return new lt(I);case"NFKC":return new Ae(I);case"NFKD":return new ee(I);case"Strip":return new Me(I);case"StripAccents":return new Ue(I);case"Lowercase":return new xe(I);case"Prepend":return new dt(I);default:throw new Error(`Unknown Normalizer type: ${I.type}`)}}normalize(I){throw Error("normalize should be implemented in subclass.")}_call(I){return this.normalize(I)}}class wt extends Ve{normalize(I){const ae=j(this.config.pattern);return ae===null?I:I.replaceAll(ae,this.config.content)}}class lt extends Ve{normalize(I){return I=I.normalize("NFC"),I}}class Ae extends Ve{normalize(I){return I=I.normalize("NFKC"),I}}class ee extends Ve{normalize(I){return I=I.normalize("NFKD"),I}}class Me extends Ve{normalize(I){return this.config.strip_left&&this.config.strip_right?I=I.trim():(this.config.strip_left&&(I=I.trimStart()),this.config.strip_right&&(I=I.trimEnd())),I}}class Ue extends Ve{normalize(I){return I=Y(I),I}}class xe extends Ve{normalize(I){return I=I.toLowerCase(),I}}class dt extends Ve{normalize(I){return I=this.config.prepend+I,I}}class de extends Ve{constructor(I){super(I),this.normalizers=I.normalizers.map(ae=>Ve.fromConfig(ae))}normalize(I){return this.normalizers.reduce((ae,ye)=>ye.normalize(ae),I)}}class rt extends Ve{_tokenize_chinese_chars(I){const ae=[];for(let ye=0;ye<I.length;++ye){const Fe=I[ye],Ke=Fe.charCodeAt(0);ne(Ke)?(ae.push(" "),ae.push(Fe),ae.push(" ")):ae.push(Fe)}return ae.join("")}stripAccents(I){return I.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(I){switch(I){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(I)}}_clean_text(I){const ae=[];for(const ye of I){const Fe=ye.charCodeAt(0);Fe===0||Fe===65533||this._is_control(ye)||(/^\s$/.test(ye)?ae.push(" "):ae.push(ye))}return ae.join("")}normalize(I){return this.config.clean_text&&(I=this._clean_text(I)),this.config.handle_chinese_chars&&(I=this._tokenize_chinese_chars(I)),this.config.lowercase?(I=I.toLowerCase(),this.config.strip_accents!==!1&&(I=this.stripAccents(I))):this.config.strip_accents&&(I=this.stripAccents(I)),I}}class ot extends y.Callable{static fromConfig(I){if(I===null)return null;switch(I.type){case"BertPreTokenizer":return new we(I);case"Sequence":return new tr(I);case"Whitespace":return new pr(I);case"WhitespaceSplit":return new zr(I);case"Metaspace":return new Jt(I);case"ByteLevel":return new Oe(I);case"Split":return new it(I);case"Punctuation":return new at(I);case"Digits":return new nt(I);case"Replace":return new en(I);default:throw new Error(`Unknown PreTokenizer type: ${I.type}`)}}pre_tokenize_text(I,ae){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(I,ae){return(Array.isArray(I)?I.map(ye=>this.pre_tokenize_text(ye,ae)):this.pre_tokenize_text(I,ae)).flat()}_call(I,ae){return this.pre_tokenize(I,ae)}}class we extends ot{constructor(I){super(),this.pattern=new RegExp(`[^\\s${T}]+|[${T}]`,"gu")}pre_tokenize_text(I,ae){return I.trim().match(this.pattern)||[]}}class Oe extends ot{constructor(I){super(),this.config=I,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Be,this.text_encoder=new TextEncoder}pre_tokenize_text(I,ae){return this.add_prefix_space&&!I.startsWith(" ")&&(I=" "+I),(this.use_regex?I.match(this.pattern)||[]:[I]).map(Fe=>Array.from(this.text_encoder.encode(Fe),Ke=>this.byte_encoder[Ke]).join(""))}}class it extends ot{constructor(I){super(),this.config=I,this.pattern=j(this.config.pattern,this.config.invert)}pre_tokenize_text(I,ae){var ye;return this.pattern===null?[]:this.config.invert?I.match(this.pattern)||[]:((ye=this.config.behavior)==null?void 0:ye.toLowerCase())==="removed"?I.split(this.pattern).filter(Fe=>Fe):C(I,this.pattern)}}class at extends ot{constructor(I){super(),this.config=I,this.pattern=new RegExp(`[^${T}]+|[${T}]+`,"gu")}pre_tokenize_text(I,ae){return I.match(this.pattern)||[]}}class nt extends ot{constructor(I){super(),this.config=I;const ae=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(ae,"gu")}pre_tokenize_text(I,ae){return I.match(this.pattern)||[]}}class st extends y.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"TemplateProcessing":return new At(I);case"ByteLevel":return new vt(I);case"RobertaProcessing":return new $t(I);case"BertProcessing":return new yt(I);case"Sequence":return new Dt(I);default:throw new Error(`Unknown PostProcessor type: ${I.type}`)}}post_process(I,...ae){throw Error("post_process should be implemented in subclass.")}_call(I,...ae){return this.post_process(I,...ae)}}class yt extends st{constructor(I){super(I),this.cls=I.cls[0],this.sep=I.sep[0]}post_process(I,ae=null,{add_special_tokens:ye=!0}={}){ye&&(I=(0,z.mergeArrays)([this.cls],I,[this.sep]));let Fe=new Array(I.length).fill(0);if(ae!==null){const Ke=ye&&this instanceof $t?[this.sep]:[],ht=ye?[this.sep]:[];I=(0,z.mergeArrays)(I,Ke,ae,ht),Fe=(0,z.mergeArrays)(Fe,new Array(ae.length+Ke.length+ht.length).fill(1))}return{tokens:I,token_type_ids:Fe}}}class $t extends yt{}class At extends st{constructor(I){super(I),this.single=I.single,this.pair=I.pair}post_process(I,ae=null,{add_special_tokens:ye=!0}={}){const Fe=ae===null?this.single:this.pair;let Ke=[],ht=[];for(const Ft of Fe)"SpecialToken"in Ft?ye&&(Ke.push(Ft.SpecialToken.id),ht.push(Ft.SpecialToken.type_id)):"Sequence"in Ft&&(Ft.Sequence.id==="A"?(Ke=(0,z.mergeArrays)(Ke,I),ht=(0,z.mergeArrays)(ht,new Array(I.length).fill(Ft.Sequence.type_id))):Ft.Sequence.id==="B"&&(Ke=(0,z.mergeArrays)(Ke,ae),ht=(0,z.mergeArrays)(ht,new Array(ae.length).fill(Ft.Sequence.type_id))));return{tokens:Ke,token_type_ids:ht}}}class vt extends st{post_process(I,ae=null){return ae&&(I=(0,z.mergeArrays)(I,ae)),{tokens:I}}}class Dt extends st{constructor(I){super(I),this.processors=I.processors.map(ae=>st.fromConfig(ae))}post_process(I,ae=null,ye={}){let Fe;for(const Ke of this.processors)if(Ke instanceof vt)I=Ke.post_process(I).tokens,ae&&(ae=Ke.post_process(ae).tokens);else{const ht=Ke.post_process(I,ae,ye);I=ht.tokens,Fe=ht.token_type_ids}return{tokens:I,token_type_ids:Fe}}}class G extends y.Callable{constructor(I){super(),this.config=I,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=I.trim_offsets}static fromConfig(I){if(I===null)return null;switch(I.type){case"WordPiece":return new tt(I);case"Metaspace":return new $s(I);case"ByteLevel":return new ut(I);case"Replace":return new pe(I);case"ByteFallback":return new te(I);case"Fuse":return new Te(I);case"Strip":return new We(I);case"Sequence":return new Ot(I);case"CTC":return new Et(I);case"BPEDecoder":return new Vt(I);default:throw new Error(`Unknown Decoder type: ${I.type}`)}}_call(I){return this.decode(I)}decode(I){return this.decode_chain(I).join("")}decode_chain(I){throw Error("`decode_chain` should be implemented in subclass.")}}class pe extends G{decode_chain(I){const ae=j(this.config.pattern);return ae===null?I:I.map(ye=>ye.replaceAll(ae,this.config.content))}}class te extends G{constructor(I){super(I),this.text_decoder=new TextDecoder}decode_chain(I){const ae=[];let ye=[];for(const Fe of I){let Ke=null;if(Fe.length===6&&Fe.startsWith("<0x")&&Fe.endsWith(">")){const ht=parseInt(Fe.slice(3,5),16);isNaN(ht)||(Ke=ht)}if(Ke!==null)ye.push(Ke);else{if(ye.length>0){const ht=this.text_decoder.decode(Uint8Array.from(ye));ae.push(ht),ye=[]}ae.push(Fe)}}if(ye.length>0){const Fe=this.text_decoder.decode(Uint8Array.from(ye));ae.push(Fe),ye=[]}return ae}}class Te extends G{decode_chain(I){return[I.join("")]}}class We extends G{constructor(I){super(I),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(I){return I.map(ae=>{let ye=0;for(let Ke=0;Ke<this.start&&ae[Ke]===this.content;++Ke){ye=Ke+1;continue}let Fe=ae.length;for(let Ke=0;Ke<this.stop;++Ke){const ht=ae.length-Ke-1;if(ae[ht]===this.content){Fe=ht;continue}else break}return ae.slice(ye,Fe)})}}class tt extends G{constructor(I){super(I),this.cleanup=I.cleanup}decode_chain(I){return I.map((ae,ye)=>(ye!==0&&(ae.startsWith(this.config.prefix)?ae=ae.replace(this.config.prefix,""):ae=" "+ae),this.cleanup&&(ae=me(ae)),ae))}}class ut extends G{constructor(I){super(I),this.byte_decoder=ve,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(I){const ae=I.join(""),ye=new Uint8Array([...ae].map(Ke=>this.byte_decoder[Ke]));return this.text_decoder.decode(ye)}decode_chain(I){const ae=[];let ye=[];for(const Fe of I)this.added_tokens.find(Ke=>Ke.content===Fe)!==void 0?(ye.length>0&&(ae.push(this.convert_tokens_to_string(ye)),ye=[]),ae.push(Fe)):ye.push(Fe);return ye.length>0&&ae.push(this.convert_tokens_to_string(ye)),ae}}class Et extends G{constructor(I){super(I),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(I){if(I.length===0)return"";const ae=[I[0]];for(let Ke=1;Ke<I.length;++Ke)I[Ke]!==ae.at(-1)&&ae.push(I[Ke]);let Fe=ae.filter(Ke=>Ke!==this.pad_token).join("");return this.cleanup&&(Fe=me(Fe).replaceAll(this.word_delimiter_token," ").trim()),Fe}decode_chain(I){return[this.convert_tokens_to_string(I)]}}class Ot extends G{constructor(I){super(I),this.decoders=I.decoders.map(ae=>G.fromConfig(ae))}decode_chain(I){return this.decoders.reduce((ae,ye)=>ye.decode_chain(ae),I)}}class Vt extends G{constructor(I){super(I),this.suffix=this.config.suffix}decode_chain(I){return I.map((ae,ye)=>ae.replaceAll(this.suffix,ye===I.length-1?"":" "))}}class Ht extends G{decode_chain(I){let ae="";for(let ye=1;ye<I.length;ye+=2)ae+=I[ye];return[ae]}}class Jt extends ot{constructor(I){super(),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement,this.strRep=I.str_rep||this.replacement,this.prepend_scheme=I.prepend_scheme??"always"}pre_tokenize_text(I,{section_index:ae=void 0}={}){let ye=I.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ye.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&ae===0)&&(ye=this.strRep+ye),[ye]}}class $s extends G{constructor(I){super(I),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement}decode_chain(I){const ae=[];for(let ye=0;ye<I.length;++ye){let Fe=I[ye].replaceAll(this.replacement," ");this.addPrefixSpace&&ye==0&&Fe.startsWith(" ")&&(Fe=Fe.substring(1)),ae.push(Fe)}return ae}}class zs extends Ve{constructor(I){super(I),this.charsmap=I.precompiled_charsmap}normalize(I){return I=I.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),I=I.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),I.includes("～")?I=I.split("～").map(ye=>ye.normalize("NFKC")).join("～"):I=I.normalize("NFKC"),I}}class tr extends ot{constructor(I){super(),this.tokenizers=I.pretokenizers.map(ae=>ot.fromConfig(ae))}pre_tokenize_text(I,ae){return this.tokenizers.reduce((ye,Fe)=>Fe.pre_tokenize(ye,ae),[I])}}class pr extends ot{constructor(I){super()}pre_tokenize_text(I,ae){return I.match(/\w+|[^\w\s]+/g)||[]}}class zr extends ot{constructor(I){super()}pre_tokenize_text(I,ae){return L(I)}}class en extends ot{constructor(I){super(),this.config=I,this.pattern=j(this.config.pattern),this.content=this.config.content}pre_tokenize_text(I,ae){return this.pattern===null?[I]:[I.replaceAll(this.pattern,this.config.content)]}}const Qr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function _r(Ne,I,ae,ye){for(const Fe of Object.keys(Ne)){const Ke=I-Ne[Fe].length,ht=ae(Fe),Ft=new Array(Ke).fill(ht);Ne[Fe]=ye==="right"?(0,z.mergeArrays)(Ne[Fe],Ft):(0,z.mergeArrays)(Ft,Ne[Fe])}}function qr(Ne,I){for(const ae of Object.keys(Ne))Ne[ae].length=I}class ns extends y.Callable{constructor(ae,ye){super();ke(this,"return_token_type_ids",!1);ke(this,"padding_side","right");this._tokenizer_config=ye,this.normalizer=Ve.fromConfig(ae.normalizer),this.pre_tokenizer=ot.fromConfig(ae.pre_tokenizer),this.model=ze.fromConfig(ae.model,ye),this.post_processor=st.fromConfig(ae.post_processor),this.decoder=G.fromConfig(ae.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const Fe of ae.added_tokens){const Ke=new _e(Fe);this.added_tokens.push(Ke),this.model.tokens_to_ids.set(Ke.content,Ke.id),this.model.vocab[Ke.id]=Ke.content,Ke.special&&(this.special_tokens.push(Ke.content),this.all_special_ids.push(Ke.id))}if(this.additional_special_tokens=ye.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((Fe,Ke)=>Ke.content.length-Fe.content.length).map(Fe=>`${Fe.lstrip?"\\s*":""}(${(0,z.escapeRegExp)(Fe.content)})${Fe.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=ye.model_max_length,this.remove_space=ye.remove_space,this.clean_up_tokenization_spaces=ye.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=ye.do_lowercase_and_remove_accent??!1,ye.padding_side&&(this.padding_side=ye.padding_side),this.legacy=!1,this.chat_template=ye.chat_template??null,Array.isArray(this.chat_template)){const Fe=Object.create(null);for(const{name:Ke,template:ht}of this.chat_template){if(typeof Ke!="string"||typeof ht!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');Fe[Ke]=ht}this.chat_template=Fe}this._compiled_template_cache=new Map}getToken(...ae){for(const ye of ae){const Fe=this._tokenizer_config[ye];if(Fe)if(typeof Fe=="object"){if(Fe.__type==="AddedToken")return Fe.content;throw Error(`Unknown token: ${Fe}`)}else return Fe}return null}static async from_pretrained(ae,{progress_callback:ye=null,config:Fe=null,cache_dir:Ke=null,local_files_only:ht=!1,revision:Ft="main",legacy:Rt=null}={}){const Lt=await E(ae,{progress_callback:ye,config:Fe,cache_dir:Ke,local_files_only:ht,revision:Ft,legacy:Rt});return new this(...Lt)}_call(ae,{text_pair:ye=null,add_special_tokens:Fe=!0,padding:Ke=!1,truncation:ht=null,max_length:Ft=null,return_tensor:Rt=!0,return_token_type_ids:Lt=null}={}){const qt=Array.isArray(ae);let ws;if(qt){if(ae.length===0)throw Error("text array must be non-empty");if(ye!==null){if(Array.isArray(ye)){if(ae.length!==ye.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");ws=ae.map((Bs,gr)=>this._encode_plus(Bs,{text_pair:ye[gr],add_special_tokens:Fe,return_token_type_ids:Lt}))}else ws=ae.map(Bs=>this._encode_plus(Bs,{add_special_tokens:Fe,return_token_type_ids:Lt}))}else{if(ae==null)throw Error("text may not be null or undefined");if(Array.isArray(ye))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");ws=[this._encode_plus(ae,{text_pair:ye,add_special_tokens:Fe,return_token_type_ids:Lt})]}if(Ft===null?Ke==="max_length"?Ft=this.model_max_length:Ft=(0,se.max)(ws.map(Bs=>Bs.input_ids.length))[0]:ht||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),Ft=Math.min(Ft,this.model_max_length??1/0),Ke||ht)for(let Bs=0;Bs<ws.length;++Bs)ws[Bs].input_ids.length!==Ft&&(ws[Bs].input_ids.length>Ft?ht&&qr(ws[Bs],Ft):Ke&&_r(ws[Bs],Ft,gr=>gr==="input_ids"?this.pad_token_id:0,this.padding_side));const Ws={};if(Rt){if(!(Ke&&ht)&&ws.some(gr=>{var as;for(const Ss of Object.keys(gr))if(gr[Ss].length!==((as=ws[0][Ss])==null?void 0:as.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Bs=[ws.length,ws[0].input_ids.length];for(const gr of Object.keys(ws[0]))Ws[gr]=new K.Tensor("int64",BigInt64Array.from(ws.flatMap(as=>as[gr]).map(BigInt)),Bs)}else{for(const Bs of Object.keys(ws[0]))Ws[Bs]=ws.map(gr=>gr[Bs]);if(!qt)for(const Bs of Object.keys(Ws))Ws[Bs]=Ws[Bs][0]}return Ws}_encode_text(ae){return ae===null?null:(this.added_tokens_regex?ae.split(this.added_tokens_regex).filter(Ke=>Ke):[ae]).map((Ke,ht)=>{if(this.added_tokens.find(Rt=>Rt.content===Ke)!==void 0)return Ke;{if(this.remove_space===!0&&(Ke=Ke.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Ke=q(Ke)),this.normalizer!==null&&(Ke=this.normalizer(Ke)),Ke.length===0)return[];const Rt=this.pre_tokenizer!==null?this.pre_tokenizer(Ke,{section_index:ht}):[Ke];return this.model(Rt)}}).flat()}_encode_plus(ae,{text_pair:ye=null,add_special_tokens:Fe=!0,return_token_type_ids:Ke=null}={}){const{tokens:ht,token_type_ids:Ft}=this._tokenize_helper(ae,{pair:ye,add_special_tokens:Fe}),Rt=this.model.convert_tokens_to_ids(ht),Lt={input_ids:Rt,attention_mask:new Array(Rt.length).fill(1)};return(Ke??this.return_token_type_ids)&&Ft&&(Lt.token_type_ids=Ft),Lt}_tokenize_helper(ae,{pair:ye=null,add_special_tokens:Fe=!1}={}){const Ke=this._encode_text(ae),ht=this._encode_text(ye);return this.post_processor?this.post_processor(Ke,ht,{add_special_tokens:Fe}):{tokens:(0,z.mergeArrays)(Ke??[],ht??[])}}tokenize(ae,{pair:ye=null,add_special_tokens:Fe=!1}={}){return this._tokenize_helper(ae,{pair:ye,add_special_tokens:Fe}).tokens}encode(ae,{text_pair:ye=null,add_special_tokens:Fe=!0,return_token_type_ids:Ke=null}={}){return this._encode_plus(ae,{text_pair:ye,add_special_tokens:Fe,return_token_type_ids:Ke}).input_ids}batch_decode(ae,ye={}){return ae instanceof K.Tensor&&(ae=ae.tolist()),ae.map(Fe=>this.decode(Fe,ye))}decode(ae,ye={}){if(ae instanceof K.Tensor&&(ae=ce(ae)),!Array.isArray(ae)||ae.length===0||!(0,z.isIntegralNumber)(ae[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(ae,ye)}decode_single(ae,{skip_special_tokens:ye=!1,clean_up_tokenization_spaces:Fe=null}){let Ke=this.model.convert_ids_to_tokens(ae);ye&&(Ke=Ke.filter(Ft=>!this.special_tokens.includes(Ft)));let ht=this.decoder?this.decoder(Ke):Ke.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(ht=ht.replaceAll(this.decoder.end_of_word_suffix," "),ye&&(ht=ht.trim())),(Fe??this.clean_up_tokenization_spaces)&&(ht=me(ht)),ht}get_chat_template({chat_template:ae=null,tools:ye=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const Fe=this.chat_template;if(ae!==null&&Object.hasOwn(Fe,ae))ae=Fe[ae];else if(ae===null)if(ye!==null&&"tool_use"in Fe)ae=Fe.tool_use;else if("default"in Fe)ae=Fe.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(Fe).sort()}.`)}else if(ae===null)if(this.chat_template)ae=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return ae}apply_chat_template(ae,{tools:ye=null,documents:Fe=null,chat_template:Ke=null,add_generation_prompt:ht=!1,tokenize:Ft=!0,padding:Rt=!1,truncation:Lt=!1,max_length:qt=null,return_tensor:ws=!0,return_dict:Ws=!1,tokenizer_kwargs:Bs={},...gr}={}){if(Ke=this.get_chat_template({chat_template:Ke,tools:ye}),typeof Ke!="string")throw Error(`chat_template must be a string, but got ${typeof Ke}`);let as=this._compiled_template_cache.get(Ke);as===void 0&&(as=new k.Template(Ke),this._compiled_template_cache.set(Ke,as));const Ss=Object.create(null);for(const Pr of Qr){const et=this.getToken(Pr);et&&(Ss[Pr]=et)}const Ur=as.render({messages:ae,add_generation_prompt:ht,tools:ye,documents:Fe,...Ss,...gr});if(Ft){const Pr=this._call(Ur,{add_special_tokens:!1,padding:Rt,truncation:Lt,max_length:qt,return_tensor:ws,...Bs});return Ws?Pr:Pr.input_ids}return Ur}}class xn extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class Gr extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class sr extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class Xr extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class B extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class c extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class l extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class n extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class u extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class _ extends ns{}class O extends ns{}class N extends ns{constructor(ae,ye){super(ae,ye);ke(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class X extends ns{constructor(){super(...arguments);ke(this,"return_token_type_ids",!0)}}class ie extends ns{}class je extends ns{}class be extends ns{}class Ze extends ns{constructor(I,ae){super(I,ae),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ye=>this.languageRegex.test(ye)),this.lang_to_token=ye=>ye}_build_translation_inputs(I,ae,ye){return Mt(this,I,ae,ye)}}class Ct extends Ze{}class qe extends ns{}class mt extends ns{}const bt="▁";class Ce extends ns{constructor(ae,ye){super(ae,ye);ke(this,"padding_side","left");this.legacy=ye.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Jt({replacement:bt,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(ae){if(ae===null)return null;if(this.legacy||ae.length===0)return super._encode_text(ae);let ye=super._encode_text(bt+ae.replaceAll(bt," "));return ye.length>1&&ye[0]===bt&&this.special_tokens.includes(ye[1])&&(ye=ye.slice(1)),ye}}class St extends ns{}class Kt extends ns{}class ps extends ns{}class gs extends ns{}class Zs extends ns{}class es extends ns{}class is extends ns{}class qs extends ns{}class Re extends ns{}function Mt(Ne,I,ae,ye){if(!("language_codes"in Ne)||!Array.isArray(Ne.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Ne)||!(Ne.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Ne)||typeof Ne.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const Fe=ye.src_lang,Ke=ye.tgt_lang;if(!Ne.language_codes.includes(Ke))throw new Error(`Target language code "${Ke}" is not valid. Must be one of: {${Ne.language_codes.join(", ")}}`);if(Fe!==void 0){if(!Ne.language_codes.includes(Fe))throw new Error(`Source language code "${Fe}" is not valid. Must be one of: {${Ne.language_codes.join(", ")}}`);for(const ht of Ne.post_processor.config.single)if("SpecialToken"in ht&&Ne.languageRegex.test(ht.SpecialToken.id)){ht.SpecialToken.id=Ne.lang_to_token(Fe);break}}return ye.forced_bos_token_id=Ne.model.convert_tokens_to_ids([Ne.lang_to_token(Ke)])[0],Ne._call(I,ae)}class zt extends ns{constructor(I,ae){super(I,ae),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ye=>this.languageRegex.test(ye)),this.lang_to_token=ye=>ye}_build_translation_inputs(I,ae,ye){return Mt(this,I,ae,ye)}}class kt extends ns{constructor(I,ae){super(I,ae),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ye=>this.languageRegex.test(ye)).map(ye=>ye.slice(2,-2)),this.lang_to_token=ye=>`__${ye}__`}_build_translation_inputs(I,ae,ye){return Mt(this,I,ae,ye)}}class Hs extends ns{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(I,{return_timestamps:ae=!1,return_language:ye=!1,time_precision:Fe=null,force_full_sequences:Ke=!0}={}){if(Fe===null)throw Error("Must specify time_precision");let ht=null;const Ft=ae==="word";function Rt(){return{language:ht,timestamp:[null,null],text:""}}const Lt=[];let qt=Rt(),ws=0;const Ws=this.timestamp_begin,gr=Ws+1500;let as=[],Ss=[],Ur=!1,Pr=null;const et=new Set(this.all_special_ids);for(const ur of I){const Or=ur.tokens,rs=Ft?ur.token_timestamps:null;let Kr=null,tn=Ws;if("stride"in ur){const[Ut,vs,yr]=ur.stride;if(ws-=vs,Pr=Ut-yr,vs&&(tn=vs/Fe+Ws),yr)for(let dr=Or.length-1;dr>=0;--dr){const Cr=Number(Or[dr]);if(Cr>=Ws){if(Kr!==null&&(Cr-Ws)*Fe<Pr)break;Kr=Cr}}}let Gs=[],cr=[];for(let Ut=0;Ut<Or.length;++Ut){const vs=Number(Or[Ut]);if(et.has(vs)){const yr=this.decode([vs]),dr=x.WHISPER_LANGUAGE_MAPPING.get(yr.slice(2,-2));if(dr!==void 0){if(ht!==null&&dr!==ht&&!ae){as.push(Gs);const Cr=this.findLongestCommonSequence(as)[0],Zt=this.decode(Cr);qt.text=Zt,Lt.push(qt),as=[],Gs=[],qt=Rt()}ht=qt.language=dr}}else if(vs>=Ws&&vs<=gr){const yr=(vs-Ws)*Fe+ws,dr=(0,se.round)(yr,2);if(Kr!==null&&vs>=Kr)Ur=!0;else if(Ur||as.length>0&&vs<tn)Ur=!1;else if(qt.timestamp[0]===null)qt.timestamp[0]=dr;else if(dr!==qt.timestamp[0]){qt.timestamp[1]=dr,as.push(Gs),Ft&&Ss.push(cr);const[Cr,Zt]=this.findLongestCommonSequence(as,Ss),En=this.decode(Cr);qt.text=En,Ft&&(qt.words=this.collateWordTimestamps(Cr,Zt,ht)),Lt.push(qt),as=[],Gs=[],Ss=[],cr=[],qt=Rt()}}else if(Gs.push(vs),Ft){let yr=(0,se.round)(rs[Ut]+ws,2),dr;if(Ut+1<rs.length){dr=(0,se.round)(rs[Ut+1]+ws,2);const Cr=this.decode([vs]);S.test(Cr)&&(dr=(0,se.round)(Math.min(yr+Fe,dr),2))}else dr=null;cr.push([yr,dr])}}if("stride"in ur){const[Ut,vs,yr]=ur.stride;ws+=Ut-yr}Gs.length>0?(as.push(Gs),Ft&&Ss.push(cr)):as.every(Ut=>Ut.length===0)&&(qt=Rt(),as=[],Gs=[],Ss=[],cr=[])}if(as.length>0){if(Ke&&ae)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[ur,Or]=this.findLongestCommonSequence(as,Ss),rs=this.decode(ur);qt.text=rs,Ft&&(qt.words=this.collateWordTimestamps(ur,Or,ht)),Lt.push(qt)}let Br=Object.create(null);const hn=Lt.map(ur=>ur.text).join("");if(ae||ye){for(let ur=0;ur<Lt.length;++ur){const Or=Lt[ur];ae||delete Or.timestamp,ye||delete Or.language}if(Ft){const ur=[];for(const Or of Lt)for(const rs of Or.words)ur.push(rs);Br={chunks:ur}}else Br={chunks:Lt}}return[hn,Br]}findLongestCommonSequence(I,ae=null){let ye=I[0],Fe=ye.length,Ke=[];const ht=Array.isArray(ae)&&ae.length>0;let Ft=ht?[]:null,Rt=ht?ae[0]:null;for(let Lt=1;Lt<I.length;++Lt){const qt=I[Lt];let ws=0,Ws=[Fe,Fe,0,0];const Bs=qt.length;for(let Br=1;Br<Fe+Bs;++Br){const hn=Math.max(0,Fe-Br),ur=Math.min(Fe,Fe+Bs-Br),Or=ye.slice(hn,ur),rs=Math.max(0,Br-Fe),Kr=Math.min(Bs,Br),tn=qt.slice(rs,Kr);if(Or.length!==tn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Gs;ht?Gs=Or.filter((vs,yr)=>vs===tn[yr]&&Rt[hn+yr]<=ae[Lt][rs+yr]).length:Gs=Or.filter((vs,yr)=>vs===tn[yr]).length;const cr=Br/1e4,Ut=Gs/Br+cr;Gs>1&&Ut>ws&&(ws=Ut,Ws=[hn,ur,rs,Kr])}const[gr,as,Ss,Ur]=Ws,Pr=Math.floor((as+gr)/2),et=Math.floor((Ur+Ss)/2);Ke.push(...ye.slice(0,Pr)),ye=qt.slice(et),Fe=ye.length,ht&&(Ft.push(...Rt.slice(0,Pr)),Rt=ae[Lt].slice(et))}return Ke.push(...ye),ht?(Ft.push(...Rt),[Ke,Ft]):[Ke,[]]}collateWordTimestamps(I,ae,ye){const[Fe,Ke,ht]=this.combineTokensIntoWords(I,ye),Ft=[];for(let Rt=0;Rt<Fe.length;++Rt){const Lt=ht[Rt];Ft.push({text:Fe[Rt],timestamp:[ae[Lt.at(0)][0],ae[Lt.at(-1)][1]]})}return Ft}combineTokensIntoWords(I,ae,ye=`"'“¡¿([{-`,Fe=`"'.。,，!！?？:：”)]}、`){ae=ae??"english";let Ke,ht,Ft;return["chinese","japanese","thai","lao","myanmar"].includes(ae)?[Ke,ht,Ft]=this.splitTokensOnUnicode(I):[Ke,ht,Ft]=this.splitTokensOnSpaces(I),this.mergePunctuations(Ke,ht,Ft,ye,Fe)}decode(I,ae){let ye;return ae!=null&&ae.decode_with_timestamps?(I instanceof K.Tensor&&(I=ce(I)),ye=this.decodeWithTimestamps(I,ae)):ye=super.decode(I,ae),ye}decodeWithTimestamps(I,ae){const ye=(ae==null?void 0:ae.time_precision)??.02,Fe=Array.from(this.all_special_ids).at(-1)+1;let Ke=[[]];for(let ht of I)if(ht=Number(ht),ht>=Fe){const Ft=((ht-Fe)*ye).toFixed(2);Ke.push(`<|${Ft}|>`),Ke.push([])}else Ke[Ke.length-1].push(ht);return Ke=Ke.map(ht=>typeof ht=="string"?ht:super.decode(ht,ae)),Ke.join("")}splitTokensOnUnicode(I){const ae=this.decode(I,{decode_with_timestamps:!0}),ye="�",Fe=[],Ke=[],ht=[];let Ft=[],Rt=[],Lt=0;for(let qt=0;qt<I.length;++qt){const ws=I[qt];Ft.push(ws),Rt.push(qt);const Ws=this.decode(Ft,{decode_with_timestamps:!0});(!Ws.includes(ye)||ae[Lt+Ws.indexOf(ye)]===ye)&&(Fe.push(Ws),Ke.push(Ft),ht.push(Rt),Ft=[],Rt=[],Lt+=Ws.length)}return[Fe,Ke,ht]}splitTokensOnSpaces(I){const[ae,ye,Fe]=this.splitTokensOnUnicode(I),Ke=[],ht=[],Ft=[],Rt=new RegExp(`^[${T}]$`,"gu");for(let Lt=0;Lt<ae.length;++Lt){const qt=ae[Lt],ws=ye[Lt],Ws=Fe[Lt],Bs=ws[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),gr=qt.startsWith(" "),as=qt.trim(),Ss=Rt.test(as);if(Bs||gr||Ss||Ke.length===0)Ke.push(qt),ht.push(ws),Ft.push(Ws);else{const Ur=Ke.length-1;Ke[Ur]+=qt,ht[Ur].push(...ws),Ft[Ur].push(...Ws)}}return[Ke,ht,Ft]}mergePunctuations(I,ae,ye,Fe,Ke){const ht=structuredClone(I),Ft=structuredClone(ae),Rt=structuredClone(ye);let Lt=ht.length-2,qt=ht.length-1;for(;Lt>=0;)ht[Lt].startsWith(" ")&&Fe.includes(ht[Lt].trim())?(ht[qt]=ht[Lt]+ht[qt],Ft[qt]=(0,z.mergeArrays)(Ft[Lt],Ft[qt]),Rt[qt]=(0,z.mergeArrays)(Rt[Lt],Rt[qt]),ht[Lt]="",Ft[Lt]=[],Rt[Lt]=[]):qt=Lt,--Lt;for(Lt=0,qt=1;qt<ht.length;)!ht[Lt].endsWith(" ")&&Ke.includes(ht[qt])?(ht[Lt]+=ht[qt],Ft[Lt]=(0,z.mergeArrays)(Ft[Lt],Ft[qt]),Rt[Lt]=(0,z.mergeArrays)(Rt[Lt],Rt[qt]),ht[qt]="",Ft[qt]=[],Rt[qt]=[]):Lt=qt,++qt;return[ht.filter(ws=>ws),Ft.filter(ws=>ws.length>0),Rt.filter(ws=>ws.length>0)]}}class Os extends ns{}class Qs extends ns{}class Ys extends ns{}class Gt extends ns{constructor(I,ae){super(I,ae),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ye=>this.languageRegex.test(ye)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(I){if(I===null)return null;const[ae,...ye]=I.trim().split(this.languageRegex);if(ye.length===0)return super._encode_text(ae);if(ye.length===2){const[Fe,Ke]=ye;return this.supported_language_codes.includes(Fe)||console.warn(`Unsupported language code "${Fe}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,z.mergeArrays)([Fe],super._encode_text(Ke))}}}class Ar extends ns{}class or extends ns{}class Nr extends ns{}class Vr extends ns{}class Ps extends ns{}class mr extends ns{constructor(I,ae){super(I,ae),this.decoder=new Ht({})}}class vr extends ns{}class Er extends ns{}class cs{static async from_pretrained(I,{progress_callback:ae=null,config:ye=null,cache_dir:Fe=null,local_files_only:Ke=!1,revision:ht="main",legacy:Ft=null}={}){var Ws;const[Rt,Lt]=await E(I,{progress_callback:ae,config:ye,cache_dir:Fe,local_files_only:Ke,revision:ht,legacy:Ft}),qt=((Ws=Lt.tokenizer_class)==null?void 0:Ws.replace(/Fast$/,""))??"PreTrainedTokenizer";let ws=this.TOKENIZER_CLASS_MAPPING[qt];return ws||(console.warn(`Unknown tokenizer class "${qt}", attempting to construct from base class.`),ws=ns),new ws(Rt,Lt)}}ke(cs,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:ie,DistilBertTokenizer:_,CamembertTokenizer:O,DebertaTokenizer:B,DebertaV2Tokenizer:c,BertTokenizer:xn,HerbertTokenizer:l,ConvBertTokenizer:n,RoFormerTokenizer:u,XLMTokenizer:N,ElectraTokenizer:X,MobileBertTokenizer:sr,SqueezeBertTokenizer:Xr,AlbertTokenizer:Gr,GPT2Tokenizer:je,BartTokenizer:be,MBartTokenizer:Ze,MBart50Tokenizer:Ct,RobertaTokenizer:qe,WhisperTokenizer:Hs,CodeGenTokenizer:Os,CLIPTokenizer:Qs,SiglipTokenizer:Ys,MarianTokenizer:Gt,BloomTokenizer:mt,NllbTokenizer:zt,M2M100Tokenizer:kt,LlamaTokenizer:Ce,CodeLlamaTokenizer:St,XLMRobertaTokenizer:Kt,MPNetTokenizer:ps,FalconTokenizer:gs,GPTNeoXTokenizer:Zs,EsmTokenizer:es,Wav2Vec2CTCTokenizer:Ar,BlenderbotTokenizer:or,BlenderbotSmallTokenizer:Nr,SpeechT5Tokenizer:Vr,NougatTokenizer:Ps,VitsTokenizer:mr,Qwen2Tokenizer:is,GemmaTokenizer:qs,Grok1Tokenizer:Re,CohereTokenizer:vr,MgpstrTokenizer:Er,PreTrainedTokenizer:ns})},"./src/utils/audio.js":(Le,P,r)=>{r.r(P),r.d(P,{RawAudio:()=>Ie,hamming:()=>C,hanning:()=>E,mel_filter_bank:()=>ne,read_audio:()=>k,spectrogram:()=>U,window_function:()=>ge});var y=r("./src/utils/hub.js"),z=r("./src/utils/maths.js"),V=r("./src/utils/core.js"),se=r("./src/env.js"),K=r("?7a2c"),v=r("./src/utils/tensor.js");async function k(fe,Be){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const ve=await(await(0,y.getFile)(fe)).arrayBuffer(),Ge=new AudioContext({sampleRate:Be});typeof Be>"u"&&console.warn(`No sampling rate provided, using default of ${Ge.sampleRate}Hz.`);const He=await Ge.decodeAudioData(ve);let Ve;if(He.numberOfChannels===2){const wt=Math.sqrt(2),lt=He.getChannelData(0),Ae=He.getChannelData(1);Ve=new Float32Array(lt.length);for(let ee=0;ee<He.length;++ee)Ve[ee]=wt*(lt[ee]+Ae[ee])/2}else Ve=He.getChannelData(0);return Ve}function x(fe,Be){if(fe<1)return new Float64Array;if(fe===1)return new Float64Array([1]);const ve=1-Be,Ge=2*Math.PI/(fe-1),He=new Float64Array(fe);for(let Ve=0;Ve<fe;++Ve)He[Ve]=Be-ve*Math.cos(Ve*Ge);return He}function E(fe){return x(fe,.5)}function C(fe){return x(fe,.54)}const j={htk:fe=>2595*Math.log10(1+fe/700),kaldi:fe=>1127*Math.log(1+fe/700),slaney:(fe,Be=1e3,ve=15,Ge=27/Math.log(6.4))=>fe>=Be?ve+Math.log(fe/Be)*Ge:3*fe/200};function re(fe,Be="htk"){const ve=j[Be];if(!ve)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof fe=="number"?ve(fe):fe.map(Ge=>ve(Ge))}const ce={htk:fe=>700*(10**(fe/2595)-1),kaldi:fe=>700*(Math.exp(fe/1127)-1),slaney:(fe,Be=1e3,ve=15,Ge=Math.log(6.4)/27)=>fe>=ve?Be*Math.exp(Ge*(fe-ve)):200*fe/3};function me(fe,Be="htk"){const ve=ce[Be];if(!ve)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof fe=="number"?ve(fe):fe.map(Ge=>ve(Ge))}function Y(fe,Be){const ve=Float64Array.from({length:Be.length-1},(wt,lt)=>Be[lt+1]-Be[lt]),Ge=Array.from({length:fe.length},()=>new Array(Be.length));for(let wt=0;wt<fe.length;++wt){const lt=Ge[wt];for(let Ae=0;Ae<Be.length;++Ae)lt[Ae]=Be[Ae]-fe[wt]}const He=Be.length-2,Ve=Array.from({length:He},()=>new Array(fe.length));for(let wt=0;wt<fe.length;++wt){const lt=Ge[wt];for(let Ae=0;Ae<He;++Ae){const ee=-lt[Ae]/ve[Ae],Me=lt[Ae+2]/ve[Ae+1];Ve[Ae][wt]=Math.max(0,Math.min(ee,Me))}}return Ve}function q(fe,Be,ve){const Ge=(Be-fe)/(ve-1);return Float64Array.from({length:ve},(He,Ve)=>fe+Ge*Ve)}function ne(fe,Be,ve,Ge,He,Ve=null,wt="htk",lt=!1){if(Ve!==null&&Ve!=="slaney")throw new Error('norm must be one of null or "slaney"');const Ae=re(ve,wt),ee=re(Ge,wt),Me=q(Ae,ee,Be+2);let Ue=me(Me,wt),xe;if(lt){const de=He/(fe*2);xe=re(Float64Array.from({length:fe},(rt,ot)=>ot*de),wt),Ue=Me}else xe=q(0,Math.floor(He/2),fe);const dt=Y(xe,Ue);if(Ve!==null&&Ve==="slaney")for(let de=0;de<Be;++de){const rt=dt[de],ot=2/(Ue[de+2]-Ue[de]);for(let we=0;we<fe;++we)rt[we]*=ot}return dt}function R(fe,Be,ve){const Ge=new fe.constructor(fe.length+Be+ve),He=fe.length-1;for(let Ve=0;Ve<fe.length;++Ve)Ge[Be+Ve]=fe[Ve];for(let Ve=1;Ve<=Be;++Ve)Ge[Be-Ve]=fe[(0,V.calculateReflectOffset)(Ve,He)];for(let Ve=1;Ve<=ve;++Ve)Ge[He+Be+Ve]=fe[(0,V.calculateReflectOffset)(He-Ve,He)];return Ge}function L(fe,Be,ve,Ge,He){if(ve<=0)throw new Error("reference must be greater than zero");if(Ge<=0)throw new Error("min_value must be greater than zero");ve=Math.max(Ge,ve);const Ve=Math.log10(ve);for(let wt=0;wt<fe.length;++wt)fe[wt]=Be*Math.log10(Math.max(Ge,fe[wt])-Ve);if(He!==null){if(He<=0)throw new Error("db_range must be greater than zero");const wt=(0,z.max)(fe)[0]-He;for(let lt=0;lt<fe.length;++lt)fe[lt]=Math.max(fe[lt],wt)}return fe}function T(fe,Be=1,ve=1e-5,Ge=null){return L(fe,20,Be,ve,Ge)}function S(fe,Be=1,ve=1e-10,Ge=null){return L(fe,10,Be,ve,Ge)}async function U(fe,Be,ve,Ge,{fft_length:He=null,power:Ve=1,center:wt=!0,pad_mode:lt="reflect",onesided:Ae=!0,preemphasis:ee=null,mel_filters:Me=null,mel_floor:Ue=1e-10,log_mel:xe=null,reference:dt=1,min_value:de=1e-10,db_range:rt=null,remove_dc_offset:ot=null,min_num_frames:we=null,max_num_frames:Oe=null,do_pad:it=!0,transpose:at=!1}={}){const nt=Be.length;if(He===null&&(He=ve),ve>He)throw Error(`frame_length (${ve}) may not be larger than fft_length (${He})`);if(nt!==ve)throw new Error(`Length of the window (${nt}) must equal frame_length (${ve})`);if(Ge<=0)throw new Error("hop_length must be greater than zero");if(Ve===null&&Me!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(wt){if(lt!=="reflect")throw new Error(`pad_mode="${lt}" not implemented yet.`);const tt=Math.floor((He-1)/2)+1;fe=R(fe,tt,tt)}let st=Math.floor(1+Math.floor((fe.length-ve)/Ge));we!==null&&st<we&&(st=we);const yt=Ae?Math.floor(He/2)+1:He;let $t=st,At=st;Oe!==null&&(Oe>st?it&&(At=Oe):At=$t=Oe);const vt=new z.FFT(He),Dt=new Float64Array(He),G=new Float64Array(vt.outputBufferSize),pe=new Float32Array(yt*At);for(let tt=0;tt<$t;++tt){const ut=tt*Ge,Et=Math.min(fe.length-ut,ve);Et!==ve&&Dt.fill(0,0,ve);for(let Ot=0;Ot<Et;++Ot)Dt[Ot]=fe[ut+Ot];if(ot){let Ot=0;for(let Ht=0;Ht<Et;++Ht)Ot+=Dt[Ht];const Vt=Ot/Et;for(let Ht=0;Ht<Et;++Ht)Dt[Ht]-=Vt}if(ee!==null){for(let Ot=Et-1;Ot>=1;--Ot)Dt[Ot]-=ee*Dt[Ot-1];Dt[0]*=1-ee}for(let Ot=0;Ot<Be.length;++Ot)Dt[Ot]*=Be[Ot];vt.realTransform(G,Dt);for(let Ot=0;Ot<yt;++Ot){const Vt=Ot<<1;pe[Ot*At+tt]=G[Vt]**2+G[Vt+1]**2}}if(Ve!==null&&Ve!==2){const tt=2/Ve;for(let ut=0;ut<pe.length;++ut)pe[ut]**=tt}const te=Me.length;let Te=await(0,v.matmul)(new v.Tensor("float32",Me.flat(),[te,yt]),new v.Tensor("float32",pe,[yt,At]));at&&(Te=Te.transpose(1,0));const We=Te.data;for(let tt=0;tt<We.length;++tt)We[tt]=Math.max(Ue,We[tt]);if(Ve!==null&&xe!==null){const tt=Math.min(We.length,$t*te);switch(xe){case"log":for(let ut=0;ut<tt;++ut)We[ut]=Math.log(We[ut]);break;case"log10":for(let ut=0;ut<tt;++ut)We[ut]=Math.log10(We[ut]);break;case"dB":if(Ve===1)T(We,dt,de,rt);else if(Ve===2)S(We,dt,de,rt);else throw new Error(`Cannot use log_mel option '${xe}' with power ${Ve}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${xe}'`)}}return Te}function ge(fe,Be,{periodic:ve=!0,frame_length:Ge=null,center:He=!0}={}){const Ve=ve?fe+1:fe;let wt;switch(Be){case"boxcar":wt=new Float64Array(Ve).fill(1);break;case"hann":case"hann_window":wt=E(Ve);break;case"hamming":wt=C(Ve);break;case"povey":wt=E(Ve).map(lt=>Math.pow(lt,.85));break;default:throw new Error(`Unknown window type ${Be}.`)}if(ve&&(wt=wt.subarray(0,fe)),Ge===null)return wt;if(fe>Ge)throw new Error(`Length of the window (${fe}) may not be larger than frame_length (${Ge})`);return wt}function _e(fe,Be){let ve=44;const Ge=new ArrayBuffer(ve+fe.length*4),He=new DataView(Ge);ze(He,0,"RIFF"),He.setUint32(4,36+fe.length*4,!0),ze(He,8,"WAVE"),ze(He,12,"fmt "),He.setUint32(16,16,!0),He.setUint16(20,3,!0),He.setUint16(22,1,!0),He.setUint32(24,Be,!0),He.setUint32(28,Be*4,!0),He.setUint16(32,4,!0),He.setUint16(34,32,!0),ze(He,36,"data"),He.setUint32(40,fe.length*4,!0);for(let Ve=0;Ve<fe.length;++Ve,ve+=4)He.setFloat32(ve,fe[Ve],!0);return Ge}function ze(fe,Be,ve){for(let Ge=0;Ge<ve.length;++Ge)fe.setUint8(Be+Ge,ve.charCodeAt(Ge))}class Ie{constructor(Be,ve){this.audio=Be,this.sampling_rate=ve}toWav(){return _e(this.audio,this.sampling_rate)}toBlob(){const Be=this.toWav();return new Blob([Be],{type:"audio/wav"})}async save(Be){let ve;if(se.apis.IS_BROWSER_ENV){if(se.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");ve=V.saveBlob}else if(se.apis.IS_FS_AVAILABLE)ve=async(Ge,He)=>{let Ve=await He.arrayBuffer();K.writeFileSync(Ge,Buffer.from(Ve))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await ve(Be,this.toBlob())}}},"./src/utils/constants.js":(Le,P,r)=>{r.r(P),r.d(P,{CHAT_TEMPLATE_NAME:()=>v,CONFIG_NAME:()=>z,FEATURE_EXTRACTOR_NAME:()=>V,GENERATION_CONFIG_NAME:()=>k,GITHUB_ISSUE_URL:()=>y,IMAGE_PROCESSOR_NAME:()=>se,PROCESSOR_NAME:()=>K});const y="https://github.com/huggingface/transformers.js/issues/new/choose",z="config.json",V="preprocessor_config.json",se=V,K="processor_config.json",v="chat_template.json",k="generation_config.json"},"./src/utils/core.js":(Le,P,r)=>{r.r(P),r.d(P,{calculateDimensions:()=>k,calculateReflectOffset:()=>j,count:()=>Y,dispatchCallback:()=>y,escapeRegExp:()=>V,isIntegralNumber:()=>K,isNullishDimension:()=>v,isTypedArray:()=>se,len:()=>me,mergeArrays:()=>E,pick:()=>ce,pop:()=>x,product:()=>C,reverseDictionary:()=>z,saveBlob:()=>re});function y(q,ne){q&&q(ne)}function z(q){return Object.fromEntries(Object.entries(q).map(([ne,R])=>[R,ne]))}function V(q){return q.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function se(q){var ne,R,L;return((L=(R=(ne=q==null?void 0:q.prototype)==null?void 0:ne.__proto__)==null?void 0:R.constructor)==null?void 0:L.name)==="TypedArray"}function K(q){return Number.isInteger(q)||typeof q=="bigint"}function v(q){return q==null||q===-1}function k(q){const ne=[];let R=q;for(;Array.isArray(R);)ne.push(R.length),R=R[0];return ne}function x(q,ne,R=void 0){const L=q[ne];if(L!==void 0)return delete q[ne],L;if(R===void 0)throw Error(`Key ${ne} does not exist in object.`);return R}function E(...q){return Array.prototype.concat.apply([],q)}function C(...q){return q.reduce((ne,R)=>ne.flatMap(L=>R.map(T=>[L,T])))}function j(q,ne){return Math.abs((q+ne)%(2*ne)-ne)}function re(q,ne){const R=URL.createObjectURL(ne),L=document.createElement("a");L.href=R,L.download=q,L.click(),L.remove(),URL.revokeObjectURL(R)}function ce(q,ne){return Object.assign({},...ne.map(R=>{if(q[R]!==void 0)return{[R]:q[R]}}))}function me(q){let ne=0;for(const R of q)++ne;return ne}function Y(q,ne){let R=0;for(const L of q)L===ne&&++R;return R}},"./src/utils/data-structures.js":(Le,P,r)=>{r.r(P),r.d(P,{CharTrie:()=>z,PriorityQueue:()=>y,TokenLattice:()=>se});class y{constructor(k=(E,C)=>E>C,x=1/0){this._heap=[],this._comparator=k,this._maxSize=x}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...k){return this.extend(k)}extend(k){for(const x of k)if(this.size<this._maxSize)this._heap.push(x),this._siftUp();else{const E=this._smallest();this._comparator(x,this._heap[E])&&(this._heap[E]=x,this._siftUpFrom(E))}return this.size}pop(){const k=this.peek(),x=this.size-1;return x>0&&this._swap(0,x),this._heap.pop(),this._siftDown(),k}replace(k){const x=this.peek();return this._heap[0]=k,this._siftDown(),x}_parent(k){return(k+1>>>1)-1}_left(k){return(k<<1)+1}_right(k){return k+1<<1}_greater(k,x){return this._comparator(this._heap[k],this._heap[x])}_swap(k,x){const E=this._heap[k];this._heap[k]=this._heap[x],this._heap[x]=E}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(k){for(;k>0&&this._greater(k,this._parent(k));)this._swap(k,this._parent(k)),k=this._parent(k)}_siftDown(){let k=0;for(;this._left(k)<this.size&&this._greater(this._left(k),k)||this._right(k)<this.size&&this._greater(this._right(k),k);){const x=this._right(k)<this.size&&this._greater(this._right(k),this._left(k))?this._right(k):this._left(k);this._swap(k,x),k=x}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class z{constructor(){this.root=V.default()}extend(k){for(const x of k)this.push(x)}push(k){let x=this.root;for(const E of k){let C=x.children.get(E);C===void 0&&(C=V.default(),x.children.set(E,C)),x=C}x.isLeaf=!0}*commonPrefixSearch(k){let x=this.root;if(x===void 0)return;let E="";for(const C of k){if(E+=C,x=x.children.get(C),x===void 0)return;x.isLeaf&&(yield E)}}}class V{constructor(k,x){this.isLeaf=k,this.children=x}static default(){return new V(!1,new Map)}}class se{constructor(k,x,E){this.chars=Array.from(k),this.len=this.chars.length,this.bosTokenId=x,this.eosTokenId=E,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const C=new K(this.bosTokenId,0,0,0,0),j=new K(this.eosTokenId,1,this.len,0,0);this.nodes.push(C.clone()),this.nodes.push(j.clone()),this.beginNodes[this.len].push(j),this.endNodes[0].push(C)}insert(k,x,E,C){const j=this.nodes.length,re=new K(C,j,k,x,E);this.beginNodes[k].push(re),this.endNodes[k+x].push(re),this.nodes.push(re)}viterbi(){const k=this.len;let x=0;for(;x<=k;){if(this.beginNodes[x].length==0)return[];for(let ce of this.beginNodes[x]){ce.prev=null;let me=0,Y=null;for(let q of this.endNodes[x]){const ne=q.backtraceScore+ce.score;(Y===null||ne>me)&&(Y=q.clone(),me=ne)}if(Y!==null)ce.prev=Y,ce.backtraceScore=me;else return[]}++x}const E=[],j=this.beginNodes[k][0].prev;if(j===null)return[];let re=j.clone();for(;re.prev!==null;)E.push(re.clone()),re=re.clone().prev.clone();return E.reverse(),E}piece(k){return this.chars.slice(k.pos,k.pos+k.length).join("")}tokens(){return this.viterbi().map(x=>this.piece(x))}tokenIds(){return this.viterbi().map(x=>x.tokenId)}}class K{constructor(k,x,E,C,j){this.tokenId=k,this.nodeId=x,this.pos=E,this.length=C,this.score=j,this.prev=null,this.backtraceScore=0}clone(){const k=new K(this.tokenId,this.nodeId,this.pos,this.length,this.score);return k.prev=this.prev,k.backtraceScore=this.backtraceScore,k}}},"./src/utils/devices.js":(Le,P,r)=>{r.r(P),r.d(P,{DEVICE_TYPES:()=>y});const y=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(Le,P,r)=>{r.r(P),r.d(P,{DATA_TYPES:()=>se,DEFAULT_DEVICE_DTYPE_MAPPING:()=>K,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>v,isWebGpuFp16Supported:()=>V});var y=r("./src/env.js"),z=r("./src/utils/devices.js");const V=function(){let k;return async function(){if(k===void 0)if(!y.apis.IS_WEBGPU_AVAILABLE)k=!1;else try{k=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{k=!1}return k}}(),se=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),K=Object.freeze({[z.DEVICE_TYPES.wasm]:se.q8}),v=Object.freeze({[se.fp32]:"",[se.fp16]:"_fp16",[se.int8]:"_int8",[se.uint8]:"_uint8",[se.q8]:"_quantized",[se.q4]:"_q4",[se.q4f16]:"_q4f16",[se.bnb4]:"_bnb4"})},"./src/utils/generic.js":(Le,P,r)=>{r.r(P),r.d(P,{Callable:()=>y});const y=class{constructor(){let z=function(...V){return z._call(...V)};return Object.setPrototypeOf(z,new.target.prototype)}_call(...z){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(Le,P,r)=>{r.r(P),r.d(P,{getFile:()=>x,getModelFile:()=>ce,getModelJSON:()=>me});var y=r("?7a2c"),z=r("?a42a"),V=r("./src/env.js"),se=r("./src/utils/core.js");const K={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class v{constructor(R){if(this.filePath=R,this.headers=new Headers,this.exists=y.existsSync(R),this.exists){this.status=200,this.statusText="OK";let L=y.statSync(R);this.headers.set("content-length",L.size.toString()),this.updateContentType();let T=this;this.body=new ReadableStream({start(S){T.arrayBuffer().then(U=>{S.enqueue(new Uint8Array(U)),S.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const R=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",K[R]??"application/octet-stream")}clone(){let R=new v(this.filePath);return R.exists=this.exists,R.status=this.status,R.statusText=this.statusText,R.headers=new Headers(this.headers),R}async arrayBuffer(){return(await y.promises.readFile(this.filePath)).buffer}async blob(){const R=await y.promises.readFile(this.filePath);return new Blob([R],{type:this.headers.get("content-type")})}async text(){return await y.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function k(ne,R=null,L=null){let T;try{T=new URL(ne)}catch{return!1}return!(R&&!R.includes(T.protocol)||L&&!L.includes(T.hostname))}async function x(ne){var R;if(V.env.useFS&&!k(ne,["http:","https:","blob:"]))return new v(ne);if(typeof process<"u"&&((R=process==null?void 0:process.release)==null?void 0:R.name)==="node"){const L=!!(Js!=null&&Js.TESTING_REMOTELY),T=V.env.version,S=new Headers;if(S.set("User-Agent",`transformers.js/${T}; is_ci/${L};`),k(ne,["http:","https:"],["huggingface.co","hf.co"])){const ge=(Js==null?void 0:Js.HF_TOKEN)??(Js==null?void 0:Js.HF_ACCESS_TOKEN);ge&&S.set("Authorization",`Bearer ${ge}`)}return fetch(ne,{headers:S})}else return fetch(ne)}const E={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function C(ne,R,L){if(!L)return null;const T=E[ne]??`Error (${ne}) occurred while trying to load file`;throw Error(`${T}: "${R}".`)}class j{constructor(R){this.path=R}async match(R){let L=z.join(this.path,R),T=new v(L);if(T.exists)return T}async put(R,L){const T=Buffer.from(await L.arrayBuffer());let S=z.join(this.path,R);try{await y.promises.mkdir(z.dirname(S),{recursive:!0}),await y.promises.writeFile(S,T)}catch(U){console.warn("An error occurred while writing the file to cache:",U)}}}async function re(ne,...R){for(let L of R)try{let T=await ne.match(L);if(T)return T}catch{continue}}async function ce(ne,R,L=!0,T={}){if(!V.env.allowLocalModels){if(T.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!V.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,se.dispatchCallback)(T.progress_callback,{status:"initiate",name:ne,file:R});let S;if(!S&&V.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{S=await caches.open("transformers-cache")}catch(wt){console.warn("An error occurred while opening the browser cache:",wt)}}if(!S&&V.env.useFSCache&&(S=new j(T.cache_dir??V.env.cacheDir)),!S&&V.env.useCustomCache){if(!V.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!V.env.customCache.match||!V.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");S=V.env.customCache}const U=T.revision??"main";let ge=q(ne,R),_e=q(V.env.localModelPath,ge),ze=q(V.env.remoteHost,V.env.remotePathTemplate.replaceAll("{model}",ne).replaceAll("{revision}",encodeURIComponent(U)),R),Ie=U==="main"?ge:q(ne,U,R),fe,Be=S instanceof j?Ie:ze,ve=!1,Ge;S&&(Ge=await re(S,_e,Be));const He=Ge!==void 0;if(Ge===void 0){if(V.env.allowLocalModels)if(k(ge,["http:","https:"])){if(T.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ge}.`);if(!V.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ge}.`)}else try{Ge=await x(_e),fe=_e}catch(lt){console.warn(`Unable to load from local path "${_e}": "${lt}"`)}if(Ge===void 0||Ge.status===404){if(T.local_files_only||!V.env.allowRemoteModels){if(L)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${_e}".`);return null}if(Ge=await x(ze),Ge.status!==200)return C(Ge.status,ze,L);fe=Be}ve=S&&typeof Response<"u"&&Ge instanceof Response&&Ge.status===200}(0,se.dispatchCallback)(T.progress_callback,{status:"download",name:ne,file:R});let Ve;return T.progress_callback?He&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Ve=new Uint8Array(await Ge.arrayBuffer()),(0,se.dispatchCallback)(T.progress_callback,{status:"progress",name:ne,file:R,progress:100,loaded:Ve.length,total:Ve.length})):Ve=await Y(Ge,wt=>{(0,se.dispatchCallback)(T.progress_callback,{status:"progress",name:ne,file:R,...wt})}):Ve=new Uint8Array(await Ge.arrayBuffer()),ve&&fe&&await S.match(fe)===void 0&&await S.put(fe,new Response(Ve,{headers:Ge.headers})).catch(wt=>{console.warn(`Unable to add response to browser cache: ${wt}.`)}),(0,se.dispatchCallback)(T.progress_callback,{status:"done",name:ne,file:R}),Ve}async function me(ne,R,L=!0,T={}){let S=await ce(ne,R,L,T);if(S===null)return{};let ge=new TextDecoder("utf-8").decode(S);return JSON.parse(ge)}async function Y(ne,R){const L=ne.headers.get("Content-Length");L===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let T=parseInt(L??"0"),S=new Uint8Array(T),U=0;const ge=ne.body.getReader();async function _e(){const{done:ze,value:Ie}=await ge.read();if(ze)return;let fe=U+Ie.length;if(fe>T){T=fe;let ve=new Uint8Array(T);ve.set(S),S=ve}S.set(Ie,U),U=fe;const Be=U/T*100;return R({progress:Be,loaded:U,total:T}),_e()}return await _e(),S}function q(...ne){return ne=ne.map((R,L)=>(L&&(R=R.replace(new RegExp("^/"),"")),L!==ne.length-1&&(R=R.replace(new RegExp("/$"),"")),R)),ne.join("/")}},"./src/utils/image.js":(Le,P,r)=>{r.r(P),r.d(P,{RawImage:()=>re,load_image:()=>ce});var y=r("./src/utils/core.js"),z=r("./src/utils/hub.js"),V=r("./src/env.js"),se=r("./src/utils/tensor.js"),K=r("?2b25");let v,k,x;const E=V.apis.IS_BROWSER_ENV||V.apis.IS_WEBWORKER_ENV;if(E)v=(me,Y)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(me,Y)},x=self.createImageBitmap,k=self.ImageData;else if(K)x=async me=>{const q=(await me.metadata()).channels,{data:ne,info:R}=await me.rotate().raw().toBuffer({resolveWithObject:!0}),L=new re(new Uint8ClampedArray(ne),R.width,R.height,R.channels);return q!==void 0&&q!==R.channels&&L.convert(q),L};else throw new Error("Unable to load image processing library.");const C={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},j=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class re{constructor(Y,q,ne,R){this.data=Y,this.width=q,this.height=ne,this.channels=R}get size(){return[this.width,this.height]}static async read(Y){if(Y instanceof re)return Y;if(typeof Y=="string"||Y instanceof URL)return await this.fromURL(Y);throw new Error(`Unsupported input type: ${typeof Y}`)}static fromCanvas(Y){if(!E)throw new Error("fromCanvas() is only supported in browser environments.");const ne=Y.getContext("2d").getImageData(0,0,Y.width,Y.height).data;return new re(ne,Y.width,Y.height,4)}static async fromURL(Y){const q=await(0,z.getFile)(Y);if(q.status!==200)throw new Error(`Unable to read image from "${Y}" (${q.status} ${q.statusText})`);const ne=await q.blob();return this.fromBlob(ne)}static async fromBlob(Y){if(E){const q=await x(Y),ne=v(q.width,q.height).getContext("2d");return ne.drawImage(q,0,0),new this(ne.getImageData(0,0,q.width,q.height).data,q.width,q.height,4)}else{const q=K(await Y.arrayBuffer());return await x(q)}}static fromTensor(Y,q="CHW"){if(Y.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${Y.dims.length} dimensions.`);if(q==="CHW")Y=Y.transpose(1,2,0);else if(q!=="HWC")throw new Error(`Unsupported channel format: ${q}`);if(!(Y.data instanceof Uint8ClampedArray||Y.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${Y.type}`);switch(Y.dims[2]){case 1:case 2:case 3:case 4:return new re(Y.data,Y.dims[1],Y.dims[0],Y.dims[2]);default:throw new Error(`Unsupported number of channels: ${Y.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const Y=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let q=0,ne=0;q<this.data.length;q+=this.channels){const R=this.data[q],L=this.data[q+1],T=this.data[q+2];Y[ne++]=Math.round(.2989*R+.587*L+.114*T)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(Y,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const Y=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let q=0,ne=0;q<this.data.length;++q)Y[ne++]=this.data[q],Y[ne++]=this.data[q],Y[ne++]=this.data[q];break;case 4:for(let q=0,ne=0;q<this.data.length;q+=4)Y[ne++]=this.data[q],Y[ne++]=this.data[q+1],Y[ne++]=this.data[q+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(Y,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const Y=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let q=0,ne=0;q<this.data.length;++q)Y[ne++]=this.data[q],Y[ne++]=this.data[q],Y[ne++]=this.data[q],Y[ne++]=255;break;case 3:for(let q=0,ne=0;q<this.data.length;q+=3)Y[ne++]=this.data[q],Y[ne++]=this.data[q+1],Y[ne++]=this.data[q+2],Y[ne++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(Y,this.width,this.height,4)}putAlpha(Y){if(Y.width!==this.width||Y.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${Y.width}x${Y.height}`);if(Y.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${Y.channels}`);const q=this.data,ne=Y.data,R=this.width*this.height;if(this.channels===3){const L=new Uint8ClampedArray(R*4);for(let T=0,S=0,U=0;T<R;++T)L[U++]=q[S++],L[U++]=q[S++],L[U++]=q[S++],L[U++]=ne[T];return this._update(L,this.width,this.height,4)}else if(this.channels===4){for(let L=0;L<R;++L)q[4*L+3]=ne[L];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(Y,q,{resample:ne=2}={}){if(this.width===Y&&this.height===q)return this;let R=C[ne]??ne;const L=(0,y.isNullishDimension)(Y),T=(0,y.isNullishDimension)(q);if(L&&T)return this;if(L?Y=q/this.height*this.width:T&&(q=Y/this.width*this.height),E){const S=this.channels,U=this.toCanvas(),ge=v(Y,q).getContext("2d");return ge.drawImage(U,0,0,Y,q),new re(ge.getImageData(0,0,Y,q).data,Y,q,4).convert(S)}else{let S=this.toSharp();switch(R){case"box":case"hamming":(R==="box"||R==="hamming")&&(console.warn(`Resampling method ${R} is not yet supported. Using bilinear instead.`),R="bilinear");case"nearest":case"bilinear":case"bicubic":S=S.affine([Y/this.width,0,0,q/this.height],{interpolator:R});break;case"lanczos":S=S.resize({width:Y,height:q,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${R} is not supported.`)}return await x(S)}}async pad([Y,q,ne,R]){if(Y=Math.max(Y,0),q=Math.max(q,0),ne=Math.max(ne,0),R=Math.max(R,0),Y===0&&q===0&&ne===0&&R===0)return this;if(E){const L=this.channels,T=this.toCanvas(),S=this.width+Y+q,U=this.height+ne+R,ge=v(S,U).getContext("2d");return ge.drawImage(T,0,0,this.width,this.height,Y,ne,this.width,this.height),new re(ge.getImageData(0,0,S,U).data,S,U,4).convert(L)}else{const L=this.toSharp().extend({left:Y,right:q,top:ne,bottom:R});return await x(L)}}async crop([Y,q,ne,R]){if(Y=Math.max(Y,0),q=Math.max(q,0),ne=Math.min(ne,this.width-1),R=Math.min(R,this.height-1),Y===0&&q===0&&ne===this.width-1&&R===this.height-1)return this;const L=ne-Y+1,T=R-q+1;if(E){const S=this.channels,U=this.toCanvas(),ge=v(L,T).getContext("2d");return ge.drawImage(U,Y,q,L,T,0,0,L,T),new re(ge.getImageData(0,0,L,T).data,L,T,4).convert(S)}else{const S=this.toSharp().extract({left:Y,top:q,width:L,height:T});return await x(S)}}async center_crop(Y,q){if(this.width===Y&&this.height===q)return this;const ne=(this.width-Y)/2,R=(this.height-q)/2;if(E){const L=this.channels,T=this.toCanvas(),S=v(Y,q).getContext("2d");let U=0,ge=0,_e=0,ze=0;return ne>=0?U=ne:_e=-ne,R>=0?ge=R:ze=-R,S.drawImage(T,U,ge,Y,q,_e,ze,Y,q),new re(S.getImageData(0,0,Y,q).data,Y,q,4).convert(L)}else{let L=this.toSharp();if(ne>=0&&R>=0)L=L.extract({left:Math.floor(ne),top:Math.floor(R),width:Y,height:q});else if(ne<=0&&R<=0){const T=Math.floor(-R),S=Math.floor(-ne);L=L.extend({top:T,left:S,right:Y-this.width-S,bottom:q-this.height-T})}else{let T=[0,0],S=0;R<0?(T[0]=Math.floor(-R),T[1]=q-this.height-T[0]):S=Math.floor(R);let U=[0,0],ge=0;ne<0?(U[0]=Math.floor(-ne),U[1]=Y-this.width-U[0]):ge=Math.floor(ne),L=L.extend({top:T[0],bottom:T[1],left:U[0],right:U[1]}).extract({left:ge,top:S,width:Y,height:q})}return await x(L)}}async toBlob(Y="image/png",q=1){if(!E)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:Y,quality:q})}toTensor(Y="CHW"){let q=new se.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(Y!=="HWC")if(Y==="CHW")q=q.permute(2,0,1);else throw new Error(`Unsupported channel format: ${Y}`);return q}toCanvas(){if(!E)throw new Error("toCanvas() is only supported in browser environments.");const Y=this.clone().rgba(),q=v(Y.width,Y.height),ne=new k(Y.data,Y.width,Y.height);return q.getContext("2d").putImageData(ne,0,0),q}split(){const{data:Y,width:q,height:ne,channels:R}=this,L=Y.constructor,T=Y.length/R,S=Array.from({length:R},()=>new L(T));for(let U=0;U<T;++U){const ge=R*U;for(let _e=0;_e<R;++_e)S[_e][U]=Y[ge+_e]}return S.map(U=>new re(U,q,ne,1))}_update(Y,q,ne,R=null){return this.data=Y,this.width=q,this.height=ne,R!==null&&(this.channels=R),this}clone(){return new re(this.data.slice(),this.width,this.height,this.channels)}convert(Y){if(this.channels===Y)return this;switch(Y){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(Y){if(E){if(V.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const q=Y.split(".").pop().toLowerCase(),ne=j.get(q)??"image/png",R=await this.toBlob(ne);(0,y.saveBlob)(Y,R)}else{if(V.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(Y);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(E)throw new Error("toSharp() is only supported in server-side environments.");return K(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const ce=re.read.bind(re)},"./src/utils/maths.js":(Le,P,r)=>{r.r(P),r.d(P,{FFT:()=>ce,bankers_round:()=>q,cos_sim:()=>v,dot:()=>K,dynamic_time_warping:()=>ne,interpolate_data:()=>y,log_softmax:()=>se,magnitude:()=>k,max:()=>E,medianFilter:()=>me,min:()=>x,permute_data:()=>z,round:()=>Y,softmax:()=>V});function y(R,[L,T,S],[U,ge],_e="bilinear",ze=!1){const Ie=ge/S,fe=U/T,Be=new R.constructor(U*ge*L),ve=T*S,Ge=U*ge;for(let He=0;He<U;++He)for(let Ve=0;Ve<ge;++Ve){const wt=He*ge+Ve,lt=(Ve+.5)/Ie-.5,Ae=(He+.5)/fe-.5;let ee=Math.floor(lt),Me=Math.floor(Ae);const Ue=Math.min(ee+1,S-1),xe=Math.min(Me+1,T-1);ee=Math.max(ee,0),Me=Math.max(Me,0);const dt=lt-ee,de=Ae-Me,rt=(1-dt)*(1-de),ot=dt*(1-de),we=(1-dt)*de,Oe=dt*de,it=Me*S,at=xe*S,nt=it+ee,st=it+Ue,yt=at+ee,$t=at+Ue;for(let At=0;At<L;++At){const vt=At*ve;Be[At*Ge+wt]=rt*R[vt+nt]+ot*R[vt+st]+we*R[vt+yt]+Oe*R[vt+$t]}}return Be}function z(R,L,T){const S=new Array(T.length),U=new Array(T.length);for(let ze=T.length-1,Ie=1;ze>=0;--ze)U[ze]=Ie,S[ze]=L[T[ze]],Ie*=S[ze];const ge=T.map((ze,Ie)=>U[T.indexOf(Ie)]),_e=new R.constructor(R.length);for(let ze=0;ze<R.length;++ze){let Ie=0;for(let fe=L.length-1,Be=ze;fe>=0;--fe)Ie+=Be%L[fe]*ge[fe],Be=Math.floor(Be/L[fe]);_e[Ie]=R[ze]}return[_e,S]}function V(R){const L=E(R)[0],T=R.map(ge=>Math.exp(ge-L)),S=T.reduce((ge,_e)=>ge+_e,0);return T.map(ge=>ge/S)}function se(R){const L=E(R)[0];let T=0;for(let ge=0;ge<R.length;++ge)T+=Math.exp(R[ge]-L);const S=Math.log(T);return R.map(ge=>ge-L-S)}function K(R,L){let T=0;for(let S=0;S<R.length;++S)T+=R[S]*L[S];return T}function v(R,L){const T=K(R,L),S=k(R),U=k(L);return T/(S*U)}function k(R){return Math.sqrt(R.reduce((L,T)=>L+T*T,0))}function x(R){if(R.length===0)throw Error("Array must not be empty");let L=R[0],T=0;for(let S=1;S<R.length;++S)R[S]<L&&(L=R[S],T=S);return[L,T]}function E(R){if(R.length===0)throw Error("Array must not be empty");let L=R[0],T=0;for(let S=1;S<R.length;++S)R[S]>L&&(L=R[S],T=S);return[L,T]}function C(R){return R>0&&(R&R-1)===0}class j{constructor(L){if(this.size=L|0,this.size<=1||!C(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=L<<1,this.table=new Float64Array(this.size*2);for(let S=0;S<this.table.length;S+=2){const U=Math.PI*S/this.size;this.table[S]=Math.cos(U),this.table[S+1]=-Math.sin(U)}let T=0;for(let S=1;this.size>S;S<<=1)++T;this._width=T%2===0?T-1:T,this._bitrev=new Int32Array(1<<this._width);for(let S=0;S<this._bitrev.length;++S){this._bitrev[S]=0;for(let U=0;U<this._width;U+=2){const ge=this._width-U-2;this._bitrev[S]|=(S>>>U&3)<<ge}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(L,T){const S=T||new Array(L.length>>>1);for(let U=0;U<L.length;U+=2)S[U>>>1]=L[U];return S}toComplexArray(L,T){const S=T||this.createComplexArray();for(let U=0;U<S.length;U+=2)S[U]=L[U>>>1],S[U+1]=0;return S}transform(L,T){if(L===T)throw new Error("Input and output buffers must be different");this._transform4(L,T,1)}realTransform(L,T){if(L===T)throw new Error("Input and output buffers must be different");this._realTransform4(L,T,1)}inverseTransform(L,T){if(L===T)throw new Error("Input and output buffers must be different");this._transform4(L,T,-1);for(let S=0;S<L.length;++S)L[S]/=this.size}_transform4(L,T,S){const U=this._csize;let _e=1<<this._width,ze=U/_e<<1,Ie,fe;const Be=this._bitrev;if(ze===4)for(Ie=0,fe=0;Ie<U;Ie+=ze,++fe){const Ge=Be[fe];this._singleTransform2(T,L,Ie,Ge,_e)}else for(Ie=0,fe=0;Ie<U;Ie+=ze,++fe){const Ge=Be[fe];this._singleTransform4(T,L,Ie,Ge,_e,S)}const ve=this.table;for(_e>>=2;_e>=2;_e>>=2){ze=U/_e<<1;const Ge=ze>>>2;for(Ie=0;Ie<U;Ie+=ze){const He=Ie+Ge-1;for(let Ve=Ie,wt=0;Ve<He;Ve+=2,wt+=_e){const lt=Ve,Ae=lt+Ge,ee=Ae+Ge,Me=ee+Ge,Ue=L[lt],xe=L[lt+1],dt=L[Ae],de=L[Ae+1],rt=L[ee],ot=L[ee+1],we=L[Me],Oe=L[Me+1],it=ve[wt],at=S*ve[wt+1],nt=dt*it-de*at,st=dt*at+de*it,yt=ve[2*wt],$t=S*ve[2*wt+1],At=rt*yt-ot*$t,vt=rt*$t+ot*yt,Dt=ve[3*wt],G=S*ve[3*wt+1],pe=we*Dt-Oe*G,te=we*G+Oe*Dt,Te=Ue+At,We=xe+vt,tt=Ue-At,ut=xe-vt,Et=nt+pe,Ot=st+te,Vt=S*(nt-pe),Ht=S*(st-te);L[lt]=Te+Et,L[lt+1]=We+Ot,L[Ae]=tt+Ht,L[Ae+1]=ut-Vt,L[ee]=Te-Et,L[ee+1]=We-Ot,L[Me]=tt-Ht,L[Me+1]=ut+Vt}}}}_singleTransform2(L,T,S,U,ge){const _e=L[U],ze=L[U+1],Ie=L[U+ge],fe=L[U+ge+1];T[S]=_e+Ie,T[S+1]=ze+fe,T[S+2]=_e-Ie,T[S+3]=ze-fe}_singleTransform4(L,T,S,U,ge,_e){const ze=ge*2,Ie=ge*3,fe=L[U],Be=L[U+1],ve=L[U+ge],Ge=L[U+ge+1],He=L[U+ze],Ve=L[U+ze+1],wt=L[U+Ie],lt=L[U+Ie+1],Ae=fe+He,ee=Be+Ve,Me=fe-He,Ue=Be-Ve,xe=ve+wt,dt=Ge+lt,de=_e*(ve-wt),rt=_e*(Ge-lt);T[S]=Ae+xe,T[S+1]=ee+dt,T[S+2]=Me+rt,T[S+3]=Ue-de,T[S+4]=Ae-xe,T[S+5]=ee-dt,T[S+6]=Me-rt,T[S+7]=Ue+de}_realTransform4(L,T,S){const U=this._csize;let _e=1<<this._width,ze=U/_e<<1,Ie,fe;const Be=this._bitrev;if(ze===4)for(Ie=0,fe=0;Ie<U;Ie+=ze,++fe){const He=Be[fe];this._singleRealTransform2(T,L,Ie,He>>>1,_e>>>1)}else for(Ie=0,fe=0;Ie<U;Ie+=ze,++fe){const He=Be[fe];this._singleRealTransform4(T,L,Ie,He>>>1,_e>>>1,S)}const ve=this.table;for(_e>>=2;_e>=2;_e>>=2){ze=U/_e<<1;const He=ze>>>1,Ve=He>>>1,wt=Ve>>>1;for(Ie=0;Ie<U;Ie+=ze)for(let lt=0,Ae=0;lt<=wt;lt+=2,Ae+=_e){const ee=Ie+lt,Me=ee+Ve,Ue=Me+Ve,xe=Ue+Ve,dt=L[ee],de=L[ee+1],rt=L[Me],ot=L[Me+1],we=L[Ue],Oe=L[Ue+1],it=L[xe],at=L[xe+1],nt=dt,st=de,yt=ve[Ae],$t=S*ve[Ae+1],At=rt*yt-ot*$t,vt=rt*$t+ot*yt,Dt=ve[2*Ae],G=S*ve[2*Ae+1],pe=we*Dt-Oe*G,te=we*G+Oe*Dt,Te=ve[3*Ae],We=S*ve[3*Ae+1],tt=it*Te-at*We,ut=it*We+at*Te,Et=nt+pe,Ot=st+te,Vt=nt-pe,Ht=st-te,Jt=At+tt,$s=vt+ut,zs=S*(At-tt),tr=S*(vt-ut);if(L[ee]=Et+Jt,L[ee+1]=Ot+$s,L[Me]=Vt+tr,L[Me+1]=Ht-zs,lt===0){L[Ue]=Et-Jt,L[Ue+1]=Ot-$s;continue}if(lt===wt)continue;const pr=Ie+Ve-lt,zr=Ie+He-lt;L[pr]=Vt-S*tr,L[pr+1]=-Ht-S*zs,L[zr]=Et-S*Jt,L[zr+1]=-Ot+S*$s}}const Ge=U>>>1;for(let He=2;He<Ge;He+=2)L[U-He]=L[He],L[U-He+1]=-L[He+1]}_singleRealTransform2(L,T,S,U,ge){const _e=L[U],ze=L[U+ge];T[S]=_e+ze,T[S+1]=0,T[S+2]=_e-ze,T[S+3]=0}_singleRealTransform4(L,T,S,U,ge,_e){const ze=ge*2,Ie=ge*3,fe=L[U],Be=L[U+ge],ve=L[U+ze],Ge=L[U+Ie],He=fe+ve,Ve=fe-ve,wt=Be+Ge,lt=_e*(Be-Ge);T[S]=He+wt,T[S+1]=0,T[S+2]=Ve,T[S+3]=-lt,T[S+4]=He-wt,T[S+5]=0,T[S+6]=Ve,T[S+7]=lt}}class re{constructor(L){const T=2*(L-1),S=2*(2*L-1),U=2**Math.ceil(Math.log2(S));this.bufferSize=U,this._a=T;const ge=new Float64Array(S),_e=new Float64Array(U);this._chirpBuffer=new Float64Array(U),this._buffer1=new Float64Array(U),this._buffer2=new Float64Array(U),this._outBuffer1=new Float64Array(U),this._outBuffer2=new Float64Array(U);const ze=-2*Math.PI/L,Ie=Math.cos(ze),fe=Math.sin(ze);for(let Be=0;Be<S>>1;++Be){const ve=(Be+1-L)**2/2,Ge=Math.sqrt(Ie**2+fe**2)**ve,He=ve*Math.atan2(fe,Ie),Ve=2*Be;ge[Ve]=Ge*Math.cos(He),ge[Ve+1]=Ge*Math.sin(He),_e[Ve]=ge[Ve],_e[Ve+1]=-ge[Ve+1]}this._slicedChirpBuffer=ge.subarray(T,S),this._f=new j(U>>1),this._f.transform(this._chirpBuffer,_e)}_transform(L,T,S){const U=this._buffer1,ge=this._buffer2,_e=this._outBuffer1,ze=this._outBuffer2,Ie=this._chirpBuffer,fe=this._slicedChirpBuffer,Be=this._a;if(S)for(let ve=0;ve<fe.length;ve+=2){const Ge=ve+1,He=ve>>1,Ve=T[He];U[ve]=Ve*fe[ve],U[Ge]=Ve*fe[Ge]}else for(let ve=0;ve<fe.length;ve+=2){const Ge=ve+1;U[ve]=T[ve]*fe[ve]-T[Ge]*fe[Ge],U[Ge]=T[ve]*fe[Ge]+T[Ge]*fe[ve]}this._f.transform(_e,U);for(let ve=0;ve<Ie.length;ve+=2){const Ge=ve+1;ge[ve]=_e[ve]*Ie[ve]-_e[Ge]*Ie[Ge],ge[Ge]=_e[ve]*Ie[Ge]+_e[Ge]*Ie[ve]}this._f.inverseTransform(ze,ge);for(let ve=0;ve<ze.length;ve+=2){const Ge=ze[ve+Be],He=ze[ve+Be+1],Ve=fe[ve],wt=fe[ve+1];L[ve]=Ge*Ve-He*wt,L[ve+1]=Ge*wt+He*Ve}}transform(L,T){this._transform(L,T,!1)}realTransform(L,T){this._transform(L,T,!0)}}class ce{constructor(L){this.fft_length=L,this.isPowerOfTwo=C(L),this.isPowerOfTwo?(this.fft=new j(L),this.outputBufferSize=2*L):(this.fft=new re(L),this.outputBufferSize=this.fft.bufferSize)}realTransform(L,T){this.fft.realTransform(L,T)}transform(L,T){this.fft.transform(L,T)}}function me(R,L){if(L%2===0||L<=0)throw new Error("Window size must be a positive odd number");const T=new R.constructor(R.length),S=new R.constructor(L),U=Math.floor(L/2);for(let ge=0;ge<R.length;++ge){let _e=0;for(let ze=-U;ze<=U;++ze){let Ie=ge+ze;Ie<0?Ie=Math.abs(Ie):Ie>=R.length&&(Ie=2*(R.length-1)-Ie),S[_e++]=R[Ie]}S.sort(),T[ge]=S[U]}return T}function Y(R,L){const T=Math.pow(10,L);return Math.round(R*T)/T}function q(R){const L=Math.round(R);return Math.abs(R)%1===.5?L%2===0?L:L-1:L}function ne(R){const L=R.length,T=R[0].length,S=[L+1,T+1],U=Array.from({length:S[0]},()=>Array(S[1]).fill(1/0));U[0][0]=0;const ge=Array.from({length:S[0]},()=>Array(S[1]).fill(-1));for(let Be=1;Be<S[1];++Be)for(let ve=1;ve<S[0];++ve){const Ge=U[ve-1][Be-1],He=U[ve-1][Be],Ve=U[ve][Be-1];let wt,lt;Ge<He&&Ge<Ve?(wt=Ge,lt=0):He<Ge&&He<Ve?(wt=He,lt=1):(wt=Ve,lt=2),U[ve][Be]=R[ve-1][Be-1]+wt,ge[ve][Be]=lt}for(let Be=0;Be<S[1];++Be)ge[0][Be]=2;for(let Be=0;Be<S[0];++Be)ge[Be][0]=1;let _e=L,ze=T,Ie=[],fe=[];for(;_e>0||ze>0;)switch(Ie.push(_e-1),fe.push(ze-1),ge[_e][ze]){case 0:--_e,--ze;break;case 1:--_e;break;case 2:--ze;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${_e}, ${ze}]. Please file a bug report.`)}return Ie.reverse(),fe.reverse(),[Ie,fe]}},"./src/utils/tensor.js":(Le,P,r)=>{r.r(P),r.d(P,{Tensor:()=>K,cat:()=>T,full:()=>fe,full_like:()=>Be,interpolate:()=>x,interpolate_4d:()=>E,layer_norm:()=>q,matmul:()=>C,mean:()=>_e,mean_pooling:()=>Y,ones:()=>ve,ones_like:()=>Ge,permute:()=>k,quantize_embeddings:()=>lt,rand:()=>wt,rfft:()=>j,slice:()=>me,stack:()=>S,std_mean:()=>ge,topk:()=>re,zeros:()=>He,zeros_like:()=>Ve});var y=r("./src/utils/maths.js"),z=r("./src/backends/onnx.js"),V=r("./src/ops/registry.js");const se=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class K{constructor(...ee){ke(this,"ort_tensor");return(0,z.isONNXTensor)(ee[0])?this.ort_tensor=ee[0]:this.ort_tensor=new z.Tensor(ee[0],ee[1],ee[2]),new Proxy(this,{get:(Me,Ue)=>{if(typeof Ue=="string"){let xe=Number(Ue);if(Number.isInteger(xe))return Me._getitem(xe)}return Me[Ue]},set:(Me,Ue,xe)=>Me[Ue]=xe})}get dims(){return this.ort_tensor.dims}set dims(ee){this.ort_tensor.dims=ee}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[ee,...Me]=this.dims;if(Me.length>0){const Ue=Me.reduce((xe,dt)=>xe*dt);for(let xe=0;xe<ee;++xe)yield this._subarray(xe,Ue,Me)}else yield*this.data}_getitem(ee){const[Me,...Ue]=this.dims;if(ee=L(ee,Me),Ue.length>0){const xe=Ue.reduce((dt,de)=>dt*de);return this._subarray(ee,xe,Ue)}else return new K(this.type,[this.data[ee]],Ue)}indexOf(ee){const Me=this.data;for(let Ue=0;Ue<Me.length;++Ue)if(Me[Ue]==ee)return Ue;return-1}_subarray(ee,Me,Ue){const xe=ee*Me,dt=(ee+1)*Me,de="subarray"in this.data?this.data.subarray(xe,dt):this.data.slice(xe,dt);return new K(this.type,de,Ue)}item(){const ee=this.data;if(ee.length!==1)throw new Error(`a Tensor with ${ee.length} elements cannot be converted to Scalar`);return ee[0]}tolist(){return v(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const ee=this.data;for(let Me=0;Me<ee.length;++Me)ee[Me]=1/(1+Math.exp(-ee[Me]));return this}map(ee){return this.clone().map_(ee)}map_(ee){const Me=this.data;for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]=ee(Me[Ue],Ue,Me);return this}mul(ee){return this.clone().mul_(ee)}mul_(ee){const Me=this.data;for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]*=ee;return this}div(ee){return this.clone().div_(ee)}div_(ee){const Me=this.data;for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]/=ee;return this}add(ee){return this.clone().add_(ee)}add_(ee){const Me=this.data;for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]+=ee;return this}sub(ee){return this.clone().sub_(ee)}sub_(ee){const Me=this.data;for(let Ue=0;Ue<Me.length;++Ue)Me[Ue]-=ee;return this}clone(){return new K(this.type,this.data.slice(),this.dims.slice())}slice(...ee){const Me=[],Ue=[];for(let we=0;we<this.dims.length;++we){let Oe=ee[we];if(Oe==null)Ue.push([0,this.dims[we]]),Me.push(this.dims[we]);else if(typeof Oe=="number")Oe=L(Oe,this.dims[we],we),Ue.push([Oe,Oe+1]);else if(Array.isArray(Oe)&&Oe.length===2){let[it,at]=Oe;if(it=it===null?0:L(it,this.dims[we],we,!1),at=at===null?this.dims[we]:L(at,this.dims[we],we,!1),it>at)throw new Error(`Invalid slice: ${Oe}`);const nt=[Math.max(it,0),Math.min(at,this.dims[we])];Ue.push(nt),Me.push(nt[1]-nt[0])}else throw new Error(`Invalid slice: ${Oe}`)}const xe=Ue.map(([we,Oe])=>Oe-we),dt=xe.reduce((we,Oe)=>we*Oe),de=this.data,rt=new de.constructor(dt),ot=this.stride();for(let we=0;we<dt;++we){let Oe=0;for(let it=xe.length-1,at=we;it>=0;--it){const nt=xe[it];Oe+=(at%nt+Ue[it][0])*ot[it],at=Math.floor(at/nt)}rt[we]=de[Oe]}return new K(this.type,rt,Me)}permute(...ee){return k(this,ee)}transpose(...ee){return this.permute(...ee)}sum(ee=null,Me=!1){return this.norm(1,ee,Me)}norm(ee="fro",Me=null,Ue=!1){if(ee==="fro")ee=2;else if(typeof ee=="string")throw Error(`Unsupported norm: ${ee}`);const xe=this.data,dt=(we,Oe)=>we+Oe**ee;if(Me===null){const we=xe.reduce(dt,0)**(1/ee);return new K(this.type,[we],[])}const[de,rt,ot]=U(dt,this,Me,Ue);if(ee!==1)for(let we=0;we<rt.length;++we)rt[we]=rt[we]**(1/ee);return new K(de,rt,ot)}normalize_(ee=2,Me=1){Me=L(Me,this.dims.length);const Ue=this.norm(ee,Me,!0),xe=this.data,dt=Ue.data;for(let de=0;de<xe.length;++de){let rt=0;for(let ot=this.dims.length-1,we=de,Oe=1;ot>=0;--ot){const it=this.dims[ot];if(ot!==Me){const at=we%it;rt+=at*Oe,Oe*=this.dims[ot]}we=Math.floor(we/it)}xe[de]/=dt[rt]}return this}normalize(ee=2,Me=1){return this.clone().normalize_(ee,Me)}stride(){return ze(this.dims)}squeeze(ee=null){return new K(this.type,this.data,ne(this.dims,ee))}squeeze_(ee=null){return this.dims=ne(this.dims,ee),this}unsqueeze(ee=null){return new K(this.type,this.data,R(this.dims,ee))}unsqueeze_(ee=null){return this.dims=R(this.dims,ee),this}flatten_(ee=0,Me=-1){Me=(Me+this.dims.length)%this.dims.length;let Ue=this.dims.slice(0,ee),xe=this.dims.slice(ee,Me+1),dt=this.dims.slice(Me+1);return this.dims=[...Ue,xe.reduce((de,rt)=>de*rt,1),...dt],this}flatten(ee=0,Me=-1){return this.clone().flatten_(ee,Me)}view(...ee){let Me=-1;for(let xe=0;xe<ee.length;++xe)if(ee[xe]===-1){if(Me!==-1)throw new Error("Only one dimension can be inferred");Me=xe}const Ue=this.data;if(Me!==-1){const xe=ee.reduce((dt,de,rt)=>rt!==Me?dt*de:dt,1);ee[Me]=Ue.length/xe}return new K(this.type,Ue,ee)}neg_(){const ee=this.data;for(let Me=0;Me<ee.length;++Me)ee[Me]=-ee[Me];return this}neg(){return this.clone().neg_()}gt(ee){const Me=new Uint8Array(this.data.length),Ue=this.data;for(let xe=0;xe<Ue.length;++xe)Me[xe]=Ue[xe]>ee?1:0;return new K("bool",Me,this.dims)}lt(ee){const Me=new Uint8Array(this.data.length),Ue=this.data;for(let xe=0;xe<Ue.length;++xe)Me[xe]=Ue[xe]<ee?1:0;return new K("bool",Me,this.dims)}clamp_(ee,Me){const Ue=this.data;for(let xe=0;xe<Ue.length;++xe)Ue[xe]=Math.min(Math.max(Ue[xe],ee),Me);return this}clamp(ee,Me){return this.clone().clamp_(ee,Me)}round_(){const ee=this.data;for(let Me=0;Me<ee.length;++Me)ee[Me]=Math.round(ee[Me]);return this}round(){return this.clone().round_()}mean(ee=null,Me=!1){return _e(this,ee,Me)}min(ee=null,Me=!1){if(ee===null){const de=(0,y.min)(this.data)[0];return new K(this.type,[de],[])}const[Ue,xe,dt]=U((de,rt)=>Math.min(de,rt),this,ee,Me,1/0);return new K(Ue,xe,dt)}max(ee=null,Me=!1){if(ee===null){const de=(0,y.max)(this.data)[0];return new K(this.type,[de],[])}const[Ue,xe,dt]=U((de,rt)=>Math.max(de,rt),this,ee,Me,-1/0);return new K(Ue,xe,dt)}argmin(ee=null,Me=!1){if(ee!==null)throw new Error("`dim !== null` not yet implemented.");const Ue=(0,y.min)(this.data)[1];return new K("int64",[BigInt(Ue)],[])}argmax(ee=null,Me=!1){if(ee!==null)throw new Error("`dim !== null` not yet implemented.");const Ue=(0,y.max)(this.data)[1];return new K("int64",[BigInt(Ue)],[])}to(ee){if(this.type===ee)return this;if(!se.hasOwnProperty(ee))throw new Error(`Unsupported type: ${ee}`);let Me;const Ue=["int64","uint64"].includes(this.type),xe=["int64","uint64"].includes(ee);return Ue&&!xe?Me=Number:!Ue&&xe&&(Me=BigInt),new K(ee,se[ee].from(this.data,Me),this.dims)}}function v(Ae,ee){const Me=Ae.length,Ue=ee.reduce((dt,de)=>dt*de);if(Me!==Ue)throw Error(`cannot reshape array of size ${Me} into shape (${ee})`);let xe=Ae;for(let dt=ee.length-1;dt>=0;dt--)xe=xe.reduce((de,rt)=>{let ot=de[de.length-1];return ot.length<ee[dt]?ot.push(rt):de.push([rt]),de},[[]]);return xe[0]}function k(Ae,ee){const[Me,Ue]=(0,y.permute_data)(Ae.data,Ae.dims,ee);return new K(Ae.type,Me,Ue)}function x(Ae,[ee,Me],Ue="bilinear",xe=!1){const dt=Ae.dims.at(-3)??1,de=Ae.dims.at(-2),rt=Ae.dims.at(-1);let ot=(0,y.interpolate_data)(Ae.data,[dt,de,rt],[ee,Me],Ue,xe);return new K(Ae.type,ot,[dt,ee,Me])}async function E(Ae,{size:ee=null,mode:Me="bilinear"}={}){if(Ae.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!ee)throw new Error("`interpolate_4d` requires a `size` argument.");let Ue;if(ee.length===2)Ue=[...Ae.dims.slice(0,2),...ee];else if(ee.length===3)Ue=[Ae.dims[0],...ee];else if(ee.length===4)Ue=ee;else throw new Error("`size` must be of length 2, 3, or 4.");let xe;if(Me==="nearest")xe=await V.TensorOpRegistry.nearest_interpolate_4d;else if(Me==="bilinear")xe=await V.TensorOpRegistry.bilinear_interpolate_4d;else if(Me==="bicubic")xe=await V.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${Me}`);const dt=new K("int64",new BigInt64Array(Ue.map(BigInt)),[Ue.length]);return await xe({x:Ae,s:dt})}async function C(Ae,ee){return await(await V.TensorOpRegistry.matmul)({a:Ae,b:ee})}async function j(Ae,ee){return await(await V.TensorOpRegistry.rfft)({x:Ae,a:ee})}async function re(Ae,ee){const Me=await V.TensorOpRegistry.top_k;return ee==null?ee=Ae.dims.at(-1):ee=Math.min(ee,Ae.dims.at(-1)),await Me({x:Ae,k:new K("int64",[BigInt(ee)],[1])})}const ce=Ae=>new K("int64",Ae,[Ae.length]);async function me(Ae,ee,Me,Ue,xe){return await(await V.TensorOpRegistry.slice)({x:Ae,s:ce(ee),e:ce(Me),a:ce(Ue),t:ce(xe??new Array(Ue.length).fill(1))})}function Y(Ae,ee){const Me=Ae.data,Ue=ee.data,xe=[Ae.dims[0],Ae.dims[2]],dt=new Me.constructor(xe[0]*xe[1]),[de,rt,ot]=Ae.dims;let we=0;for(let Oe=0;Oe<de;++Oe){const it=Oe*ot*rt;for(let at=0;at<ot;++at){let nt=0,st=0;const yt=Oe*rt,$t=it+at;for(let vt=0;vt<rt;++vt){const Dt=Number(Ue[yt+vt]);st+=Dt,nt+=Me[$t+vt*ot]*Dt}const At=nt/st;dt[we++]=At}}return new K(Ae.type,dt,xe)}function q(Ae,ee,{eps:Me=1e-5}={}){if(Ae.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ue,xe]=Ae.dims;if(ee.length!==1&&ee[0]!==xe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[dt,de]=ge(Ae,1,0,!0),rt=dt.data,ot=de.data,we=Ae.data,Oe=new we.constructor(we.length);for(let it=0;it<Ue;++it){const at=it*xe;for(let nt=0;nt<xe;++nt){const st=at+nt;Oe[st]=(we[st]-ot[it])/(rt[it]+Me)}}return new K(Ae.type,Oe,Ae.dims)}function ne(Ae,ee){return Ae=Ae.slice(),ee===null?Ae=Ae.filter(Me=>Me!==1):typeof ee=="number"?Ae[ee]===1&&Ae.splice(ee,1):Array.isArray(ee)&&(Ae=Ae.filter((Me,Ue)=>Me!==1||!ee.includes(Ue))),Ae}function R(Ae,ee){return ee=L(ee,Ae.length+1),Ae=Ae.slice(),Ae.splice(ee,0,1),Ae}function L(Ae,ee,Me=null,Ue=!0){if(Ue&&(Ae<-ee||Ae>=ee))throw new Error(`IndexError: index ${Ae} is out of bounds for dimension${Me===null?"":" "+Me} with size ${ee}`);return Ae<0&&(Ae=(Ae%ee+ee)%ee),Ae}function T(Ae,ee=0){ee=L(ee,Ae[0].dims.length);const Me=Ae[0].dims.slice();Me[ee]=Ae.reduce((de,rt)=>de+rt.dims[ee],0);const Ue=Me.reduce((de,rt)=>de*rt,1),xe=new Ae[0].data.constructor(Ue),dt=Ae[0].type;if(ee===0){let de=0;for(const rt of Ae){const ot=rt.data;xe.set(ot,de),de+=ot.length}}else{let de=0;for(let rt=0;rt<Ae.length;++rt){const{data:ot,dims:we}=Ae[rt];for(let Oe=0;Oe<ot.length;++Oe){let it=0;for(let at=we.length-1,nt=Oe,st=1;at>=0;--at){const yt=we[at];let $t=nt%yt;at===ee&&($t+=de),it+=$t*st,st*=Me[at],nt=Math.floor(nt/yt)}xe[it]=ot[Oe]}de+=we[ee]}}return new K(dt,xe,Me)}function S(Ae,ee=0){return T(Ae.map(Me=>Me.unsqueeze(ee)),ee)}function U(Ae,ee,Me=null,Ue=!1,xe=null){const dt=ee.data,de=ee.dims;Me=L(Me,de.length);const rt=de.slice();rt[Me]=1;const ot=new dt.constructor(dt.length/de[Me]);xe!==null&&ot.fill(xe);for(let we=0;we<dt.length;++we){let Oe=0;for(let it=de.length-1,at=we,nt=1;it>=0;--it){const st=de[it];if(it!==Me){const yt=at%st;Oe+=yt*nt,nt*=rt[it]}at=Math.floor(at/st)}ot[Oe]=Ae(ot[Oe],dt[we],we,Oe)}return Ue||rt.splice(Me,1),[ee.type,ot,rt]}function ge(Ae,ee=null,Me=1,Ue=!1){const xe=Ae.data,dt=Ae.dims;if(ee===null){const nt=xe.reduce((At,vt)=>At+vt,0)/xe.length,st=Math.sqrt(xe.reduce((At,vt)=>At+(vt-nt)**2,0)/(xe.length-Me)),yt=new K(Ae.type,[nt],[]);return[new K(Ae.type,[st],[]),yt]}ee=L(ee,dt.length);const de=_e(Ae,ee,Ue),rt=de.data,[ot,we,Oe]=U((at,nt,st,yt)=>at+(nt-rt[yt])**2,Ae,ee,Ue);for(let at=0;at<we.length;++at)we[at]=Math.sqrt(we[at]/(dt[ee]-Me));return[new K(ot,we,Oe),de]}function _e(Ae,ee=null,Me=!1){const Ue=Ae.dims,xe=Ae.data;if(ee===null){const ot=xe.reduce((we,Oe)=>we+Oe,0);return new K(Ae.type,[ot/xe.length],[])}ee=L(ee,Ue.length);const[dt,de,rt]=U((ot,we)=>ot+we,Ae,ee,Me);if(Ue[ee]!==1)for(let ot=0;ot<de.length;++ot)de[ot]/=Ue[ee];return new K(dt,de,rt)}function ze(Ae){const ee=new Array(Ae.length);for(let Me=Ae.length-1,Ue=1;Me>=0;--Me)ee[Me]=Ue,Ue*=Ae[Me];return ee}function Ie(Ae,ee,Me,Ue){const xe=Ae.reduce((dt,de)=>dt*de,1);return new K(Me,new Ue(xe).fill(ee),Ae)}function fe(Ae,ee){let Me,Ue;if(typeof ee=="number")Me="float32",Ue=Float32Array;else if(typeof ee=="bigint")Me="int64",Ue=BigInt64Array;else if(typeof ee=="boolean")Me="bool",Ue=Uint8Array;else throw new Error(`Unsupported data type: ${typeof ee}`);return Ie(Ae,ee,Me,Ue)}function Be(Ae,ee){return fe(Ae.dims,ee)}function ve(Ae){return Ie(Ae,1n,"int64",BigInt64Array)}function Ge(Ae){return ve(Ae.dims)}function He(Ae){return Ie(Ae,0n,"int64",BigInt64Array)}function Ve(Ae){return He(Ae.dims)}function wt(Ae){const ee=Ae.reduce((Me,Ue)=>Me*Ue,1);return new K("float32",Float32Array.from({length:ee},()=>Math.random()),Ae)}function lt(Ae,ee){if(Ae.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Ae.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(ee))throw new Error("The precision must be either 'binary' or 'ubinary'");const Me=ee==="binary",Ue=Me?"int8":"uint8",xe=Me?Int8Array:Uint8Array,dt=Ae.data,de=new xe(dt.length/8);for(let rt=0;rt<dt.length;++rt){const ot=dt[rt]>0?1:0,we=Math.floor(rt/8),Oe=rt%8;de[we]|=ot<<7-Oe,Me&&Oe===0&&(de[we]-=128)}return new K(Ue,de,[Ae.dims[0],Ae.dims[1]/8])}}},Lr={};function Fs(Le){var P=Lr[Le];if(P!==void 0)return P.exports;var r=Lr[Le]={exports:{}};return fr[Le](r,r.exports,Fs),r.exports}Fs.m=fr,(()=>{var Le=Object.getPrototypeOf?r=>Object.getPrototypeOf(r):r=>r.__proto__,P;Fs.t=function(r,y){if(y&1&&(r=this(r)),y&8||typeof r=="object"&&r&&(y&4&&r.__esModule||y&16&&typeof r.then=="function"))return r;var z=Object.create(null);Fs.r(z);var V={};P=P||[null,Le({}),Le([]),Le(Le)];for(var se=y&2&&r;typeof se=="object"&&!~P.indexOf(se);se=Le(se))Object.getOwnPropertyNames(se).forEach(K=>V[K]=()=>r[K]);return V.default=()=>r,Fs.d(z,V),z}})(),Fs.d=(Le,P)=>{for(var r in P)Fs.o(P,r)&&!Fs.o(Le,r)&&Object.defineProperty(Le,r,{enumerable:!0,get:P[r]})},Fs.o=(Le,P)=>Object.prototype.hasOwnProperty.call(Le,P),Fs.r=Le=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Le,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Le,"__esModule",{value:!0})},(()=>{var Le;if(typeof self.location.href=="string"&&(Le=self.location.href),!Le)throw new Error("Automatic publicPath is not supported in this browser");Le=Le.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Fs.p=Le})(),Fs.b=new URL(self.location.href);var f={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Fs.r(f),Fs.d(f,{ASTFeatureExtractor:()=>x.ASTFeatureExtractor,ASTForAudioClassification:()=>r.ASTForAudioClassification,ASTModel:()=>r.ASTModel,ASTPreTrainedModel:()=>r.ASTPreTrainedModel,AlbertForMaskedLM:()=>r.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>r.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>r.AlbertForSequenceClassification,AlbertModel:()=>r.AlbertModel,AlbertPreTrainedModel:()=>r.AlbertPreTrainedModel,AlbertTokenizer:()=>y.AlbertTokenizer,AudioClassificationPipeline:()=>P.AudioClassificationPipeline,AutoConfig:()=>z.AutoConfig,AutoFeatureExtractor:()=>E.AutoFeatureExtractor,AutoImageProcessor:()=>re.AutoImageProcessor,AutoModel:()=>r.AutoModel,AutoModelForAudioClassification:()=>r.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>r.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>r.AutoModelForCTC,AutoModelForCausalLM:()=>r.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>r.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>r.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>r.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>r.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>r.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>r.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>r.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>r.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>r.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>r.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>r.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>r.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>r.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>r.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>r.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>r.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>r.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>r.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>r.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>r.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>r.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>r.AutoModelForVision2Seq,AutoModelForXVector:()=>r.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>r.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>Y.AutoProcessor,AutoTokenizer:()=>y.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>P.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>r.BartForConditionalGeneration,BartForSequenceClassification:()=>r.BartForSequenceClassification,BartModel:()=>r.BartModel,BartPretrainedModel:()=>r.BartPretrainedModel,BartTokenizer:()=>y.BartTokenizer,BaseModelOutput:()=>r.BaseModelOutput,BaseStreamer:()=>q.BaseStreamer,BeitFeatureExtractor:()=>j.BeitFeatureExtractor,BeitForImageClassification:()=>r.BeitForImageClassification,BeitModel:()=>r.BeitModel,BeitPreTrainedModel:()=>r.BeitPreTrainedModel,BertForMaskedLM:()=>r.BertForMaskedLM,BertForQuestionAnswering:()=>r.BertForQuestionAnswering,BertForSequenceClassification:()=>r.BertForSequenceClassification,BertForTokenClassification:()=>r.BertForTokenClassification,BertModel:()=>r.BertModel,BertPreTrainedModel:()=>r.BertPreTrainedModel,BertTokenizer:()=>y.BertTokenizer,BitImageProcessor:()=>j.BitImageProcessor,BlenderbotForConditionalGeneration:()=>r.BlenderbotForConditionalGeneration,BlenderbotModel:()=>r.BlenderbotModel,BlenderbotPreTrainedModel:()=>r.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>r.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>r.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>r.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>y.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>y.BlenderbotTokenizer,BloomForCausalLM:()=>r.BloomForCausalLM,BloomModel:()=>r.BloomModel,BloomPreTrainedModel:()=>r.BloomPreTrainedModel,BloomTokenizer:()=>y.BloomTokenizer,CLIPFeatureExtractor:()=>j.CLIPFeatureExtractor,CLIPImageProcessor:()=>j.CLIPImageProcessor,CLIPModel:()=>r.CLIPModel,CLIPPreTrainedModel:()=>r.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>r.CLIPSegForImageSegmentation,CLIPSegModel:()=>r.CLIPSegModel,CLIPSegPreTrainedModel:()=>r.CLIPSegPreTrainedModel,CLIPTextModel:()=>r.CLIPTextModel,CLIPTextModelWithProjection:()=>r.CLIPTextModelWithProjection,CLIPTokenizer:()=>y.CLIPTokenizer,CLIPVisionModel:()=>r.CLIPVisionModel,CLIPVisionModelWithProjection:()=>r.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>r.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>r.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>r.CamembertForSequenceClassification,CamembertForTokenClassification:()=>r.CamembertForTokenClassification,CamembertModel:()=>r.CamembertModel,CamembertPreTrainedModel:()=>r.CamembertPreTrainedModel,CamembertTokenizer:()=>y.CamembertTokenizer,CausalLMOutput:()=>r.CausalLMOutput,CausalLMOutputWithPast:()=>r.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>j.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>r.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>r.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>r.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>x.ClapFeatureExtractor,ClapModel:()=>r.ClapModel,ClapPreTrainedModel:()=>r.ClapPreTrainedModel,ClapTextModelWithProjection:()=>r.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>R.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>r.CodeGenForCausalLM,CodeGenModel:()=>r.CodeGenModel,CodeGenPreTrainedModel:()=>r.CodeGenPreTrainedModel,CodeGenTokenizer:()=>y.CodeGenTokenizer,CodeLlamaTokenizer:()=>y.CodeLlamaTokenizer,CohereForCausalLM:()=>r.CohereForCausalLM,CohereModel:()=>r.CohereModel,CoherePreTrainedModel:()=>r.CoherePreTrainedModel,CohereTokenizer:()=>y.CohereTokenizer,ConvBertForMaskedLM:()=>r.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>r.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>r.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>r.ConvBertForTokenClassification,ConvBertModel:()=>r.ConvBertModel,ConvBertPreTrainedModel:()=>r.ConvBertPreTrainedModel,ConvBertTokenizer:()=>y.ConvBertTokenizer,ConvNextFeatureExtractor:()=>j.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>r.ConvNextForImageClassification,ConvNextImageProcessor:()=>j.ConvNextImageProcessor,ConvNextModel:()=>r.ConvNextModel,ConvNextPreTrainedModel:()=>r.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>r.ConvNextV2ForImageClassification,ConvNextV2Model:()=>r.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>r.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>j.DPTFeatureExtractor,DPTForDepthEstimation:()=>r.DPTForDepthEstimation,DPTImageProcessor:()=>j.DPTImageProcessor,DPTModel:()=>r.DPTModel,DPTPreTrainedModel:()=>r.DPTPreTrainedModel,DebertaForMaskedLM:()=>r.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>r.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>r.DebertaForSequenceClassification,DebertaForTokenClassification:()=>r.DebertaForTokenClassification,DebertaModel:()=>r.DebertaModel,DebertaPreTrainedModel:()=>r.DebertaPreTrainedModel,DebertaTokenizer:()=>y.DebertaTokenizer,DebertaV2ForMaskedLM:()=>r.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>r.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>r.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>r.DebertaV2ForTokenClassification,DebertaV2Model:()=>r.DebertaV2Model,DebertaV2PreTrainedModel:()=>r.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>y.DebertaV2Tokenizer,DecisionTransformerModel:()=>r.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>r.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>j.DeiTFeatureExtractor,DeiTForImageClassification:()=>r.DeiTForImageClassification,DeiTImageProcessor:()=>j.DeiTImageProcessor,DeiTModel:()=>r.DeiTModel,DeiTPreTrainedModel:()=>r.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>r.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>r.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>P.DepthEstimationPipeline,DepthProForDepthEstimation:()=>r.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>r.DepthProPreTrainedModel,DetrFeatureExtractor:()=>j.DetrFeatureExtractor,DetrForObjectDetection:()=>r.DetrForObjectDetection,DetrForSegmentation:()=>r.DetrForSegmentation,DetrImageProcessor:()=>j.DetrImageProcessor,DetrModel:()=>r.DetrModel,DetrObjectDetectionOutput:()=>r.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>r.DetrPreTrainedModel,DetrSegmentationOutput:()=>r.DetrSegmentationOutput,Dinov2ForImageClassification:()=>r.Dinov2ForImageClassification,Dinov2Model:()=>r.Dinov2Model,Dinov2PreTrainedModel:()=>r.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>r.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>r.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>r.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>r.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>r.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>r.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>r.DistilBertForTokenClassification,DistilBertModel:()=>r.DistilBertModel,DistilBertPreTrainedModel:()=>r.DistilBertPreTrainedModel,DistilBertTokenizer:()=>y.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>P.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>j.DonutFeatureExtractor,DonutImageProcessor:()=>j.DonutImageProcessor,DonutSwinModel:()=>r.DonutSwinModel,DonutSwinPreTrainedModel:()=>r.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>r.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>j.EfficientNetImageProcessor,EfficientNetModel:()=>r.EfficientNetModel,EfficientNetPreTrainedModel:()=>r.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>r.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>r.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>r.ElectraForSequenceClassification,ElectraForTokenClassification:()=>r.ElectraForTokenClassification,ElectraModel:()=>r.ElectraModel,ElectraPreTrainedModel:()=>r.ElectraPreTrainedModel,ElectraTokenizer:()=>y.ElectraTokenizer,EosTokenCriteria:()=>ne.EosTokenCriteria,EsmForMaskedLM:()=>r.EsmForMaskedLM,EsmForSequenceClassification:()=>r.EsmForSequenceClassification,EsmForTokenClassification:()=>r.EsmForTokenClassification,EsmModel:()=>r.EsmModel,EsmPreTrainedModel:()=>r.EsmPreTrainedModel,EsmTokenizer:()=>y.EsmTokenizer,ExaoneForCausalLM:()=>r.ExaoneForCausalLM,ExaoneModel:()=>r.ExaoneModel,ExaonePreTrainedModel:()=>r.ExaonePreTrainedModel,FFT:()=>v.FFT,FalconForCausalLM:()=>r.FalconForCausalLM,FalconModel:()=>r.FalconModel,FalconPreTrainedModel:()=>r.FalconPreTrainedModel,FalconTokenizer:()=>y.FalconTokenizer,FastViTForImageClassification:()=>r.FastViTForImageClassification,FastViTModel:()=>r.FastViTModel,FastViTPreTrainedModel:()=>r.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>P.FeatureExtractionPipeline,FeatureExtractor:()=>k.FeatureExtractor,FillMaskPipeline:()=>P.FillMaskPipeline,Florence2ForConditionalGeneration:()=>r.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>r.Florence2PreTrainedModel,Florence2Processor:()=>me.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>R.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>R.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>j.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>r.GLPNForDepthEstimation,GLPNModel:()=>r.GLPNModel,GLPNPreTrainedModel:()=>r.GLPNPreTrainedModel,GPT2LMHeadModel:()=>r.GPT2LMHeadModel,GPT2Model:()=>r.GPT2Model,GPT2PreTrainedModel:()=>r.GPT2PreTrainedModel,GPT2Tokenizer:()=>y.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>r.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>r.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>r.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>r.GPTJForCausalLM,GPTJModel:()=>r.GPTJModel,GPTJPreTrainedModel:()=>r.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>r.GPTNeoForCausalLM,GPTNeoModel:()=>r.GPTNeoModel,GPTNeoPreTrainedModel:()=>r.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>r.GPTNeoXForCausalLM,GPTNeoXModel:()=>r.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>r.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>y.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>r.Gemma2ForCausalLM,Gemma2Model:()=>r.Gemma2Model,Gemma2PreTrainedModel:()=>r.Gemma2PreTrainedModel,GemmaForCausalLM:()=>r.GemmaForCausalLM,GemmaModel:()=>r.GemmaModel,GemmaPreTrainedModel:()=>r.GemmaPreTrainedModel,GemmaTokenizer:()=>y.GemmaTokenizer,GlmForCausalLM:()=>r.GlmForCausalLM,GlmModel:()=>r.GlmModel,GlmPreTrainedModel:()=>r.GlmPreTrainedModel,GraniteForCausalLM:()=>r.GraniteForCausalLM,GraniteModel:()=>r.GraniteModel,GranitePreTrainedModel:()=>r.GranitePreTrainedModel,Grok1Tokenizer:()=>y.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>r.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>j.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>r.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>me.GroundingDinoProcessor,GroupViTModel:()=>r.GroupViTModel,GroupViTPreTrainedModel:()=>r.GroupViTPreTrainedModel,HeliumForCausalLM:()=>r.HeliumForCausalLM,HeliumModel:()=>r.HeliumModel,HeliumPreTrainedModel:()=>r.HeliumPreTrainedModel,HerbertTokenizer:()=>y.HerbertTokenizer,HieraForImageClassification:()=>r.HieraForImageClassification,HieraModel:()=>r.HieraModel,HieraPreTrainedModel:()=>r.HieraPreTrainedModel,HubertForCTC:()=>r.HubertForCTC,HubertForSequenceClassification:()=>r.HubertForSequenceClassification,HubertModel:()=>r.HubertModel,HubertPreTrainedModel:()=>r.HubertPreTrainedModel,IJepaForImageClassification:()=>r.IJepaForImageClassification,IJepaModel:()=>r.IJepaModel,IJepaPreTrainedModel:()=>r.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>r.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>j.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>r.Idefics3PreTrainedModel,Idefics3Processor:()=>me.Idefics3Processor,ImageClassificationPipeline:()=>P.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>P.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>x.ImageFeatureExtractor,ImageMattingOutput:()=>r.ImageMattingOutput,ImageProcessor:()=>C.ImageProcessor,ImageSegmentationPipeline:()=>P.ImageSegmentationPipeline,ImageToImagePipeline:()=>P.ImageToImagePipeline,ImageToTextPipeline:()=>P.ImageToTextPipeline,InterruptableStoppingCriteria:()=>ne.InterruptableStoppingCriteria,JAISLMHeadModel:()=>r.JAISLMHeadModel,JAISModel:()=>r.JAISModel,JAISPreTrainedModel:()=>r.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>j.JinaCLIPImageProcessor,JinaCLIPModel:()=>r.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>r.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>me.JinaCLIPProcessor,JinaCLIPTextModel:()=>r.JinaCLIPTextModel,JinaCLIPVisionModel:()=>r.JinaCLIPVisionModel,LlamaForCausalLM:()=>r.LlamaForCausalLM,LlamaModel:()=>r.LlamaModel,LlamaPreTrainedModel:()=>r.LlamaPreTrainedModel,LlamaTokenizer:()=>y.LlamaTokenizer,LlavaForConditionalGeneration:()=>r.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>r.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>j.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>r.LlavaPreTrainedModel,LogitsProcessor:()=>R.LogitsProcessor,LogitsProcessorList:()=>R.LogitsProcessorList,LogitsWarper:()=>R.LogitsWarper,LongT5ForConditionalGeneration:()=>r.LongT5ForConditionalGeneration,LongT5Model:()=>r.LongT5Model,LongT5PreTrainedModel:()=>r.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>r.M2M100ForConditionalGeneration,M2M100Model:()=>r.M2M100Model,M2M100PreTrainedModel:()=>r.M2M100PreTrainedModel,M2M100Tokenizer:()=>y.M2M100Tokenizer,MBart50Tokenizer:()=>y.MBart50Tokenizer,MBartForCausalLM:()=>r.MBartForCausalLM,MBartForConditionalGeneration:()=>r.MBartForConditionalGeneration,MBartForSequenceClassification:()=>r.MBartForSequenceClassification,MBartModel:()=>r.MBartModel,MBartPreTrainedModel:()=>r.MBartPreTrainedModel,MBartTokenizer:()=>y.MBartTokenizer,MPNetForMaskedLM:()=>r.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>r.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>r.MPNetForSequenceClassification,MPNetForTokenClassification:()=>r.MPNetForTokenClassification,MPNetModel:()=>r.MPNetModel,MPNetPreTrainedModel:()=>r.MPNetPreTrainedModel,MPNetTokenizer:()=>y.MPNetTokenizer,MT5ForConditionalGeneration:()=>r.MT5ForConditionalGeneration,MT5Model:()=>r.MT5Model,MT5PreTrainedModel:()=>r.MT5PreTrainedModel,MarianMTModel:()=>r.MarianMTModel,MarianModel:()=>r.MarianModel,MarianPreTrainedModel:()=>r.MarianPreTrainedModel,MarianTokenizer:()=>y.MarianTokenizer,Mask2FormerImageProcessor:()=>j.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>j.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>r.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>j.MaskFormerImageProcessor,MaskFormerModel:()=>r.MaskFormerModel,MaskFormerPreTrainedModel:()=>r.MaskFormerPreTrainedModel,MaskedLMOutput:()=>r.MaskedLMOutput,MaxLengthCriteria:()=>ne.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>r.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>r.MgpstrModelOutput,MgpstrPreTrainedModel:()=>r.MgpstrPreTrainedModel,MgpstrProcessor:()=>me.MgpstrProcessor,MgpstrTokenizer:()=>y.MgpstrTokenizer,MinLengthLogitsProcessor:()=>R.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>R.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>r.MistralForCausalLM,MistralModel:()=>r.MistralModel,MistralPreTrainedModel:()=>r.MistralPreTrainedModel,MobileBertForMaskedLM:()=>r.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>r.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>r.MobileBertForSequenceClassification,MobileBertModel:()=>r.MobileBertModel,MobileBertPreTrainedModel:()=>r.MobileBertPreTrainedModel,MobileBertTokenizer:()=>y.MobileBertTokenizer,MobileLLMForCausalLM:()=>r.MobileLLMForCausalLM,MobileLLMModel:()=>r.MobileLLMModel,MobileLLMPreTrainedModel:()=>r.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>j.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>r.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>j.MobileNetV1ImageProcessor,MobileNetV1Model:()=>r.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>r.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>j.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>r.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>j.MobileNetV2ImageProcessor,MobileNetV2Model:()=>r.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>r.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>j.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>r.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>j.MobileNetV3ImageProcessor,MobileNetV3Model:()=>r.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>r.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>j.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>r.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>j.MobileNetV4ImageProcessor,MobileNetV4Model:()=>r.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>r.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>j.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>r.MobileViTForImageClassification,MobileViTImageProcessor:()=>j.MobileViTImageProcessor,MobileViTModel:()=>r.MobileViTModel,MobileViTPreTrainedModel:()=>r.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>r.MobileViTV2ForImageClassification,MobileViTV2Model:()=>r.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>r.MobileViTV2PreTrainedModel,ModelOutput:()=>r.ModelOutput,ModernBertForMaskedLM:()=>r.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>r.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>r.ModernBertForTokenClassification,ModernBertModel:()=>r.ModernBertModel,ModernBertPreTrainedModel:()=>r.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>r.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>x.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>r.MoonshineForConditionalGeneration,MoonshineModel:()=>r.MoonshineModel,MoonshinePreTrainedModel:()=>r.MoonshinePreTrainedModel,MoonshineProcessor:()=>me.MoonshineProcessor,MptForCausalLM:()=>r.MptForCausalLM,MptModel:()=>r.MptModel,MptPreTrainedModel:()=>r.MptPreTrainedModel,MultiModalityCausalLM:()=>r.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>r.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>r.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>r.MusicgenForConditionalGeneration,MusicgenModel:()=>r.MusicgenModel,MusicgenPreTrainedModel:()=>r.MusicgenPreTrainedModel,NllbTokenizer:()=>y.NllbTokenizer,NoBadWordsLogitsProcessor:()=>R.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>R.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>r.NomicBertModel,NomicBertPreTrainedModel:()=>r.NomicBertPreTrainedModel,NougatImageProcessor:()=>j.NougatImageProcessor,NougatTokenizer:()=>y.NougatTokenizer,OPTForCausalLM:()=>r.OPTForCausalLM,OPTModel:()=>r.OPTModel,OPTPreTrainedModel:()=>r.OPTPreTrainedModel,ObjectDetectionPipeline:()=>P.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>r.Olmo2ForCausalLM,Olmo2Model:()=>r.Olmo2Model,Olmo2PreTrainedModel:()=>r.Olmo2PreTrainedModel,OlmoForCausalLM:()=>r.OlmoForCausalLM,OlmoModel:()=>r.OlmoModel,OlmoPreTrainedModel:()=>r.OlmoPreTrainedModel,OpenELMForCausalLM:()=>r.OpenELMForCausalLM,OpenELMModel:()=>r.OpenELMModel,OpenELMPreTrainedModel:()=>r.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>j.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>r.OwlViTForObjectDetection,OwlViTImageProcessor:()=>j.OwlViTImageProcessor,OwlViTModel:()=>r.OwlViTModel,OwlViTPreTrainedModel:()=>r.OwlViTPreTrainedModel,OwlViTProcessor:()=>me.OwlViTProcessor,Owlv2ForObjectDetection:()=>r.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>j.Owlv2ImageProcessor,Owlv2Model:()=>r.Owlv2Model,Owlv2PreTrainedModel:()=>r.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>r.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>r.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>me.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>r.PatchTSMixerForPrediction,PatchTSMixerModel:()=>r.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>r.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>r.PatchTSTForPrediction,PatchTSTModel:()=>r.PatchTSTModel,PatchTSTPreTrainedModel:()=>r.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>r.Phi3ForCausalLM,Phi3Model:()=>r.Phi3Model,Phi3PreTrainedModel:()=>r.Phi3PreTrainedModel,Phi3VForCausalLM:()=>r.Phi3VForCausalLM,Phi3VImageProcessor:()=>j.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>r.Phi3VPreTrainedModel,Phi3VProcessor:()=>me.Phi3VProcessor,PhiForCausalLM:()=>r.PhiForCausalLM,PhiModel:()=>r.PhiModel,PhiPreTrainedModel:()=>r.PhiPreTrainedModel,Pipeline:()=>P.Pipeline,PreTrainedModel:()=>r.PreTrainedModel,PreTrainedTokenizer:()=>y.PreTrainedTokenizer,PretrainedConfig:()=>z.PretrainedConfig,PretrainedMixin:()=>r.PretrainedMixin,Processor:()=>ce.Processor,PvtForImageClassification:()=>r.PvtForImageClassification,PvtImageProcessor:()=>j.PvtImageProcessor,PvtModel:()=>r.PvtModel,PvtPreTrainedModel:()=>r.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>x.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>r.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>r.PyAnnoteModel,PyAnnotePreTrainedModel:()=>r.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>me.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>r.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>P.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>r.Qwen2ForCausalLM,Qwen2Model:()=>r.Qwen2Model,Qwen2PreTrainedModel:()=>r.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>y.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>r.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>j.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>r.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>me.Qwen2VLProcessor,RTDetrForObjectDetection:()=>r.RTDetrForObjectDetection,RTDetrImageProcessor:()=>j.RTDetrImageProcessor,RTDetrModel:()=>r.RTDetrModel,RTDetrObjectDetectionOutput:()=>r.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>r.RTDetrPreTrainedModel,RawAudio:()=>V.RawAudio,RawImage:()=>se.RawImage,RepetitionPenaltyLogitsProcessor:()=>R.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>r.ResNetForImageClassification,ResNetModel:()=>r.ResNetModel,ResNetPreTrainedModel:()=>r.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>r.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>r.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>r.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>r.RoFormerForTokenClassification,RoFormerModel:()=>r.RoFormerModel,RoFormerPreTrainedModel:()=>r.RoFormerPreTrainedModel,RoFormerTokenizer:()=>y.RoFormerTokenizer,RobertaForMaskedLM:()=>r.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>r.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>r.RobertaForSequenceClassification,RobertaForTokenClassification:()=>r.RobertaForTokenClassification,RobertaModel:()=>r.RobertaModel,RobertaPreTrainedModel:()=>r.RobertaPreTrainedModel,RobertaTokenizer:()=>y.RobertaTokenizer,SamImageProcessor:()=>j.SamImageProcessor,SamImageSegmentationOutput:()=>r.SamImageSegmentationOutput,SamModel:()=>r.SamModel,SamPreTrainedModel:()=>r.SamPreTrainedModel,SamProcessor:()=>me.SamProcessor,SapiensForDepthEstimation:()=>r.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>r.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>r.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>r.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>x.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>j.SegformerFeatureExtractor,SegformerForImageClassification:()=>r.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>r.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>j.SegformerImageProcessor,SegformerModel:()=>r.SegformerModel,SegformerPreTrainedModel:()=>r.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>r.Seq2SeqLMOutput,SequenceClassifierOutput:()=>r.SequenceClassifierOutput,SiglipImageProcessor:()=>j.SiglipImageProcessor,SiglipModel:()=>r.SiglipModel,SiglipPreTrainedModel:()=>r.SiglipPreTrainedModel,SiglipTextModel:()=>r.SiglipTextModel,SiglipTokenizer:()=>y.SiglipTokenizer,SiglipVisionModel:()=>r.SiglipVisionModel,SpeechT5FeatureExtractor:()=>x.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>r.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>r.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>r.SpeechT5HifiGan,SpeechT5Model:()=>r.SpeechT5Model,SpeechT5PreTrainedModel:()=>r.SpeechT5PreTrainedModel,SpeechT5Processor:()=>me.SpeechT5Processor,SpeechT5Tokenizer:()=>y.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>r.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>r.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>r.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>r.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>r.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>y.SqueezeBertTokenizer,StableLmForCausalLM:()=>r.StableLmForCausalLM,StableLmModel:()=>r.StableLmModel,StableLmPreTrainedModel:()=>r.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>r.Starcoder2ForCausalLM,Starcoder2Model:()=>r.Starcoder2Model,Starcoder2PreTrainedModel:()=>r.Starcoder2PreTrainedModel,StoppingCriteria:()=>ne.StoppingCriteria,StoppingCriteriaList:()=>ne.StoppingCriteriaList,StyleTextToSpeech2Model:()=>r.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>r.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>P.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>R.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>r.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,Swin2SRModel:()=>r.Swin2SRModel,Swin2SRPreTrainedModel:()=>r.Swin2SRPreTrainedModel,SwinForImageClassification:()=>r.SwinForImageClassification,SwinModel:()=>r.SwinModel,SwinPreTrainedModel:()=>r.SwinPreTrainedModel,T5ForConditionalGeneration:()=>r.T5ForConditionalGeneration,T5Model:()=>r.T5Model,T5PreTrainedModel:()=>r.T5PreTrainedModel,T5Tokenizer:()=>y.T5Tokenizer,TableTransformerForObjectDetection:()=>r.TableTransformerForObjectDetection,TableTransformerModel:()=>r.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>r.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>r.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>R.TemperatureLogitsWarper,Tensor:()=>K.Tensor,Text2TextGenerationPipeline:()=>P.Text2TextGenerationPipeline,TextClassificationPipeline:()=>P.TextClassificationPipeline,TextGenerationPipeline:()=>P.TextGenerationPipeline,TextStreamer:()=>q.TextStreamer,TextToAudioPipeline:()=>P.TextToAudioPipeline,TokenClassificationPipeline:()=>P.TokenClassificationPipeline,TokenClassifierOutput:()=>r.TokenClassifierOutput,TokenizerModel:()=>y.TokenizerModel,TopKLogitsWarper:()=>R.TopKLogitsWarper,TopPLogitsWarper:()=>R.TopPLogitsWarper,TrOCRForCausalLM:()=>r.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>r.TrOCRPreTrainedModel,TranslationPipeline:()=>P.TranslationPipeline,UniSpeechForCTC:()=>r.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>r.UniSpeechForSequenceClassification,UniSpeechModel:()=>r.UniSpeechModel,UniSpeechPreTrainedModel:()=>r.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>r.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>r.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>r.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>r.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>r.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>me.VLChatProcessor,VLMImageProcessor:()=>j.VLMImageProcessor,ViTFeatureExtractor:()=>j.ViTFeatureExtractor,ViTForImageClassification:()=>r.ViTForImageClassification,ViTImageProcessor:()=>j.ViTImageProcessor,ViTMAEModel:()=>r.ViTMAEModel,ViTMAEPreTrainedModel:()=>r.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>r.ViTMSNForImageClassification,ViTMSNModel:()=>r.ViTMSNModel,ViTMSNPreTrainedModel:()=>r.ViTMSNPreTrainedModel,ViTModel:()=>r.ViTModel,ViTPreTrainedModel:()=>r.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>r.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>r.VitMatteForImageMatting,VitMatteImageProcessor:()=>j.VitMatteImageProcessor,VitMattePreTrainedModel:()=>r.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>r.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>j.VitPoseImageProcessor,VitPosePreTrainedModel:()=>r.VitPosePreTrainedModel,VitsModel:()=>r.VitsModel,VitsModelOutput:()=>r.VitsModelOutput,VitsPreTrainedModel:()=>r.VitsPreTrainedModel,VitsTokenizer:()=>y.VitsTokenizer,Wav2Vec2BertForCTC:()=>r.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>r.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>r.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>r.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>y.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>x.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>r.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>r.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>r.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>r.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>r.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>me.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>me.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>r.WavLMForAudioFrameClassification,WavLMForCTC:()=>r.WavLMForCTC,WavLMForSequenceClassification:()=>r.WavLMForSequenceClassification,WavLMForXVector:()=>r.WavLMForXVector,WavLMModel:()=>r.WavLMModel,WavLMPreTrainedModel:()=>r.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>x.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>r.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>r.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>x.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>r.WhisperForConditionalGeneration,WhisperModel:()=>r.WhisperModel,WhisperPreTrainedModel:()=>r.WhisperPreTrainedModel,WhisperProcessor:()=>me.WhisperProcessor,WhisperTextStreamer:()=>q.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>R.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>y.WhisperTokenizer,XLMForQuestionAnswering:()=>r.XLMForQuestionAnswering,XLMForSequenceClassification:()=>r.XLMForSequenceClassification,XLMForTokenClassification:()=>r.XLMForTokenClassification,XLMModel:()=>r.XLMModel,XLMPreTrainedModel:()=>r.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>r.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>r.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>r.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>r.XLMRobertaForTokenClassification,XLMRobertaModel:()=>r.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>r.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>y.XLMRobertaTokenizer,XLMTokenizer:()=>y.XLMTokenizer,XLMWithLMHeadModel:()=>r.XLMWithLMHeadModel,XVectorOutput:()=>r.XVectorOutput,YolosFeatureExtractor:()=>j.YolosFeatureExtractor,YolosForObjectDetection:()=>r.YolosForObjectDetection,YolosImageProcessor:()=>j.YolosImageProcessor,YolosModel:()=>r.YolosModel,YolosObjectDetectionOutput:()=>r.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>r.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>P.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>P.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>P.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>P.ZeroShotObjectDetectionPipeline,bankers_round:()=>v.bankers_round,cat:()=>K.cat,cos_sim:()=>v.cos_sim,dot:()=>v.dot,dynamic_time_warping:()=>v.dynamic_time_warping,env:()=>Le.env,full:()=>K.full,full_like:()=>K.full_like,getKeyValueShapes:()=>z.getKeyValueShapes,hamming:()=>V.hamming,hanning:()=>V.hanning,interpolate:()=>K.interpolate,interpolate_4d:()=>K.interpolate_4d,interpolate_data:()=>v.interpolate_data,is_chinese_char:()=>y.is_chinese_char,layer_norm:()=>K.layer_norm,load_image:()=>se.load_image,log_softmax:()=>v.log_softmax,magnitude:()=>v.magnitude,matmul:()=>K.matmul,max:()=>v.max,mean:()=>K.mean,mean_pooling:()=>K.mean_pooling,medianFilter:()=>v.medianFilter,mel_filter_bank:()=>V.mel_filter_bank,min:()=>v.min,ones:()=>K.ones,ones_like:()=>K.ones_like,permute:()=>K.permute,permute_data:()=>v.permute_data,pipeline:()=>P.pipeline,quantize_embeddings:()=>K.quantize_embeddings,rand:()=>K.rand,read_audio:()=>V.read_audio,rfft:()=>K.rfft,round:()=>v.round,slice:()=>K.slice,softmax:()=>v.softmax,spectrogram:()=>V.spectrogram,stack:()=>K.stack,std_mean:()=>K.std_mean,topk:()=>K.topk,window_function:()=>V.window_function,zeros:()=>K.zeros,zeros_like:()=>K.zeros_like});var Le=Fs("./src/env.js"),P=Fs("./src/pipelines.js"),r=Fs("./src/models.js"),y=Fs("./src/tokenizers.js"),z=Fs("./src/configs.js"),V=Fs("./src/utils/audio.js"),se=Fs("./src/utils/image.js"),K=Fs("./src/utils/tensor.js"),v=Fs("./src/utils/maths.js"),k=Fs("./src/base/feature_extraction_utils.js"),x=Fs("./src/models/feature_extractors.js"),E=Fs("./src/models/auto/feature_extraction_auto.js"),C=Fs("./src/base/image_processors_utils.js"),j=Fs("./src/models/image_processors.js"),re=Fs("./src/models/auto/image_processing_auto.js"),ce=Fs("./src/base/processing_utils.js"),me=Fs("./src/models/processors.js"),Y=Fs("./src/models/auto/processing_auto.js"),q=Fs("./src/generation/streamers.js"),ne=Fs("./src/generation/stopping_criteria.js"),R=Fs("./src/generation/logits_process.js")})(),f.ASTFeatureExtractor,f.ASTForAudioClassification,f.ASTModel,f.ASTPreTrainedModel,f.AlbertForMaskedLM,f.AlbertForQuestionAnswering,f.AlbertForSequenceClassification,f.AlbertModel,f.AlbertPreTrainedModel,f.AlbertTokenizer,f.AudioClassificationPipeline,f.AutoConfig,f.AutoFeatureExtractor,f.AutoImageProcessor,f.AutoModel,f.AutoModelForAudioClassification,f.AutoModelForAudioFrameClassification,f.AutoModelForCTC,f.AutoModelForCausalLM,f.AutoModelForDepthEstimation,f.AutoModelForDocumentQuestionAnswering,f.AutoModelForImageClassification,f.AutoModelForImageFeatureExtraction,f.AutoModelForImageMatting,f.AutoModelForImageSegmentation,f.AutoModelForImageToImage,f.AutoModelForMaskGeneration,f.AutoModelForMaskedLM,f.AutoModelForNormalEstimation,f.AutoModelForObjectDetection,f.AutoModelForPoseEstimation,f.AutoModelForQuestionAnswering,f.AutoModelForSemanticSegmentation,f.AutoModelForSeq2SeqLM,f.AutoModelForSequenceClassification,f.AutoModelForSpeechSeq2Seq,f.AutoModelForTextToSpectrogram,f.AutoModelForTextToWaveform,f.AutoModelForTokenClassification,f.AutoModelForUniversalSegmentation,f.AutoModelForVision2Seq,f.AutoModelForXVector,f.AutoModelForZeroShotObjectDetection,f.AutoProcessor;var Ap=f.AutoTokenizer;f.AutomaticSpeechRecognitionPipeline,f.BartForConditionalGeneration,f.BartForSequenceClassification,f.BartModel,f.BartPretrainedModel,f.BartTokenizer,f.BaseModelOutput,f.BaseStreamer,f.BeitFeatureExtractor,f.BeitForImageClassification,f.BeitModel,f.BeitPreTrainedModel,f.BertForMaskedLM,f.BertForQuestionAnswering,f.BertForSequenceClassification,f.BertForTokenClassification,f.BertModel,f.BertPreTrainedModel,f.BertTokenizer,f.BitImageProcessor,f.BlenderbotForConditionalGeneration,f.BlenderbotModel,f.BlenderbotPreTrainedModel,f.BlenderbotSmallForConditionalGeneration,f.BlenderbotSmallModel,f.BlenderbotSmallPreTrainedModel,f.BlenderbotSmallTokenizer,f.BlenderbotTokenizer,f.BloomForCausalLM,f.BloomModel,f.BloomPreTrainedModel,f.BloomTokenizer,f.CLIPFeatureExtractor,f.CLIPImageProcessor,f.CLIPModel,f.CLIPPreTrainedModel,f.CLIPSegForImageSegmentation,f.CLIPSegModel,f.CLIPSegPreTrainedModel,f.CLIPTextModel,f.CLIPTextModelWithProjection,f.CLIPTokenizer,f.CLIPVisionModel,f.CLIPVisionModelWithProjection,f.CamembertForMaskedLM,f.CamembertForQuestionAnswering,f.CamembertForSequenceClassification,f.CamembertForTokenClassification,f.CamembertModel,f.CamembertPreTrainedModel,f.CamembertTokenizer,f.CausalLMOutput,f.CausalLMOutputWithPast,f.ChineseCLIPFeatureExtractor,f.ChineseCLIPModel,f.ChineseCLIPPreTrainedModel,f.ClapAudioModelWithProjection,f.ClapFeatureExtractor,f.ClapModel,f.ClapPreTrainedModel,f.ClapTextModelWithProjection,f.ClassifierFreeGuidanceLogitsProcessor,f.CodeGenForCausalLM,f.CodeGenModel,f.CodeGenPreTrainedModel,f.CodeGenTokenizer,f.CodeLlamaTokenizer,f.CohereForCausalLM,f.CohereModel,f.CoherePreTrainedModel,f.CohereTokenizer,f.ConvBertForMaskedLM,f.ConvBertForQuestionAnswering,f.ConvBertForSequenceClassification,f.ConvBertForTokenClassification,f.ConvBertModel,f.ConvBertPreTrainedModel,f.ConvBertTokenizer,f.ConvNextFeatureExtractor,f.ConvNextForImageClassification,f.ConvNextImageProcessor,f.ConvNextModel,f.ConvNextPreTrainedModel,f.ConvNextV2ForImageClassification,f.ConvNextV2Model,f.ConvNextV2PreTrainedModel,f.DPTFeatureExtractor,f.DPTForDepthEstimation,f.DPTImageProcessor,f.DPTModel,f.DPTPreTrainedModel,f.DebertaForMaskedLM,f.DebertaForQuestionAnswering,f.DebertaForSequenceClassification,f.DebertaForTokenClassification,f.DebertaModel,f.DebertaPreTrainedModel,f.DebertaTokenizer,f.DebertaV2ForMaskedLM,f.DebertaV2ForQuestionAnswering,f.DebertaV2ForSequenceClassification,f.DebertaV2ForTokenClassification,f.DebertaV2Model,f.DebertaV2PreTrainedModel,f.DebertaV2Tokenizer,f.DecisionTransformerModel,f.DecisionTransformerPreTrainedModel,f.DeiTFeatureExtractor,f.DeiTForImageClassification,f.DeiTImageProcessor,f.DeiTModel,f.DeiTPreTrainedModel,f.DepthAnythingForDepthEstimation,f.DepthAnythingPreTrainedModel,f.DepthEstimationPipeline,f.DepthProForDepthEstimation,f.DepthProPreTrainedModel,f.DetrFeatureExtractor,f.DetrForObjectDetection,f.DetrForSegmentation,f.DetrImageProcessor,f.DetrModel,f.DetrObjectDetectionOutput,f.DetrPreTrainedModel,f.DetrSegmentationOutput,f.Dinov2ForImageClassification,f.Dinov2Model,f.Dinov2PreTrainedModel,f.Dinov2WithRegistersForImageClassification,f.Dinov2WithRegistersModel,f.Dinov2WithRegistersPreTrainedModel,f.DistilBertForMaskedLM,f.DistilBertForQuestionAnswering,f.DistilBertForSequenceClassification,f.DistilBertForTokenClassification,f.DistilBertModel,f.DistilBertPreTrainedModel,f.DistilBertTokenizer,f.DocumentQuestionAnsweringPipeline,f.DonutFeatureExtractor,f.DonutImageProcessor,f.DonutSwinModel,f.DonutSwinPreTrainedModel,f.EfficientNetForImageClassification,f.EfficientNetImageProcessor,f.EfficientNetModel,f.EfficientNetPreTrainedModel,f.ElectraForMaskedLM,f.ElectraForQuestionAnswering,f.ElectraForSequenceClassification,f.ElectraForTokenClassification,f.ElectraModel,f.ElectraPreTrainedModel,f.ElectraTokenizer,f.EosTokenCriteria,f.EsmForMaskedLM,f.EsmForSequenceClassification,f.EsmForTokenClassification,f.EsmModel,f.EsmPreTrainedModel,f.EsmTokenizer,f.ExaoneForCausalLM,f.ExaoneModel,f.ExaonePreTrainedModel,f.FFT,f.FalconForCausalLM,f.FalconModel,f.FalconPreTrainedModel,f.FalconTokenizer,f.FastViTForImageClassification,f.FastViTModel,f.FastViTPreTrainedModel,f.FeatureExtractionPipeline,f.FeatureExtractor,f.FillMaskPipeline,f.Florence2ForConditionalGeneration,f.Florence2PreTrainedModel,f.Florence2Processor,f.ForcedBOSTokenLogitsProcessor,f.ForcedEOSTokenLogitsProcessor,f.GLPNFeatureExtractor,f.GLPNForDepthEstimation,f.GLPNModel,f.GLPNPreTrainedModel,f.GPT2LMHeadModel,f.GPT2Model,f.GPT2PreTrainedModel,f.GPT2Tokenizer,f.GPTBigCodeForCausalLM,f.GPTBigCodeModel,f.GPTBigCodePreTrainedModel,f.GPTJForCausalLM,f.GPTJModel,f.GPTJPreTrainedModel,f.GPTNeoForCausalLM,f.GPTNeoModel,f.GPTNeoPreTrainedModel,f.GPTNeoXForCausalLM,f.GPTNeoXModel,f.GPTNeoXPreTrainedModel,f.GPTNeoXTokenizer,f.Gemma2ForCausalLM,f.Gemma2Model,f.Gemma2PreTrainedModel,f.GemmaForCausalLM,f.GemmaModel,f.GemmaPreTrainedModel,f.GemmaTokenizer,f.GlmForCausalLM,f.GlmModel,f.GlmPreTrainedModel,f.GraniteForCausalLM,f.GraniteModel,f.GranitePreTrainedModel,f.Grok1Tokenizer,f.GroundingDinoForObjectDetection,f.GroundingDinoImageProcessor,f.GroundingDinoPreTrainedModel,f.GroundingDinoProcessor,f.GroupViTModel,f.GroupViTPreTrainedModel,f.HeliumForCausalLM,f.HeliumModel,f.HeliumPreTrainedModel,f.HerbertTokenizer,f.HieraForImageClassification,f.HieraModel,f.HieraPreTrainedModel,f.HubertForCTC,f.HubertForSequenceClassification,f.HubertModel,f.HubertPreTrainedModel,f.IJepaForImageClassification,f.IJepaModel,f.IJepaPreTrainedModel,f.Idefics3ForConditionalGeneration,f.Idefics3ImageProcessor,f.Idefics3PreTrainedModel,f.Idefics3Processor,f.ImageClassificationPipeline,f.ImageFeatureExtractionPipeline,f.ImageFeatureExtractor,f.ImageMattingOutput,f.ImageProcessor,f.ImageSegmentationPipeline,f.ImageToImagePipeline,f.ImageToTextPipeline,f.InterruptableStoppingCriteria,f.JAISLMHeadModel,f.JAISModel,f.JAISPreTrainedModel,f.JinaCLIPImageProcessor,f.JinaCLIPModel,f.JinaCLIPPreTrainedModel,f.JinaCLIPProcessor,f.JinaCLIPTextModel,f.JinaCLIPVisionModel,f.LlamaForCausalLM,f.LlamaModel,f.LlamaPreTrainedModel,f.LlamaTokenizer,f.LlavaForConditionalGeneration,f.LlavaOnevisionForConditionalGeneration,f.LlavaOnevisionImageProcessor,f.LlavaPreTrainedModel,f.LogitsProcessor,f.LogitsProcessorList,f.LogitsWarper,f.LongT5ForConditionalGeneration,f.LongT5Model,f.LongT5PreTrainedModel,f.M2M100ForConditionalGeneration,f.M2M100Model,f.M2M100PreTrainedModel,f.M2M100Tokenizer,f.MBart50Tokenizer,f.MBartForCausalLM,f.MBartForConditionalGeneration,f.MBartForSequenceClassification,f.MBartModel,f.MBartPreTrainedModel,f.MBartTokenizer,f.MPNetForMaskedLM,f.MPNetForQuestionAnswering,f.MPNetForSequenceClassification,f.MPNetForTokenClassification,f.MPNetModel,f.MPNetPreTrainedModel,f.MPNetTokenizer,f.MT5ForConditionalGeneration,f.MT5Model,f.MT5PreTrainedModel,f.MarianMTModel,f.MarianModel,f.MarianPreTrainedModel,f.MarianTokenizer,f.Mask2FormerImageProcessor,f.MaskFormerFeatureExtractor,f.MaskFormerForInstanceSegmentation,f.MaskFormerImageProcessor,f.MaskFormerModel,f.MaskFormerPreTrainedModel,f.MaskedLMOutput,f.MaxLengthCriteria,f.MgpstrForSceneTextRecognition,f.MgpstrModelOutput,f.MgpstrPreTrainedModel,f.MgpstrProcessor,f.MgpstrTokenizer,f.MinLengthLogitsProcessor,f.MinNewTokensLengthLogitsProcessor,f.MistralForCausalLM,f.MistralModel,f.MistralPreTrainedModel,f.MobileBertForMaskedLM,f.MobileBertForQuestionAnswering,f.MobileBertForSequenceClassification,f.MobileBertModel,f.MobileBertPreTrainedModel,f.MobileBertTokenizer,f.MobileLLMForCausalLM,f.MobileLLMModel,f.MobileLLMPreTrainedModel,f.MobileNetV1FeatureExtractor,f.MobileNetV1ForImageClassification,f.MobileNetV1ImageProcessor,f.MobileNetV1Model,f.MobileNetV1PreTrainedModel,f.MobileNetV2FeatureExtractor,f.MobileNetV2ForImageClassification,f.MobileNetV2ImageProcessor,f.MobileNetV2Model,f.MobileNetV2PreTrainedModel,f.MobileNetV3FeatureExtractor,f.MobileNetV3ForImageClassification,f.MobileNetV3ImageProcessor,f.MobileNetV3Model,f.MobileNetV3PreTrainedModel,f.MobileNetV4FeatureExtractor,f.MobileNetV4ForImageClassification,f.MobileNetV4ImageProcessor,f.MobileNetV4Model,f.MobileNetV4PreTrainedModel,f.MobileViTFeatureExtractor,f.MobileViTForImageClassification,f.MobileViTImageProcessor,f.MobileViTModel,f.MobileViTPreTrainedModel,f.MobileViTV2ForImageClassification,f.MobileViTV2Model,f.MobileViTV2PreTrainedModel,f.ModelOutput,f.ModernBertForMaskedLM,f.ModernBertForSequenceClassification,f.ModernBertForTokenClassification,f.ModernBertModel,f.ModernBertPreTrainedModel,f.Moondream1ForConditionalGeneration,f.MoonshineFeatureExtractor,f.MoonshineForConditionalGeneration,f.MoonshineModel,f.MoonshinePreTrainedModel,f.MoonshineProcessor,f.MptForCausalLM,f.MptModel,f.MptPreTrainedModel,f.MultiModalityCausalLM,f.MultiModalityPreTrainedModel,f.MusicgenForCausalLM,f.MusicgenForConditionalGeneration,f.MusicgenModel,f.MusicgenPreTrainedModel,f.NllbTokenizer,f.NoBadWordsLogitsProcessor,f.NoRepeatNGramLogitsProcessor,f.NomicBertModel,f.NomicBertPreTrainedModel,f.NougatImageProcessor,f.NougatTokenizer,f.OPTForCausalLM,f.OPTModel,f.OPTPreTrainedModel,f.ObjectDetectionPipeline,f.Olmo2ForCausalLM,f.Olmo2Model,f.Olmo2PreTrainedModel,f.OlmoForCausalLM,f.OlmoModel,f.OlmoPreTrainedModel,f.OpenELMForCausalLM,f.OpenELMModel,f.OpenELMPreTrainedModel,f.OwlViTFeatureExtractor,f.OwlViTForObjectDetection,f.OwlViTImageProcessor,f.OwlViTModel,f.OwlViTPreTrainedModel,f.OwlViTProcessor,f.Owlv2ForObjectDetection,f.Owlv2ImageProcessor,f.Owlv2Model,f.Owlv2PreTrainedModel,f.PaliGemmaForConditionalGeneration,f.PaliGemmaPreTrainedModel,f.PaliGemmaProcessor,f.PatchTSMixerForPrediction,f.PatchTSMixerModel,f.PatchTSMixerPreTrainedModel,f.PatchTSTForPrediction,f.PatchTSTModel,f.PatchTSTPreTrainedModel,f.Phi3ForCausalLM,f.Phi3Model,f.Phi3PreTrainedModel,f.Phi3VForCausalLM,f.Phi3VImageProcessor,f.Phi3VPreTrainedModel,f.Phi3VProcessor,f.PhiForCausalLM,f.PhiModel,f.PhiPreTrainedModel,f.Pipeline,f.PreTrainedModel,f.PreTrainedTokenizer,f.PretrainedConfig,f.PretrainedMixin,f.Processor,f.PvtForImageClassification,f.PvtImageProcessor,f.PvtModel,f.PvtPreTrainedModel,f.PyAnnoteFeatureExtractor,f.PyAnnoteForAudioFrameClassification,f.PyAnnoteModel,f.PyAnnotePreTrainedModel,f.PyAnnoteProcessor,f.QuestionAnsweringModelOutput,f.QuestionAnsweringPipeline,f.Qwen2ForCausalLM,f.Qwen2Model,f.Qwen2PreTrainedModel,f.Qwen2Tokenizer,f.Qwen2VLForConditionalGeneration,f.Qwen2VLImageProcessor,f.Qwen2VLPreTrainedModel,f.Qwen2VLProcessor,f.RTDetrForObjectDetection,f.RTDetrImageProcessor,f.RTDetrModel,f.RTDetrObjectDetectionOutput,f.RTDetrPreTrainedModel,f.RawAudio,f.RawImage,f.RepetitionPenaltyLogitsProcessor,f.ResNetForImageClassification,f.ResNetModel,f.ResNetPreTrainedModel,f.RoFormerForMaskedLM,f.RoFormerForQuestionAnswering,f.RoFormerForSequenceClassification,f.RoFormerForTokenClassification,f.RoFormerModel,f.RoFormerPreTrainedModel,f.RoFormerTokenizer,f.RobertaForMaskedLM,f.RobertaForQuestionAnswering,f.RobertaForSequenceClassification,f.RobertaForTokenClassification,f.RobertaModel,f.RobertaPreTrainedModel,f.RobertaTokenizer,f.SamImageProcessor,f.SamImageSegmentationOutput,f.SamModel,f.SamPreTrainedModel,f.SamProcessor,f.SapiensForDepthEstimation,f.SapiensForNormalEstimation,f.SapiensForSemanticSegmentation,f.SapiensPreTrainedModel,f.SeamlessM4TFeatureExtractor,f.SegformerFeatureExtractor,f.SegformerForImageClassification,f.SegformerForSemanticSegmentation,f.SegformerImageProcessor,f.SegformerModel,f.SegformerPreTrainedModel,f.Seq2SeqLMOutput,f.SequenceClassifierOutput,f.SiglipImageProcessor,f.SiglipModel,f.SiglipPreTrainedModel,f.SiglipTextModel,f.SiglipTokenizer,f.SiglipVisionModel,f.SpeechT5FeatureExtractor,f.SpeechT5ForSpeechToText,f.SpeechT5ForTextToSpeech,f.SpeechT5HifiGan,f.SpeechT5Model,f.SpeechT5PreTrainedModel,f.SpeechT5Processor,f.SpeechT5Tokenizer,f.SqueezeBertForMaskedLM,f.SqueezeBertForQuestionAnswering,f.SqueezeBertForSequenceClassification,f.SqueezeBertModel,f.SqueezeBertPreTrainedModel,f.SqueezeBertTokenizer,f.StableLmForCausalLM,f.StableLmModel,f.StableLmPreTrainedModel,f.Starcoder2ForCausalLM,f.Starcoder2Model,f.Starcoder2PreTrainedModel,f.StoppingCriteria,f.StoppingCriteriaList,f.StyleTextToSpeech2Model,f.StyleTextToSpeech2PreTrainedModel,f.SummarizationPipeline,f.SuppressTokensAtBeginLogitsProcessor,f.Swin2SRForImageSuperResolution,f.Swin2SRImageProcessor,f.Swin2SRModel,f.Swin2SRPreTrainedModel,f.SwinForImageClassification,f.SwinModel,f.SwinPreTrainedModel,f.T5ForConditionalGeneration,f.T5Model,f.T5PreTrainedModel,f.T5Tokenizer,f.TableTransformerForObjectDetection,f.TableTransformerModel,f.TableTransformerObjectDetectionOutput,f.TableTransformerPreTrainedModel,f.TemperatureLogitsWarper,f.Tensor,f.Text2TextGenerationPipeline,f.TextClassificationPipeline,f.TextGenerationPipeline,f.TextStreamer,f.TextToAudioPipeline,f.TokenClassificationPipeline,f.TokenClassifierOutput,f.TokenizerModel,f.TopKLogitsWarper,f.TopPLogitsWarper,f.TrOCRForCausalLM,f.TrOCRPreTrainedModel,f.TranslationPipeline,f.UniSpeechForCTC,f.UniSpeechForSequenceClassification,f.UniSpeechModel,f.UniSpeechPreTrainedModel,f.UniSpeechSatForAudioFrameClassification,f.UniSpeechSatForCTC,f.UniSpeechSatForSequenceClassification,f.UniSpeechSatModel,f.UniSpeechSatPreTrainedModel,f.VLChatProcessor,f.VLMImageProcessor,f.ViTFeatureExtractor,f.ViTForImageClassification,f.ViTImageProcessor,f.ViTMAEModel,f.ViTMAEPreTrainedModel,f.ViTMSNForImageClassification,f.ViTMSNModel,f.ViTMSNPreTrainedModel,f.ViTModel,f.ViTPreTrainedModel,f.VisionEncoderDecoderModel,f.VitMatteForImageMatting,f.VitMatteImageProcessor,f.VitMattePreTrainedModel,f.VitPoseForPoseEstimation,f.VitPoseImageProcessor,f.VitPosePreTrainedModel,f.VitsModel,f.VitsModelOutput,f.VitsPreTrainedModel,f.VitsTokenizer,f.Wav2Vec2BertForCTC,f.Wav2Vec2BertForSequenceClassification,f.Wav2Vec2BertModel,f.Wav2Vec2BertPreTrainedModel,f.Wav2Vec2CTCTokenizer,f.Wav2Vec2FeatureExtractor,f.Wav2Vec2ForAudioFrameClassification,f.Wav2Vec2ForCTC,f.Wav2Vec2ForSequenceClassification,f.Wav2Vec2Model,f.Wav2Vec2PreTrainedModel,f.Wav2Vec2Processor,f.Wav2Vec2ProcessorWithLM,f.WavLMForAudioFrameClassification,f.WavLMForCTC,f.WavLMForSequenceClassification,f.WavLMForXVector,f.WavLMModel,f.WavLMPreTrainedModel,f.WeSpeakerFeatureExtractor,f.WeSpeakerResNetModel,f.WeSpeakerResNetPreTrainedModel,f.WhisperFeatureExtractor,f.WhisperForConditionalGeneration,f.WhisperModel,f.WhisperPreTrainedModel,f.WhisperProcessor,f.WhisperTextStreamer,f.WhisperTimeStampLogitsProcessor,f.WhisperTokenizer,f.XLMForQuestionAnswering,f.XLMForSequenceClassification,f.XLMForTokenClassification,f.XLMModel,f.XLMPreTrainedModel,f.XLMRobertaForMaskedLM,f.XLMRobertaForQuestionAnswering,f.XLMRobertaForSequenceClassification,f.XLMRobertaForTokenClassification,f.XLMRobertaModel,f.XLMRobertaPreTrainedModel,f.XLMRobertaTokenizer,f.XLMTokenizer,f.XLMWithLMHeadModel,f.XVectorOutput,f.YolosFeatureExtractor,f.YolosForObjectDetection,f.YolosImageProcessor,f.YolosModel,f.YolosObjectDetectionOutput,f.YolosPreTrainedModel,f.ZeroShotAudioClassificationPipeline,f.ZeroShotClassificationPipeline,f.ZeroShotImageClassificationPipeline,f.ZeroShotObjectDetectionPipeline,f.bankers_round,f.cat,f.cos_sim,f.dot,f.dynamic_time_warping;var Mf=f.env;f.full,f.full_like,f.getKeyValueShapes,f.hamming,f.hanning,f.interpolate,f.interpolate_4d,f.interpolate_data,f.is_chinese_char,f.layer_norm,f.load_image,f.log_softmax,f.magnitude,f.matmul,f.max,f.mean,f.mean_pooling,f.medianFilter,f.mel_filter_bank,f.min,f.ones,f.ones_like,f.permute,f.permute_data;var bf=f.pipeline;f.quantize_embeddings,f.rand,f.read_audio,f.rfft,f.round,f.slice,f.softmax,f.spectrogram,f.stack,f.std_mean,f.topk,f.window_function,f.zeros,f.zeros_like;function vf(Le){return Le&&Le.__esModule&&Object.prototype.hasOwnProperty.call(Le,"default")?Le.default:Le}function Op(Le){if(Le.__esModule)return Le;var P=Le.default;if(typeof P=="function"){var r=function y(){return this instanceof y?Reflect.construct(P,arguments,this.constructor):P.apply(this,arguments)};r.prototype=P.prototype}else r={};return Object.defineProperty(r,"__esModule",{value:!0}),Object.keys(Le).forEach(function(y){var z=Object.getOwnPropertyDescriptor(Le,y);Object.defineProperty(r,y,z.get?z:{enumerable:!0,get:function(){return Le[y]}})}),r}var As={};const Tf=Object.prototype.toString;function Ua(Le){const P=Tf.call(Le);return P.endsWith("Array]")&&!P.includes("Big")}var xf=Object.freeze({__proto__:null,isAnyArray:Ua}),Ef=Op(xf);function Pf(Le){var P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!Ua(Le))throw new TypeError("input must be an array");if(Le.length===0)throw new TypeError("input must not be empty");var r=P.fromIndex,y=r===void 0?0:r,z=P.toIndex,V=z===void 0?Le.length:z;if(y<0||y>=Le.length||!Number.isInteger(y))throw new Error("fromIndex must be a positive integer smaller than length");if(V<=y||V>Le.length||!Number.isInteger(V))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var se=Le[y],K=y+1;K<V;K++)Le[K]>se&&(se=Le[K]);return se}function Cf(Le){var P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!Ua(Le))throw new TypeError("input must be an array");if(Le.length===0)throw new TypeError("input must not be empty");var r=P.fromIndex,y=r===void 0?0:r,z=P.toIndex,V=z===void 0?Le.length:z;if(y<0||y>=Le.length||!Number.isInteger(y))throw new Error("fromIndex must be a positive integer smaller than length");if(V<=y||V>Le.length||!Number.isInteger(V))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var se=Le[y],K=y+1;K<V;K++)Le[K]<se&&(se=Le[K]);return se}function kf(Le){var P=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(Ua(Le)){if(Le.length===0)throw new TypeError("input must not be empty")}else throw new TypeError("input must be an array");var r;if(P.output!==void 0){if(!Ua(P.output))throw new TypeError("output option must be an array if specified");r=P.output}else r=new Array(Le.length);var y=Cf(Le),z=Pf(Le);if(y===z)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var V=P.min,se=V===void 0?P.autoMinMax?y:0:V,K=P.max,v=K===void 0?P.autoMinMax?z:1:K;if(se>=v)throw new RangeError("min option must be smaller than max option");for(var k=(v-se)/(z-y),x=0;x<Le.length;x++)r[x]=(Le[x]-y)*k+se;return r}var Sf=Object.freeze({__proto__:null,default:kf}),$f=Op(Sf),Fp;function If(){var ns,Ip,sr;if(Fp)return As;Fp=1,Object.defineProperty(As,"__esModule",{value:!0});var Le=Ef,P=$f;const r=" ".repeat(2),y=" ".repeat(4);function z(){return V(this)}function V(B,c={}){const{maxRows:l=15,maxColumns:n=10,maxNumSize:u=8,padMinus:_="auto"}=c;return`${B.constructor.name} {
${r}[
${y}${se(B,l,n,u,_)}
${r}]
${r}rows: ${B.rows}
${r}columns: ${B.columns}
}`}function se(B,c,l,n,u){const{rows:_,columns:O}=B,N=Math.min(_,c),X=Math.min(O,l),ie=[];if(u==="auto"){u=!1;e:for(let je=0;je<N;je++)for(let be=0;be<X;be++)if(B.get(je,be)<0){u=!0;break e}}for(let je=0;je<N;je++){let be=[];for(let Ze=0;Ze<X;Ze++)be.push(K(B.get(je,Ze),n,u));ie.push(`${be.join(" ")}`)}return X!==O&&(ie[ie.length-1]+=` ... ${O-l} more columns`),N!==_&&ie.push(`... ${_-c} more rows`),ie.join(`
${y}`)}function K(B,c,l){return(B>=0&&l?` ${v(B,c-1)}`:v(B,c)).padEnd(c)}function v(B,c){let l=B.toString();if(l.length<=c)return l;let n=B.toFixed(c);if(n.length>c&&(n=B.toFixed(Math.max(0,c-(n.length-c)))),n.length<=c&&!n.startsWith("0.000")&&!n.startsWith("-0.000"))return n;let u=B.toExponential(c);return u.length>c&&(u=B.toExponential(Math.max(0,c-(u.length-c)))),u.slice(0)}function k(B,c){B.prototype.add=function(n){return typeof n=="number"?this.addS(n):this.addM(n)},B.prototype.addS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)+n);return this},B.prototype.addM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)+n.get(u,_));return this},B.add=function(n,u){return new c(n).add(u)},B.prototype.sub=function(n){return typeof n=="number"?this.subS(n):this.subM(n)},B.prototype.subS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)-n);return this},B.prototype.subM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)-n.get(u,_));return this},B.sub=function(n,u){return new c(n).sub(u)},B.prototype.subtract=B.prototype.sub,B.prototype.subtractS=B.prototype.subS,B.prototype.subtractM=B.prototype.subM,B.subtract=B.sub,B.prototype.mul=function(n){return typeof n=="number"?this.mulS(n):this.mulM(n)},B.prototype.mulS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)*n);return this},B.prototype.mulM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)*n.get(u,_));return this},B.mul=function(n,u){return new c(n).mul(u)},B.prototype.multiply=B.prototype.mul,B.prototype.multiplyS=B.prototype.mulS,B.prototype.multiplyM=B.prototype.mulM,B.multiply=B.mul,B.prototype.div=function(n){return typeof n=="number"?this.divS(n):this.divM(n)},B.prototype.divS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)/n);return this},B.prototype.divM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)/n.get(u,_));return this},B.div=function(n,u){return new c(n).div(u)},B.prototype.divide=B.prototype.div,B.prototype.divideS=B.prototype.divS,B.prototype.divideM=B.prototype.divM,B.divide=B.div,B.prototype.mod=function(n){return typeof n=="number"?this.modS(n):this.modM(n)},B.prototype.modS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)%n);return this},B.prototype.modM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)%n.get(u,_));return this},B.mod=function(n,u){return new c(n).mod(u)},B.prototype.modulus=B.prototype.mod,B.prototype.modulusS=B.prototype.modS,B.prototype.modulusM=B.prototype.modM,B.modulus=B.mod,B.prototype.and=function(n){return typeof n=="number"?this.andS(n):this.andM(n)},B.prototype.andS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)&n);return this},B.prototype.andM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)&n.get(u,_));return this},B.and=function(n,u){return new c(n).and(u)},B.prototype.or=function(n){return typeof n=="number"?this.orS(n):this.orM(n)},B.prototype.orS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)|n);return this},B.prototype.orM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)|n.get(u,_));return this},B.or=function(n,u){return new c(n).or(u)},B.prototype.xor=function(n){return typeof n=="number"?this.xorS(n):this.xorM(n)},B.prototype.xorS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)^n);return this},B.prototype.xorM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)^n.get(u,_));return this},B.xor=function(n,u){return new c(n).xor(u)},B.prototype.leftShift=function(n){return typeof n=="number"?this.leftShiftS(n):this.leftShiftM(n)},B.prototype.leftShiftS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)<<n);return this},B.prototype.leftShiftM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)<<n.get(u,_));return this},B.leftShift=function(n,u){return new c(n).leftShift(u)},B.prototype.signPropagatingRightShift=function(n){return typeof n=="number"?this.signPropagatingRightShiftS(n):this.signPropagatingRightShiftM(n)},B.prototype.signPropagatingRightShiftS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)>>n);return this},B.prototype.signPropagatingRightShiftM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)>>n.get(u,_));return this},B.signPropagatingRightShift=function(n,u){return new c(n).signPropagatingRightShift(u)},B.prototype.rightShift=function(n){return typeof n=="number"?this.rightShiftS(n):this.rightShiftM(n)},B.prototype.rightShiftS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)>>>n);return this},B.prototype.rightShiftM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)>>>n.get(u,_));return this},B.rightShift=function(n,u){return new c(n).rightShift(u)},B.prototype.zeroFillRightShift=B.prototype.rightShift,B.prototype.zeroFillRightShiftS=B.prototype.rightShiftS,B.prototype.zeroFillRightShiftM=B.prototype.rightShiftM,B.zeroFillRightShift=B.rightShift,B.prototype.not=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,~this.get(n,u));return this},B.not=function(n){return new c(n).not()},B.prototype.abs=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.abs(this.get(n,u)));return this},B.abs=function(n){return new c(n).abs()},B.prototype.acos=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.acos(this.get(n,u)));return this},B.acos=function(n){return new c(n).acos()},B.prototype.acosh=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.acosh(this.get(n,u)));return this},B.acosh=function(n){return new c(n).acosh()},B.prototype.asin=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.asin(this.get(n,u)));return this},B.asin=function(n){return new c(n).asin()},B.prototype.asinh=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.asinh(this.get(n,u)));return this},B.asinh=function(n){return new c(n).asinh()},B.prototype.atan=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.atan(this.get(n,u)));return this},B.atan=function(n){return new c(n).atan()},B.prototype.atanh=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.atanh(this.get(n,u)));return this},B.atanh=function(n){return new c(n).atanh()},B.prototype.cbrt=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.cbrt(this.get(n,u)));return this},B.cbrt=function(n){return new c(n).cbrt()},B.prototype.ceil=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.ceil(this.get(n,u)));return this},B.ceil=function(n){return new c(n).ceil()},B.prototype.clz32=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.clz32(this.get(n,u)));return this},B.clz32=function(n){return new c(n).clz32()},B.prototype.cos=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.cos(this.get(n,u)));return this},B.cos=function(n){return new c(n).cos()},B.prototype.cosh=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.cosh(this.get(n,u)));return this},B.cosh=function(n){return new c(n).cosh()},B.prototype.exp=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.exp(this.get(n,u)));return this},B.exp=function(n){return new c(n).exp()},B.prototype.expm1=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.expm1(this.get(n,u)));return this},B.expm1=function(n){return new c(n).expm1()},B.prototype.floor=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.floor(this.get(n,u)));return this},B.floor=function(n){return new c(n).floor()},B.prototype.fround=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.fround(this.get(n,u)));return this},B.fround=function(n){return new c(n).fround()},B.prototype.log=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.log(this.get(n,u)));return this},B.log=function(n){return new c(n).log()},B.prototype.log1p=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.log1p(this.get(n,u)));return this},B.log1p=function(n){return new c(n).log1p()},B.prototype.log10=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.log10(this.get(n,u)));return this},B.log10=function(n){return new c(n).log10()},B.prototype.log2=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.log2(this.get(n,u)));return this},B.log2=function(n){return new c(n).log2()},B.prototype.round=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.round(this.get(n,u)));return this},B.round=function(n){return new c(n).round()},B.prototype.sign=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.sign(this.get(n,u)));return this},B.sign=function(n){return new c(n).sign()},B.prototype.sin=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.sin(this.get(n,u)));return this},B.sin=function(n){return new c(n).sin()},B.prototype.sinh=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.sinh(this.get(n,u)));return this},B.sinh=function(n){return new c(n).sinh()},B.prototype.sqrt=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.sqrt(this.get(n,u)));return this},B.sqrt=function(n){return new c(n).sqrt()},B.prototype.tan=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.tan(this.get(n,u)));return this},B.tan=function(n){return new c(n).tan()},B.prototype.tanh=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.tanh(this.get(n,u)));return this},B.tanh=function(n){return new c(n).tanh()},B.prototype.trunc=function(){for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.set(n,u,Math.trunc(this.get(n,u)));return this},B.trunc=function(n){return new c(n).trunc()},B.pow=function(n,u){return new c(n).pow(u)},B.prototype.pow=function(n){return typeof n=="number"?this.powS(n):this.powM(n)},B.prototype.powS=function(n){for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)**n);return this},B.prototype.powM=function(n){if(n=c.checkMatrix(n),this.rows!==n.rows||this.columns!==n.columns)throw new RangeError("Matrices dimensions must be equal");for(let u=0;u<this.rows;u++)for(let _=0;_<this.columns;_++)this.set(u,_,this.get(u,_)**n.get(u,_));return this}}function x(B,c,l){let n=l?B.rows:B.rows-1;if(c<0||c>n)throw new RangeError("Row index out of range")}function E(B,c,l){let n=l?B.columns:B.columns-1;if(c<0||c>n)throw new RangeError("Column index out of range")}function C(B,c){if(c.to1DArray&&(c=c.to1DArray()),c.length!==B.columns)throw new RangeError("vector size must be the same as the number of columns");return c}function j(B,c){if(c.to1DArray&&(c=c.to1DArray()),c.length!==B.rows)throw new RangeError("vector size must be the same as the number of rows");return c}function re(B,c){if(!Le.isAnyArray(c))throw new TypeError("row indices must be an array");for(let l=0;l<c.length;l++)if(c[l]<0||c[l]>=B.rows)throw new RangeError("row indices are out of range")}function ce(B,c){if(!Le.isAnyArray(c))throw new TypeError("column indices must be an array");for(let l=0;l<c.length;l++)if(c[l]<0||c[l]>=B.columns)throw new RangeError("column indices are out of range")}function me(B,c,l,n,u){if(arguments.length!==5)throw new RangeError("expected 4 arguments");if(q("startRow",c),q("endRow",l),q("startColumn",n),q("endColumn",u),c>l||n>u||c<0||c>=B.rows||l<0||l>=B.rows||n<0||n>=B.columns||u<0||u>=B.columns)throw new RangeError("Submatrix indices are out of range")}function Y(B,c=0){let l=[];for(let n=0;n<B;n++)l.push(c);return l}function q(B,c){if(typeof c!="number")throw new TypeError(`${B} must be a number`)}function ne(B){if(B.isEmpty())throw new Error("Empty matrix has no elements to index")}function R(B){let c=Y(B.rows);for(let l=0;l<B.rows;++l)for(let n=0;n<B.columns;++n)c[l]+=B.get(l,n);return c}function L(B){let c=Y(B.columns);for(let l=0;l<B.rows;++l)for(let n=0;n<B.columns;++n)c[n]+=B.get(l,n);return c}function T(B){let c=0;for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)c+=B.get(l,n);return c}function S(B){let c=Y(B.rows,1);for(let l=0;l<B.rows;++l)for(let n=0;n<B.columns;++n)c[l]*=B.get(l,n);return c}function U(B){let c=Y(B.columns,1);for(let l=0;l<B.rows;++l)for(let n=0;n<B.columns;++n)c[n]*=B.get(l,n);return c}function ge(B){let c=1;for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)c*=B.get(l,n);return c}function _e(B,c,l){const n=B.rows,u=B.columns,_=[];for(let O=0;O<n;O++){let N=0,X=0,ie=0;for(let je=0;je<u;je++)ie=B.get(O,je)-l[O],N+=ie,X+=ie*ie;c?_.push((X-N*N/u)/(u-1)):_.push((X-N*N/u)/u)}return _}function ze(B,c,l){const n=B.rows,u=B.columns,_=[];for(let O=0;O<u;O++){let N=0,X=0,ie=0;for(let je=0;je<n;je++)ie=B.get(je,O)-l[O],N+=ie,X+=ie*ie;c?_.push((X-N*N/n)/(n-1)):_.push((X-N*N/n)/n)}return _}function Ie(B,c,l){const n=B.rows,u=B.columns,_=n*u;let O=0,N=0,X=0;for(let ie=0;ie<n;ie++)for(let je=0;je<u;je++)X=B.get(ie,je)-l,O+=X,N+=X*X;return c?(N-O*O/_)/(_-1):(N-O*O/_)/_}function fe(B,c){for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)B.set(l,n,B.get(l,n)-c[l])}function Be(B,c){for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)B.set(l,n,B.get(l,n)-c[n])}function ve(B,c){for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)B.set(l,n,B.get(l,n)-c)}function Ge(B){const c=[];for(let l=0;l<B.rows;l++){let n=0;for(let u=0;u<B.columns;u++)n+=B.get(l,u)**2/(B.columns-1);c.push(Math.sqrt(n))}return c}function He(B,c){for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)B.set(l,n,B.get(l,n)/c[l])}function Ve(B){const c=[];for(let l=0;l<B.columns;l++){let n=0;for(let u=0;u<B.rows;u++)n+=B.get(u,l)**2/(B.rows-1);c.push(Math.sqrt(n))}return c}function wt(B,c){for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)B.set(l,n,B.get(l,n)/c[n])}function lt(B){const c=B.size-1;let l=0;for(let n=0;n<B.columns;n++)for(let u=0;u<B.rows;u++)l+=B.get(u,n)**2/c;return Math.sqrt(l)}function Ae(B,c){for(let l=0;l<B.rows;l++)for(let n=0;n<B.columns;n++)B.set(l,n,B.get(l,n)/c)}class ee{static from1DArray(c,l,n){if(c*l!==n.length)throw new RangeError("data length does not match given dimensions");let _=new xe(c,l);for(let O=0;O<c;O++)for(let N=0;N<l;N++)_.set(O,N,n[O*l+N]);return _}static rowVector(c){let l=new xe(1,c.length);for(let n=0;n<c.length;n++)l.set(0,n,c[n]);return l}static columnVector(c){let l=new xe(c.length,1);for(let n=0;n<c.length;n++)l.set(n,0,c[n]);return l}static zeros(c,l){return new xe(c,l)}static ones(c,l){return new xe(c,l).fill(1)}static rand(c,l,n={}){if(typeof n!="object")throw new TypeError("options must be an object");const{random:u=Math.random}=n;let _=new xe(c,l);for(let O=0;O<c;O++)for(let N=0;N<l;N++)_.set(O,N,u());return _}static randInt(c,l,n={}){if(typeof n!="object")throw new TypeError("options must be an object");const{min:u=0,max:_=1e3,random:O=Math.random}=n;if(!Number.isInteger(u))throw new TypeError("min must be an integer");if(!Number.isInteger(_))throw new TypeError("max must be an integer");if(u>=_)throw new RangeError("min must be smaller than max");let N=_-u,X=new xe(c,l);for(let ie=0;ie<c;ie++)for(let je=0;je<l;je++){let be=u+Math.round(O()*N);X.set(ie,je,be)}return X}static eye(c,l,n){l===void 0&&(l=c),n===void 0&&(n=1);let u=Math.min(c,l),_=this.zeros(c,l);for(let O=0;O<u;O++)_.set(O,O,n);return _}static diag(c,l,n){let u=c.length;l===void 0&&(l=u),n===void 0&&(n=l);let _=Math.min(u,l,n),O=this.zeros(l,n);for(let N=0;N<_;N++)O.set(N,N,c[N]);return O}static min(c,l){c=this.checkMatrix(c),l=this.checkMatrix(l);let n=c.rows,u=c.columns,_=new xe(n,u);for(let O=0;O<n;O++)for(let N=0;N<u;N++)_.set(O,N,Math.min(c.get(O,N),l.get(O,N)));return _}static max(c,l){c=this.checkMatrix(c),l=this.checkMatrix(l);let n=c.rows,u=c.columns,_=new this(n,u);for(let O=0;O<n;O++)for(let N=0;N<u;N++)_.set(O,N,Math.max(c.get(O,N),l.get(O,N)));return _}static checkMatrix(c){return ee.isMatrix(c)?c:new xe(c)}static isMatrix(c){return c!=null&&c.klass==="Matrix"}get size(){return this.rows*this.columns}apply(c){if(typeof c!="function")throw new TypeError("callback must be a function");for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)c.call(this,l,n);return this}to1DArray(){let c=[];for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)c.push(this.get(l,n));return c}to2DArray(){let c=[];for(let l=0;l<this.rows;l++){c.push([]);for(let n=0;n<this.columns;n++)c[l].push(this.get(l,n))}return c}toJSON(){return this.to2DArray()}isRowVector(){return this.rows===1}isColumnVector(){return this.columns===1}isVector(){return this.rows===1||this.columns===1}isSquare(){return this.rows===this.columns}isEmpty(){return this.rows===0||this.columns===0}isSymmetric(){if(this.isSquare()){for(let c=0;c<this.rows;c++)for(let l=0;l<=c;l++)if(this.get(c,l)!==this.get(l,c))return!1;return!0}return!1}isDistance(){if(!this.isSymmetric())return!1;for(let c=0;c<this.rows;c++)if(this.get(c,c)!==0)return!1;return!0}isEchelonForm(){let c=0,l=0,n=-1,u=!0,_=!1;for(;c<this.rows&&u;){for(l=0,_=!1;l<this.columns&&_===!1;)this.get(c,l)===0?l++:this.get(c,l)===1&&l>n?(_=!0,n=l):(u=!1,_=!0);c++}return u}isReducedEchelonForm(){let c=0,l=0,n=-1,u=!0,_=!1;for(;c<this.rows&&u;){for(l=0,_=!1;l<this.columns&&_===!1;)this.get(c,l)===0?l++:this.get(c,l)===1&&l>n?(_=!0,n=l):(u=!1,_=!0);for(let O=l+1;O<this.rows;O++)this.get(c,O)!==0&&(u=!1);c++}return u}echelonForm(){let c=this.clone(),l=0,n=0;for(;l<c.rows&&n<c.columns;){let u=l;for(let _=l;_<c.rows;_++)c.get(_,n)>c.get(u,n)&&(u=_);if(c.get(u,n)===0)n++;else{c.swapRows(l,u);let _=c.get(l,n);for(let O=n;O<c.columns;O++)c.set(l,O,c.get(l,O)/_);for(let O=l+1;O<c.rows;O++){let N=c.get(O,n)/c.get(l,n);c.set(O,n,0);for(let X=n+1;X<c.columns;X++)c.set(O,X,c.get(O,X)-c.get(l,X)*N)}l++,n++}}return c}reducedEchelonForm(){let c=this.echelonForm(),l=c.columns,n=c.rows,u=n-1;for(;u>=0;)if(c.maxRow(u)===0)u--;else{let _=0,O=!1;for(;_<n&&O===!1;)c.get(u,_)===1?O=!0:_++;for(let N=0;N<u;N++){let X=c.get(N,_);for(let ie=_;ie<l;ie++){let je=c.get(N,ie)-X*c.get(u,ie);c.set(N,ie,je)}}u--}return c}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(c={}){if(typeof c!="object")throw new TypeError("options must be an object");const{rows:l=1,columns:n=1}=c;if(!Number.isInteger(l)||l<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(n)||n<=0)throw new TypeError("columns must be a positive integer");let u=new xe(this.rows*l,this.columns*n);for(let _=0;_<l;_++)for(let O=0;O<n;O++)u.setSubMatrix(this,this.rows*_,this.columns*O);return u}fill(c){for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,c);return this}neg(){return this.mulS(-1)}getRow(c){x(this,c);let l=[];for(let n=0;n<this.columns;n++)l.push(this.get(c,n));return l}getRowVector(c){return xe.rowVector(this.getRow(c))}setRow(c,l){x(this,c),l=C(this,l);for(let n=0;n<this.columns;n++)this.set(c,n,l[n]);return this}swapRows(c,l){x(this,c),x(this,l);for(let n=0;n<this.columns;n++){let u=this.get(c,n);this.set(c,n,this.get(l,n)),this.set(l,n,u)}return this}getColumn(c){E(this,c);let l=[];for(let n=0;n<this.rows;n++)l.push(this.get(n,c));return l}getColumnVector(c){return xe.columnVector(this.getColumn(c))}setColumn(c,l){E(this,c),l=j(this,l);for(let n=0;n<this.rows;n++)this.set(n,c,l[n]);return this}swapColumns(c,l){E(this,c),E(this,l);for(let n=0;n<this.rows;n++){let u=this.get(n,c);this.set(n,c,this.get(n,l)),this.set(n,l,u)}return this}addRowVector(c){c=C(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)+c[n]);return this}subRowVector(c){c=C(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)-c[n]);return this}mulRowVector(c){c=C(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)*c[n]);return this}divRowVector(c){c=C(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)/c[n]);return this}addColumnVector(c){c=j(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)+c[l]);return this}subColumnVector(c){c=j(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)-c[l]);return this}mulColumnVector(c){c=j(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)*c[l]);return this}divColumnVector(c){c=j(this,c);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)this.set(l,n,this.get(l,n)/c[l]);return this}mulRow(c,l){x(this,c);for(let n=0;n<this.columns;n++)this.set(c,n,this.get(c,n)*l);return this}mulColumn(c,l){E(this,c);for(let n=0;n<this.rows;n++)this.set(n,c,this.get(n,c)*l);return this}max(c){if(this.isEmpty())return NaN;switch(c){case"row":{const l=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)>l[n]&&(l[n]=this.get(n,u));return l}case"column":{const l=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)>l[u]&&(l[u]=this.get(n,u));return l}case void 0:{let l=this.get(0,0);for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)>l&&(l=this.get(n,u));return l}default:throw new Error(`invalid option: ${c}`)}}maxIndex(){ne(this);let c=this.get(0,0),l=[0,0];for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)>c&&(c=this.get(n,u),l[0]=n,l[1]=u);return l}min(c){if(this.isEmpty())return NaN;switch(c){case"row":{const l=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)<l[n]&&(l[n]=this.get(n,u));return l}case"column":{const l=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)<l[u]&&(l[u]=this.get(n,u));return l}case void 0:{let l=this.get(0,0);for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)<l&&(l=this.get(n,u));return l}default:throw new Error(`invalid option: ${c}`)}}minIndex(){ne(this);let c=this.get(0,0),l=[0,0];for(let n=0;n<this.rows;n++)for(let u=0;u<this.columns;u++)this.get(n,u)<c&&(c=this.get(n,u),l[0]=n,l[1]=u);return l}maxRow(c){if(x(this,c),this.isEmpty())return NaN;let l=this.get(c,0);for(let n=1;n<this.columns;n++)this.get(c,n)>l&&(l=this.get(c,n));return l}maxRowIndex(c){x(this,c),ne(this);let l=this.get(c,0),n=[c,0];for(let u=1;u<this.columns;u++)this.get(c,u)>l&&(l=this.get(c,u),n[1]=u);return n}minRow(c){if(x(this,c),this.isEmpty())return NaN;let l=this.get(c,0);for(let n=1;n<this.columns;n++)this.get(c,n)<l&&(l=this.get(c,n));return l}minRowIndex(c){x(this,c),ne(this);let l=this.get(c,0),n=[c,0];for(let u=1;u<this.columns;u++)this.get(c,u)<l&&(l=this.get(c,u),n[1]=u);return n}maxColumn(c){if(E(this,c),this.isEmpty())return NaN;let l=this.get(0,c);for(let n=1;n<this.rows;n++)this.get(n,c)>l&&(l=this.get(n,c));return l}maxColumnIndex(c){E(this,c),ne(this);let l=this.get(0,c),n=[0,c];for(let u=1;u<this.rows;u++)this.get(u,c)>l&&(l=this.get(u,c),n[0]=u);return n}minColumn(c){if(E(this,c),this.isEmpty())return NaN;let l=this.get(0,c);for(let n=1;n<this.rows;n++)this.get(n,c)<l&&(l=this.get(n,c));return l}minColumnIndex(c){E(this,c),ne(this);let l=this.get(0,c),n=[0,c];for(let u=1;u<this.rows;u++)this.get(u,c)<l&&(l=this.get(u,c),n[0]=u);return n}diag(){let c=Math.min(this.rows,this.columns),l=[];for(let n=0;n<c;n++)l.push(this.get(n,n));return l}norm(c="frobenius"){switch(c){case"max":return this.max();case"frobenius":return Math.sqrt(this.dot(this));default:throw new RangeError(`unknown norm type: ${c}`)}}cumulativeSum(){let c=0;for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)c+=this.get(l,n),this.set(l,n,c);return this}dot(c){ee.isMatrix(c)&&(c=c.to1DArray());let l=this.to1DArray();if(l.length!==c.length)throw new RangeError("vectors do not have the same size");let n=0;for(let u=0;u<l.length;u++)n+=l[u]*c[u];return n}mmul(c){c=xe.checkMatrix(c);let l=this.rows,n=this.columns,u=c.columns,_=new xe(l,u),O=new Float64Array(n);for(let N=0;N<u;N++){for(let X=0;X<n;X++)O[X]=c.get(X,N);for(let X=0;X<l;X++){let ie=0;for(let je=0;je<n;je++)ie+=this.get(X,je)*O[je];_.set(X,N,ie)}}return _}mpow(c){if(!this.isSquare())throw new RangeError("Matrix must be square");if(!Number.isInteger(c)||c<0)throw new RangeError("Exponent must be a non-negative integer");let l=xe.eye(this.rows),n=this;for(let u=c;u>1;u/=2)u&1&&(l=l.mmul(n)),n=n.mmul(n);return l}strassen2x2(c){c=xe.checkMatrix(c);let l=new xe(2,2);const n=this.get(0,0),u=c.get(0,0),_=this.get(0,1),O=c.get(0,1),N=this.get(1,0),X=c.get(1,0),ie=this.get(1,1),je=c.get(1,1),be=(n+ie)*(u+je),Ze=(N+ie)*u,Ct=n*(O-je),qe=ie*(X-u),mt=(n+_)*je,bt=(N-n)*(u+O),Ce=(_-ie)*(X+je),St=be+qe-mt+Ce,Kt=Ct+mt,ps=Ze+qe,gs=be-Ze+Ct+bt;return l.set(0,0,St),l.set(0,1,Kt),l.set(1,0,ps),l.set(1,1,gs),l}strassen3x3(c){c=xe.checkMatrix(c);let l=new xe(3,3);const n=this.get(0,0),u=this.get(0,1),_=this.get(0,2),O=this.get(1,0),N=this.get(1,1),X=this.get(1,2),ie=this.get(2,0),je=this.get(2,1),be=this.get(2,2),Ze=c.get(0,0),Ct=c.get(0,1),qe=c.get(0,2),mt=c.get(1,0),bt=c.get(1,1),Ce=c.get(1,2),St=c.get(2,0),Kt=c.get(2,1),ps=c.get(2,2),gs=(n+u+_-O-N-je-be)*bt,Zs=(n-O)*(-Ct+bt),es=N*(-Ze+Ct+mt-bt-Ce-St+ps),is=(-n+O+N)*(Ze-Ct+bt),qs=(O+N)*(-Ze+Ct),Re=n*Ze,Mt=(-n+ie+je)*(Ze-qe+Ce),zt=(-n+ie)*(qe-Ce),kt=(ie+je)*(-Ze+qe),Hs=(n+u+_-N-X-ie-je)*Ce,Os=je*(-Ze+qe+mt-bt-Ce-St+Kt),Qs=(-_+je+be)*(bt+St-Kt),Ys=(_-be)*(bt-Kt),Gt=_*St,Ar=(je+be)*(-St+Kt),or=(-_+N+X)*(Ce+St-ps),Nr=(_-X)*(Ce-ps),Vr=(N+X)*(-St+ps),Ps=u*mt,mr=X*Kt,vr=O*qe,Er=ie*Ct,cs=be*ps,Ne=Re+Gt+Ps,I=gs+is+qs+Re+Qs+Gt+Ar,ae=Re+Mt+kt+Hs+Gt+or+Vr,ye=Zs+es+is+Re+Gt+or+Nr,Fe=Zs+is+qs+Re+mr,Ke=Gt+or+Nr+Vr+vr,ht=Re+Mt+zt+Os+Qs+Ys+Gt,Ft=Qs+Ys+Gt+Ar+Er,Rt=Re+Mt+zt+kt+cs;return l.set(0,0,Ne),l.set(0,1,I),l.set(0,2,ae),l.set(1,0,ye),l.set(1,1,Fe),l.set(1,2,Ke),l.set(2,0,ht),l.set(2,1,Ft),l.set(2,2,Rt),l}mmulStrassen(c){c=xe.checkMatrix(c);let l=this.clone(),n=l.rows,u=l.columns,_=c.rows,O=c.columns;u!==_&&console.warn(`Multiplying ${n} x ${u} and ${_} x ${O} matrix: dimensions do not match.`);function N(be,Ze,Ct){let qe=be.rows,mt=be.columns;if(qe===Ze&&mt===Ct)return be;{let bt=ee.zeros(Ze,Ct);return bt=bt.setSubMatrix(be,0,0),bt}}let X=Math.max(n,_),ie=Math.max(u,O);l=N(l,X,ie),c=N(c,X,ie);function je(be,Ze,Ct,qe){if(Ct<=512||qe<=512)return be.mmul(Ze);Ct%2===1&&qe%2===1?(be=N(be,Ct+1,qe+1),Ze=N(Ze,Ct+1,qe+1)):Ct%2===1?(be=N(be,Ct+1,qe),Ze=N(Ze,Ct+1,qe)):qe%2===1&&(be=N(be,Ct,qe+1),Ze=N(Ze,Ct,qe+1));let mt=parseInt(be.rows/2,10),bt=parseInt(be.columns/2,10),Ce=be.subMatrix(0,mt-1,0,bt-1),St=Ze.subMatrix(0,mt-1,0,bt-1),Kt=be.subMatrix(0,mt-1,bt,be.columns-1),ps=Ze.subMatrix(0,mt-1,bt,Ze.columns-1),gs=be.subMatrix(mt,be.rows-1,0,bt-1),Zs=Ze.subMatrix(mt,Ze.rows-1,0,bt-1),es=be.subMatrix(mt,be.rows-1,bt,be.columns-1),is=Ze.subMatrix(mt,Ze.rows-1,bt,Ze.columns-1),qs=je(ee.add(Ce,es),ee.add(St,is),mt,bt),Re=je(ee.add(gs,es),St,mt,bt),Mt=je(Ce,ee.sub(ps,is),mt,bt),zt=je(es,ee.sub(Zs,St),mt,bt),kt=je(ee.add(Ce,Kt),is,mt,bt),Hs=je(ee.sub(gs,Ce),ee.add(St,ps),mt,bt),Os=je(ee.sub(Kt,es),ee.add(Zs,is),mt,bt),Qs=ee.add(qs,zt);Qs.sub(kt),Qs.add(Os);let Ys=ee.add(Mt,kt),Gt=ee.add(Re,zt),Ar=ee.sub(qs,Re);Ar.add(Mt),Ar.add(Hs);let or=ee.zeros(2*Qs.rows,2*Qs.columns);return or=or.setSubMatrix(Qs,0,0),or=or.setSubMatrix(Ys,Qs.rows,0),or=or.setSubMatrix(Gt,0,Qs.columns),or=or.setSubMatrix(Ar,Qs.rows,Qs.columns),or.subMatrix(0,Ct-1,0,qe-1)}return je(l,c,X,ie)}scaleRows(c={}){if(typeof c!="object")throw new TypeError("options must be an object");const{min:l=0,max:n=1}=c;if(!Number.isFinite(l))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(l>=n)throw new RangeError("min must be smaller than max");let u=new xe(this.rows,this.columns);for(let _=0;_<this.rows;_++){const O=this.getRow(_);O.length>0&&P(O,{min:l,max:n,output:O}),u.setRow(_,O)}return u}scaleColumns(c={}){if(typeof c!="object")throw new TypeError("options must be an object");const{min:l=0,max:n=1}=c;if(!Number.isFinite(l))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(l>=n)throw new RangeError("min must be smaller than max");let u=new xe(this.rows,this.columns);for(let _=0;_<this.columns;_++){const O=this.getColumn(_);O.length&&P(O,{min:l,max:n,output:O}),u.setColumn(_,O)}return u}flipRows(){const c=Math.ceil(this.columns/2);for(let l=0;l<this.rows;l++)for(let n=0;n<c;n++){let u=this.get(l,n),_=this.get(l,this.columns-1-n);this.set(l,n,_),this.set(l,this.columns-1-n,u)}return this}flipColumns(){const c=Math.ceil(this.rows/2);for(let l=0;l<this.columns;l++)for(let n=0;n<c;n++){let u=this.get(n,l),_=this.get(this.rows-1-n,l);this.set(n,l,_),this.set(this.rows-1-n,l,u)}return this}kroneckerProduct(c){c=xe.checkMatrix(c);let l=this.rows,n=this.columns,u=c.rows,_=c.columns,O=new xe(l*u,n*_);for(let N=0;N<l;N++)for(let X=0;X<n;X++)for(let ie=0;ie<u;ie++)for(let je=0;je<_;je++)O.set(u*N+ie,_*X+je,this.get(N,X)*c.get(ie,je));return O}kroneckerSum(c){if(c=xe.checkMatrix(c),!this.isSquare()||!c.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let l=this.rows,n=c.rows,u=this.kroneckerProduct(xe.eye(n,n)),_=xe.eye(l,l).kroneckerProduct(c);return u.add(_)}transpose(){let c=new xe(this.columns,this.rows);for(let l=0;l<this.rows;l++)for(let n=0;n<this.columns;n++)c.set(n,l,this.get(l,n));return c}sortRows(c=Me){for(let l=0;l<this.rows;l++)this.setRow(l,this.getRow(l).sort(c));return this}sortColumns(c=Me){for(let l=0;l<this.columns;l++)this.setColumn(l,this.getColumn(l).sort(c));return this}subMatrix(c,l,n,u){me(this,c,l,n,u);let _=new xe(l-c+1,u-n+1);for(let O=c;O<=l;O++)for(let N=n;N<=u;N++)_.set(O-c,N-n,this.get(O,N));return _}subMatrixRow(c,l,n){if(l===void 0&&(l=0),n===void 0&&(n=this.columns-1),l>n||l<0||l>=this.columns||n<0||n>=this.columns)throw new RangeError("Argument out of range");let u=new xe(c.length,n-l+1);for(let _=0;_<c.length;_++)for(let O=l;O<=n;O++){if(c[_]<0||c[_]>=this.rows)throw new RangeError(`Row index out of range: ${c[_]}`);u.set(_,O-l,this.get(c[_],O))}return u}subMatrixColumn(c,l,n){if(l===void 0&&(l=0),n===void 0&&(n=this.rows-1),l>n||l<0||l>=this.rows||n<0||n>=this.rows)throw new RangeError("Argument out of range");let u=new xe(n-l+1,c.length);for(let _=0;_<c.length;_++)for(let O=l;O<=n;O++){if(c[_]<0||c[_]>=this.columns)throw new RangeError(`Column index out of range: ${c[_]}`);u.set(O-l,_,this.get(O,c[_]))}return u}setSubMatrix(c,l,n){if(c=xe.checkMatrix(c),c.isEmpty())return this;let u=l+c.rows-1,_=n+c.columns-1;me(this,l,u,n,_);for(let O=0;O<c.rows;O++)for(let N=0;N<c.columns;N++)this.set(l+O,n+N,c.get(O,N));return this}selection(c,l){re(this,c),ce(this,l);let n=new xe(c.length,l.length);for(let u=0;u<c.length;u++){let _=c[u];for(let O=0;O<l.length;O++){let N=l[O];n.set(u,O,this.get(_,N))}}return n}trace(){let c=Math.min(this.rows,this.columns),l=0;for(let n=0;n<c;n++)l+=this.get(n,n);return l}clone(){return this.constructor.copy(this,new xe(this.rows,this.columns))}static copy(c,l){for(const[n,u,_]of c.entries())l.set(n,u,_);return l}sum(c){switch(c){case"row":return R(this);case"column":return L(this);case void 0:return T(this);default:throw new Error(`invalid option: ${c}`)}}product(c){switch(c){case"row":return S(this);case"column":return U(this);case void 0:return ge(this);default:throw new Error(`invalid option: ${c}`)}}mean(c){const l=this.sum(c);switch(c){case"row":{for(let n=0;n<this.rows;n++)l[n]/=this.columns;return l}case"column":{for(let n=0;n<this.columns;n++)l[n]/=this.rows;return l}case void 0:return l/this.size;default:throw new Error(`invalid option: ${c}`)}}variance(c,l={}){if(typeof c=="object"&&(l=c,c=void 0),typeof l!="object")throw new TypeError("options must be an object");const{unbiased:n=!0,mean:u=this.mean(c)}=l;if(typeof n!="boolean")throw new TypeError("unbiased must be a boolean");switch(c){case"row":{if(!Le.isAnyArray(u))throw new TypeError("mean must be an array");return _e(this,n,u)}case"column":{if(!Le.isAnyArray(u))throw new TypeError("mean must be an array");return ze(this,n,u)}case void 0:{if(typeof u!="number")throw new TypeError("mean must be a number");return Ie(this,n,u)}default:throw new Error(`invalid option: ${c}`)}}standardDeviation(c,l){typeof c=="object"&&(l=c,c=void 0);const n=this.variance(c,l);if(c===void 0)return Math.sqrt(n);for(let u=0;u<n.length;u++)n[u]=Math.sqrt(n[u]);return n}center(c,l={}){if(typeof c=="object"&&(l=c,c=void 0),typeof l!="object")throw new TypeError("options must be an object");const{center:n=this.mean(c)}=l;switch(c){case"row":{if(!Le.isAnyArray(n))throw new TypeError("center must be an array");return fe(this,n),this}case"column":{if(!Le.isAnyArray(n))throw new TypeError("center must be an array");return Be(this,n),this}case void 0:{if(typeof n!="number")throw new TypeError("center must be a number");return ve(this,n),this}default:throw new Error(`invalid option: ${c}`)}}scale(c,l={}){if(typeof c=="object"&&(l=c,c=void 0),typeof l!="object")throw new TypeError("options must be an object");let n=l.scale;switch(c){case"row":{if(n===void 0)n=Ge(this);else if(!Le.isAnyArray(n))throw new TypeError("scale must be an array");return He(this,n),this}case"column":{if(n===void 0)n=Ve(this);else if(!Le.isAnyArray(n))throw new TypeError("scale must be an array");return wt(this,n),this}case void 0:{if(n===void 0)n=lt(this);else if(typeof n!="number")throw new TypeError("scale must be a number");return Ae(this,n),this}default:throw new Error(`invalid option: ${c}`)}}toString(c){return V(this,c)}[Symbol.iterator](){return this.entries()}*entries(){for(let c=0;c<this.rows;c++)for(let l=0;l<this.columns;l++)yield[c,l,this.get(c,l)]}*values(){for(let c=0;c<this.rows;c++)for(let l=0;l<this.columns;l++)yield this.get(c,l)}}ee.prototype.klass="Matrix",typeof Symbol<"u"&&(ee.prototype[Symbol.for("nodejs.util.inspect.custom")]=z);function Me(B,c){return B-c}function Ue(B){return B.every(c=>typeof c=="number")}ee.random=ee.rand,ee.randomInt=ee.randInt,ee.diagonal=ee.diag,ee.prototype.diagonal=ee.prototype.diag,ee.identity=ee.eye,ee.prototype.negate=ee.prototype.neg,ee.prototype.tensorProduct=ee.prototype.kroneckerProduct;const Gr=class Gr extends ee{constructor(l,n){super();Sp(this,ns);ke(this,"data");if(Gr.isMatrix(l))$p(this,ns,Ip).call(this,l.rows,l.columns),Gr.copy(l,this);else if(Number.isInteger(l)&&l>=0)$p(this,ns,Ip).call(this,l,n);else if(Le.isAnyArray(l)){const u=l;if(l=u.length,n=l?u[0].length:0,typeof n!="number")throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let _=0;_<l;_++){if(u[_].length!==n)throw new RangeError("Inconsistent array dimensions");if(!Ue(u[_]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(u[_]))}this.rows=l,this.columns=n}else throw new TypeError("First argument must be a positive number or an array")}set(l,n,u){return this.data[l][n]=u,this}get(l,n){return this.data[l][n]}removeRow(l){return x(this,l),this.data.splice(l,1),this.rows-=1,this}addRow(l,n){return n===void 0&&(n=l,l=this.rows),x(this,l,!0),n=Float64Array.from(C(this,n)),this.data.splice(l,0,n),this.rows+=1,this}removeColumn(l){E(this,l);for(let n=0;n<this.rows;n++){const u=new Float64Array(this.columns-1);for(let _=0;_<l;_++)u[_]=this.data[n][_];for(let _=l+1;_<this.columns;_++)u[_-1]=this.data[n][_];this.data[n]=u}return this.columns-=1,this}addColumn(l,n){typeof n>"u"&&(n=l,l=this.columns),E(this,l,!0),n=j(this,n);for(let u=0;u<this.rows;u++){const _=new Float64Array(this.columns+1);let O=0;for(;O<l;O++)_[O]=this.data[u][O];for(_[O++]=n[u];O<this.columns+1;O++)_[O]=this.data[u][O-1];this.data[u]=_}return this.columns+=1,this}};ns=new WeakSet,Ip=function(l,n){if(this.data=[],Number.isInteger(n)&&n>=0)for(let u=0;u<l;u++)this.data.push(new Float64Array(n));else throw new TypeError("nColumns must be a positive integer");this.rows=l,this.columns=n};let xe=Gr;k(ee,xe);const Xr=class Xr extends ee{constructor(l){super();Sp(this,sr);if(xe.isMatrix(l)){if(!l.isSymmetric())throw new TypeError("not symmetric data");Hh(this,sr,xe.copy(l,new xe(l.rows,l.rows)))}else if(Number.isInteger(l)&&l>=0)Hh(this,sr,new xe(l,l));else if(Hh(this,sr,new xe(l)),!this.isSymmetric())throw new TypeError("not symmetric data")}get size(){return Tn(this,sr).size}get rows(){return Tn(this,sr).rows}get columns(){return Tn(this,sr).columns}get diagonalSize(){return this.rows}static isSymmetricMatrix(l){return xe.isMatrix(l)&&l.klassType==="SymmetricMatrix"}static zeros(l){return new this(l)}static ones(l){return new this(l).fill(1)}clone(){const l=new Xr(this.diagonalSize);for(const[n,u,_]of this.upperRightEntries())l.set(n,u,_);return l}toMatrix(){return new xe(this)}get(l,n){return Tn(this,sr).get(l,n)}set(l,n,u){return Tn(this,sr).set(l,n,u),Tn(this,sr).set(n,l,u),this}removeCross(l){return Tn(this,sr).removeRow(l),Tn(this,sr).removeColumn(l),this}addCross(l,n){n===void 0&&(n=l,l=this.diagonalSize);const u=n.slice();return u.splice(l,1),Tn(this,sr).addRow(l,u),Tn(this,sr).addColumn(l,n),this}applyMask(l){if(l.length!==this.diagonalSize)throw new RangeError("Mask size do not match with matrix size");const n=[];for(const[u,_]of l.entries())_||n.push(u);n.reverse();for(const u of n)this.removeCross(u);return this}toCompact(){const{diagonalSize:l}=this,n=new Array(l*(l+1)/2);for(let u=0,_=0,O=0;O<n.length;O++)n[O]=this.get(_,u),++u>=l&&(u=++_);return n}static fromCompact(l){const n=l.length,u=(Math.sqrt(8*n+1)-1)/2;if(!Number.isInteger(u))throw new TypeError(`This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(l)}`);const _=new Xr(u);for(let O=0,N=0,X=0;X<n;X++)_.set(O,N,l[X]),++O>=u&&(O=++N);return _}*upperRightEntries(){for(let l=0,n=0;l<this.diagonalSize;void 0){const u=this.get(l,n);yield[l,n,u],++n>=this.diagonalSize&&(n=++l)}}*upperRightValues(){for(let l=0,n=0;l<this.diagonalSize;void 0)yield this.get(l,n),++n>=this.diagonalSize&&(n=++l)}};sr=new WeakMap;let dt=Xr;dt.prototype.klassType="SymmetricMatrix";class de extends dt{static isDistanceMatrix(c){return dt.isSymmetricMatrix(c)&&c.klassSubType==="DistanceMatrix"}constructor(c){if(super(c),!this.isDistance())throw new TypeError("Provided arguments do no produce a distance matrix")}set(c,l,n){return c===l&&(n=0),super.set(c,l,n)}addCross(c,l){return l===void 0&&(l=c,c=this.diagonalSize),l=l.slice(),l[c]=0,super.addCross(c,l)}toSymmetricMatrix(){return new dt(this)}clone(){const c=new de(this.diagonalSize);for(const[l,n,u]of this.upperRightEntries())l!==n&&c.set(l,n,u);return c}toCompact(){const{diagonalSize:c}=this,l=(c-1)*c/2,n=new Array(l);for(let u=1,_=0,O=0;O<n.length;O++)n[O]=this.get(_,u),++u>=c&&(u=++_+1);return n}static fromCompact(c){const l=c.length;if(l===0)return new this(0);const n=(Math.sqrt(8*l+1)+1)/2;if(!Number.isInteger(n))throw new TypeError(`This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(c)}`);const u=new this(n);for(let _=1,O=0,N=0;N<l;N++)u.set(_,O,c[N]),++_>=n&&(_=++O+1);return u}}de.prototype.klassSubType="DistanceMatrix";class rt extends ee{constructor(c,l,n){super(),this.matrix=c,this.rows=l,this.columns=n}}class ot extends rt{constructor(c,l){E(c,l),super(c,c.rows,1),this.column=l}set(c,l,n){return this.matrix.set(c,this.column,n),this}get(c){return this.matrix.get(c,this.column)}}class we extends rt{constructor(c,l){ce(c,l),super(c,c.rows,l.length),this.columnIndices=l}set(c,l,n){return this.matrix.set(c,this.columnIndices[l],n),this}get(c,l){return this.matrix.get(c,this.columnIndices[l])}}class Oe extends rt{constructor(c){super(c,c.rows,c.columns)}set(c,l,n){return this.matrix.set(c,this.columns-l-1,n),this}get(c,l){return this.matrix.get(c,this.columns-l-1)}}class it extends rt{constructor(c){super(c,c.rows,c.columns)}set(c,l,n){return this.matrix.set(this.rows-c-1,l,n),this}get(c,l){return this.matrix.get(this.rows-c-1,l)}}class at extends rt{constructor(c,l){x(c,l),super(c,1,c.columns),this.row=l}set(c,l,n){return this.matrix.set(this.row,l,n),this}get(c,l){return this.matrix.get(this.row,l)}}class nt extends rt{constructor(c,l){re(c,l),super(c,l.length,c.columns),this.rowIndices=l}set(c,l,n){return this.matrix.set(this.rowIndices[c],l,n),this}get(c,l){return this.matrix.get(this.rowIndices[c],l)}}class st extends rt{constructor(c,l,n){re(c,l),ce(c,n),super(c,l.length,n.length),this.rowIndices=l,this.columnIndices=n}set(c,l,n){return this.matrix.set(this.rowIndices[c],this.columnIndices[l],n),this}get(c,l){return this.matrix.get(this.rowIndices[c],this.columnIndices[l])}}class yt extends rt{constructor(c,l,n,u,_){me(c,l,n,u,_),super(c,n-l+1,_-u+1),this.startRow=l,this.startColumn=u}set(c,l,n){return this.matrix.set(this.startRow+c,this.startColumn+l,n),this}get(c,l){return this.matrix.get(this.startRow+c,this.startColumn+l)}}class $t extends rt{constructor(c){super(c,c.columns,c.rows)}set(c,l,n){return this.matrix.set(l,c,n),this}get(c,l){return this.matrix.get(l,c)}}class At extends ee{constructor(c,l={}){const{rows:n=1}=l;if(c.length%n!==0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=n,this.columns=c.length/n,this.data=c}set(c,l,n){let u=this._calculateIndex(c,l);return this.data[u]=n,this}get(c,l){let n=this._calculateIndex(c,l);return this.data[n]}_calculateIndex(c,l){return c*this.columns+l}}class vt extends ee{constructor(c){super(),this.data=c,this.rows=c.length,this.columns=c[0].length}set(c,l,n){return this.data[c][l]=n,this}get(c,l){return this.data[c][l]}}function Dt(B,c){if(Le.isAnyArray(B))return B[0]&&Le.isAnyArray(B[0])?new vt(B):new At(B,c);throw new Error("the argument is not an array")}class G{constructor(c){c=vt.checkMatrix(c);let l=c.clone(),n=l.rows,u=l.columns,_=new Float64Array(n),O=1,N,X,ie,je,be,Ze,Ct,qe,mt;for(N=0;N<n;N++)_[N]=N;for(qe=new Float64Array(n),X=0;X<u;X++){for(N=0;N<n;N++)qe[N]=l.get(N,X);for(N=0;N<n;N++){for(mt=Math.min(N,X),be=0,ie=0;ie<mt;ie++)be+=l.get(N,ie)*qe[ie];qe[N]-=be,l.set(N,X,qe[N])}for(je=X,N=X+1;N<n;N++)Math.abs(qe[N])>Math.abs(qe[je])&&(je=N);if(je!==X){for(ie=0;ie<u;ie++)Ze=l.get(je,ie),l.set(je,ie,l.get(X,ie)),l.set(X,ie,Ze);Ct=_[je],_[je]=_[X],_[X]=Ct,O=-O}if(X<n&&l.get(X,X)!==0)for(N=X+1;N<n;N++)l.set(N,X,l.get(N,X)/l.get(X,X))}this.LU=l,this.pivotVector=_,this.pivotSign=O}isSingular(){let c=this.LU,l=c.columns;for(let n=0;n<l;n++)if(c.get(n,n)===0)return!0;return!1}solve(c){c=xe.checkMatrix(c);let l=this.LU;if(l.rows!==c.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let u=c.columns,_=c.subMatrixRow(this.pivotVector,0,u-1),O=l.columns,N,X,ie;for(ie=0;ie<O;ie++)for(N=ie+1;N<O;N++)for(X=0;X<u;X++)_.set(N,X,_.get(N,X)-_.get(ie,X)*l.get(N,ie));for(ie=O-1;ie>=0;ie--){for(X=0;X<u;X++)_.set(ie,X,_.get(ie,X)/l.get(ie,ie));for(N=0;N<ie;N++)for(X=0;X<u;X++)_.set(N,X,_.get(N,X)-_.get(ie,X)*l.get(N,ie))}return _}get determinant(){let c=this.LU;if(!c.isSquare())throw new Error("Matrix must be square");let l=this.pivotSign,n=c.columns;for(let u=0;u<n;u++)l*=c.get(u,u);return l}get lowerTriangularMatrix(){let c=this.LU,l=c.rows,n=c.columns,u=new xe(l,n);for(let _=0;_<l;_++)for(let O=0;O<n;O++)_>O?u.set(_,O,c.get(_,O)):_===O?u.set(_,O,1):u.set(_,O,0);return u}get upperTriangularMatrix(){let c=this.LU,l=c.rows,n=c.columns,u=new xe(l,n);for(let _=0;_<l;_++)for(let O=0;O<n;O++)_<=O?u.set(_,O,c.get(_,O)):u.set(_,O,0);return u}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function pe(B,c){let l=0;return Math.abs(B)>Math.abs(c)?(l=c/B,Math.abs(B)*Math.sqrt(1+l*l)):c!==0?(l=B/c,Math.abs(c)*Math.sqrt(1+l*l)):0}class te{constructor(c){c=vt.checkMatrix(c);let l=c.clone(),n=c.rows,u=c.columns,_=new Float64Array(u),O,N,X,ie;for(X=0;X<u;X++){let je=0;for(O=X;O<n;O++)je=pe(je,l.get(O,X));if(je!==0){for(l.get(X,X)<0&&(je=-je),O=X;O<n;O++)l.set(O,X,l.get(O,X)/je);for(l.set(X,X,l.get(X,X)+1),N=X+1;N<u;N++){for(ie=0,O=X;O<n;O++)ie+=l.get(O,X)*l.get(O,N);for(ie=-ie/l.get(X,X),O=X;O<n;O++)l.set(O,N,l.get(O,N)+ie*l.get(O,X))}}_[X]=-je}this.QR=l,this.Rdiag=_}solve(c){c=xe.checkMatrix(c);let l=this.QR,n=l.rows;if(c.rows!==n)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let u=c.columns,_=c.clone(),O=l.columns,N,X,ie,je;for(ie=0;ie<O;ie++)for(X=0;X<u;X++){for(je=0,N=ie;N<n;N++)je+=l.get(N,ie)*_.get(N,X);for(je=-je/l.get(ie,ie),N=ie;N<n;N++)_.set(N,X,_.get(N,X)+je*l.get(N,ie))}for(ie=O-1;ie>=0;ie--){for(X=0;X<u;X++)_.set(ie,X,_.get(ie,X)/this.Rdiag[ie]);for(N=0;N<ie;N++)for(X=0;X<u;X++)_.set(N,X,_.get(N,X)-_.get(ie,X)*l.get(N,ie))}return _.subMatrix(0,O-1,0,u-1)}isFullRank(){let c=this.QR.columns;for(let l=0;l<c;l++)if(this.Rdiag[l]===0)return!1;return!0}get upperTriangularMatrix(){let c=this.QR,l=c.columns,n=new xe(l,l),u,_;for(u=0;u<l;u++)for(_=0;_<l;_++)u<_?n.set(u,_,c.get(u,_)):u===_?n.set(u,_,this.Rdiag[u]):n.set(u,_,0);return n}get orthogonalMatrix(){let c=this.QR,l=c.rows,n=c.columns,u=new xe(l,n),_,O,N,X;for(N=n-1;N>=0;N--){for(_=0;_<l;_++)u.set(_,N,0);for(u.set(N,N,1),O=N;O<n;O++)if(c.get(N,N)!==0){for(X=0,_=N;_<l;_++)X+=c.get(_,N)*u.get(_,O);for(X=-X/c.get(N,N),_=N;_<l;_++)u.set(_,O,u.get(_,O)+X*c.get(_,N))}}return u}}class Te{constructor(c,l={}){if(c=vt.checkMatrix(c),c.isEmpty())throw new Error("Matrix must be non-empty");let n=c.rows,u=c.columns;const{computeLeftSingularVectors:_=!0,computeRightSingularVectors:O=!0,autoTranspose:N=!1}=l;let X=!!_,ie=!!O,je=!1,be;if(n<u)if(!N)be=c.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else{be=c.transpose(),n=be.rows,u=be.columns,je=!0;let Re=X;X=ie,ie=Re}else be=c.clone();let Ze=Math.min(n,u),Ct=Math.min(n+1,u),qe=new Float64Array(Ct),mt=new xe(n,Ze),bt=new xe(u,u),Ce=new Float64Array(u),St=new Float64Array(n),Kt=new Float64Array(Ct);for(let Re=0;Re<Ct;Re++)Kt[Re]=Re;let ps=Math.min(n-1,u),gs=Math.max(0,Math.min(u-2,n)),Zs=Math.max(ps,gs);for(let Re=0;Re<Zs;Re++){if(Re<ps){qe[Re]=0;for(let Mt=Re;Mt<n;Mt++)qe[Re]=pe(qe[Re],be.get(Mt,Re));if(qe[Re]!==0){be.get(Re,Re)<0&&(qe[Re]=-qe[Re]);for(let Mt=Re;Mt<n;Mt++)be.set(Mt,Re,be.get(Mt,Re)/qe[Re]);be.set(Re,Re,be.get(Re,Re)+1)}qe[Re]=-qe[Re]}for(let Mt=Re+1;Mt<u;Mt++){if(Re<ps&&qe[Re]!==0){let zt=0;for(let kt=Re;kt<n;kt++)zt+=be.get(kt,Re)*be.get(kt,Mt);zt=-zt/be.get(Re,Re);for(let kt=Re;kt<n;kt++)be.set(kt,Mt,be.get(kt,Mt)+zt*be.get(kt,Re))}Ce[Mt]=be.get(Re,Mt)}if(X&&Re<ps)for(let Mt=Re;Mt<n;Mt++)mt.set(Mt,Re,be.get(Mt,Re));if(Re<gs){Ce[Re]=0;for(let Mt=Re+1;Mt<u;Mt++)Ce[Re]=pe(Ce[Re],Ce[Mt]);if(Ce[Re]!==0){Ce[Re+1]<0&&(Ce[Re]=0-Ce[Re]);for(let Mt=Re+1;Mt<u;Mt++)Ce[Mt]/=Ce[Re];Ce[Re+1]+=1}if(Ce[Re]=-Ce[Re],Re+1<n&&Ce[Re]!==0){for(let Mt=Re+1;Mt<n;Mt++)St[Mt]=0;for(let Mt=Re+1;Mt<n;Mt++)for(let zt=Re+1;zt<u;zt++)St[Mt]+=Ce[zt]*be.get(Mt,zt);for(let Mt=Re+1;Mt<u;Mt++){let zt=-Ce[Mt]/Ce[Re+1];for(let kt=Re+1;kt<n;kt++)be.set(kt,Mt,be.get(kt,Mt)+zt*St[kt])}}if(ie)for(let Mt=Re+1;Mt<u;Mt++)bt.set(Mt,Re,Ce[Mt])}}let es=Math.min(u,n+1);if(ps<u&&(qe[ps]=be.get(ps,ps)),n<es&&(qe[es-1]=0),gs+1<es&&(Ce[gs]=be.get(gs,es-1)),Ce[es-1]=0,X){for(let Re=ps;Re<Ze;Re++){for(let Mt=0;Mt<n;Mt++)mt.set(Mt,Re,0);mt.set(Re,Re,1)}for(let Re=ps-1;Re>=0;Re--)if(qe[Re]!==0){for(let Mt=Re+1;Mt<Ze;Mt++){let zt=0;for(let kt=Re;kt<n;kt++)zt+=mt.get(kt,Re)*mt.get(kt,Mt);zt=-zt/mt.get(Re,Re);for(let kt=Re;kt<n;kt++)mt.set(kt,Mt,mt.get(kt,Mt)+zt*mt.get(kt,Re))}for(let Mt=Re;Mt<n;Mt++)mt.set(Mt,Re,-mt.get(Mt,Re));mt.set(Re,Re,1+mt.get(Re,Re));for(let Mt=0;Mt<Re-1;Mt++)mt.set(Mt,Re,0)}else{for(let Mt=0;Mt<n;Mt++)mt.set(Mt,Re,0);mt.set(Re,Re,1)}}if(ie)for(let Re=u-1;Re>=0;Re--){if(Re<gs&&Ce[Re]!==0)for(let Mt=Re+1;Mt<u;Mt++){let zt=0;for(let kt=Re+1;kt<u;kt++)zt+=bt.get(kt,Re)*bt.get(kt,Mt);zt=-zt/bt.get(Re+1,Re);for(let kt=Re+1;kt<u;kt++)bt.set(kt,Mt,bt.get(kt,Mt)+zt*bt.get(kt,Re))}for(let Mt=0;Mt<u;Mt++)bt.set(Mt,Re,0);bt.set(Re,Re,1)}let is=es-1,qs=Number.EPSILON;for(;es>0;){let Re,Mt;for(Re=es-2;Re>=-1&&Re!==-1;Re--){const zt=Number.MIN_VALUE+qs*Math.abs(qe[Re]+Math.abs(qe[Re+1]));if(Math.abs(Ce[Re])<=zt||Number.isNaN(Ce[Re])){Ce[Re]=0;break}}if(Re===es-2)Mt=4;else{let zt;for(zt=es-1;zt>=Re&&zt!==Re;zt--){let kt=(zt!==es?Math.abs(Ce[zt]):0)+(zt!==Re+1?Math.abs(Ce[zt-1]):0);if(Math.abs(qe[zt])<=qs*kt){qe[zt]=0;break}}zt===Re?Mt=3:zt===es-1?Mt=1:(Mt=2,Re=zt)}switch(Re++,Mt){case 1:{let zt=Ce[es-2];Ce[es-2]=0;for(let kt=es-2;kt>=Re;kt--){let Hs=pe(qe[kt],zt),Os=qe[kt]/Hs,Qs=zt/Hs;if(qe[kt]=Hs,kt!==Re&&(zt=-Qs*Ce[kt-1],Ce[kt-1]=Os*Ce[kt-1]),ie)for(let Ys=0;Ys<u;Ys++)Hs=Os*bt.get(Ys,kt)+Qs*bt.get(Ys,es-1),bt.set(Ys,es-1,-Qs*bt.get(Ys,kt)+Os*bt.get(Ys,es-1)),bt.set(Ys,kt,Hs)}break}case 2:{let zt=Ce[Re-1];Ce[Re-1]=0;for(let kt=Re;kt<es;kt++){let Hs=pe(qe[kt],zt),Os=qe[kt]/Hs,Qs=zt/Hs;if(qe[kt]=Hs,zt=-Qs*Ce[kt],Ce[kt]=Os*Ce[kt],X)for(let Ys=0;Ys<n;Ys++)Hs=Os*mt.get(Ys,kt)+Qs*mt.get(Ys,Re-1),mt.set(Ys,Re-1,-Qs*mt.get(Ys,kt)+Os*mt.get(Ys,Re-1)),mt.set(Ys,kt,Hs)}break}case 3:{const zt=Math.max(Math.abs(qe[es-1]),Math.abs(qe[es-2]),Math.abs(Ce[es-2]),Math.abs(qe[Re]),Math.abs(Ce[Re])),kt=qe[es-1]/zt,Hs=qe[es-2]/zt,Os=Ce[es-2]/zt,Qs=qe[Re]/zt,Ys=Ce[Re]/zt,Gt=((Hs+kt)*(Hs-kt)+Os*Os)/2,Ar=kt*Os*(kt*Os);let or=0;(Gt!==0||Ar!==0)&&(Gt<0?or=0-Math.sqrt(Gt*Gt+Ar):or=Math.sqrt(Gt*Gt+Ar),or=Ar/(Gt+or));let Nr=(Qs+kt)*(Qs-kt)+or,Vr=Qs*Ys;for(let Ps=Re;Ps<es-1;Ps++){let mr=pe(Nr,Vr);mr===0&&(mr=Number.MIN_VALUE);let vr=Nr/mr,Er=Vr/mr;if(Ps!==Re&&(Ce[Ps-1]=mr),Nr=vr*qe[Ps]+Er*Ce[Ps],Ce[Ps]=vr*Ce[Ps]-Er*qe[Ps],Vr=Er*qe[Ps+1],qe[Ps+1]=vr*qe[Ps+1],ie)for(let cs=0;cs<u;cs++)mr=vr*bt.get(cs,Ps)+Er*bt.get(cs,Ps+1),bt.set(cs,Ps+1,-Er*bt.get(cs,Ps)+vr*bt.get(cs,Ps+1)),bt.set(cs,Ps,mr);if(mr=pe(Nr,Vr),mr===0&&(mr=Number.MIN_VALUE),vr=Nr/mr,Er=Vr/mr,qe[Ps]=mr,Nr=vr*Ce[Ps]+Er*qe[Ps+1],qe[Ps+1]=-Er*Ce[Ps]+vr*qe[Ps+1],Vr=Er*Ce[Ps+1],Ce[Ps+1]=vr*Ce[Ps+1],X&&Ps<n-1)for(let cs=0;cs<n;cs++)mr=vr*mt.get(cs,Ps)+Er*mt.get(cs,Ps+1),mt.set(cs,Ps+1,-Er*mt.get(cs,Ps)+vr*mt.get(cs,Ps+1)),mt.set(cs,Ps,mr)}Ce[es-2]=Nr;break}case 4:{if(qe[Re]<=0&&(qe[Re]=qe[Re]<0?-qe[Re]:0,ie))for(let zt=0;zt<=is;zt++)bt.set(zt,Re,-bt.get(zt,Re));for(;Re<is&&!(qe[Re]>=qe[Re+1]);){let zt=qe[Re];if(qe[Re]=qe[Re+1],qe[Re+1]=zt,ie&&Re<u-1)for(let kt=0;kt<u;kt++)zt=bt.get(kt,Re+1),bt.set(kt,Re+1,bt.get(kt,Re)),bt.set(kt,Re,zt);if(X&&Re<n-1)for(let kt=0;kt<n;kt++)zt=mt.get(kt,Re+1),mt.set(kt,Re+1,mt.get(kt,Re)),mt.set(kt,Re,zt);Re++}es--;break}}}if(je){let Re=bt;bt=mt,mt=Re}this.m=n,this.n=u,this.s=qe,this.U=mt,this.V=bt}solve(c){let l=c,n=this.threshold,u=this.s.length,_=xe.zeros(u,u);for(let Ze=0;Ze<u;Ze++)Math.abs(this.s[Ze])<=n?_.set(Ze,Ze,0):_.set(Ze,Ze,1/this.s[Ze]);let O=this.U,N=this.rightSingularVectors,X=N.mmul(_),ie=N.rows,je=O.rows,be=xe.zeros(ie,je);for(let Ze=0;Ze<ie;Ze++)for(let Ct=0;Ct<je;Ct++){let qe=0;for(let mt=0;mt<u;mt++)qe+=X.get(Ze,mt)*O.get(Ct,mt);be.set(Ze,Ct,qe)}return be.mmul(l)}solveForDiagonal(c){return this.solve(xe.diag(c))}inverse(){let c=this.V,l=this.threshold,n=c.rows,u=c.columns,_=new xe(n,this.s.length);for(let je=0;je<n;je++)for(let be=0;be<u;be++)Math.abs(this.s[be])>l&&_.set(je,be,c.get(je,be)/this.s[be]);let O=this.U,N=O.rows,X=O.columns,ie=new xe(n,N);for(let je=0;je<n;je++)for(let be=0;be<N;be++){let Ze=0;for(let Ct=0;Ct<X;Ct++)Ze+=_.get(je,Ct)*O.get(be,Ct);ie.set(je,be,Ze)}return ie}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let c=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,l=0,n=this.s;for(let u=0,_=n.length;u<_;u++)n[u]>c&&l++;return l}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return xe.diag(this.s)}}function We(B,c=!1){return B=vt.checkMatrix(B),c?new Te(B).inverse():tt(B,xe.eye(B.rows))}function tt(B,c,l=!1){return B=vt.checkMatrix(B),c=vt.checkMatrix(c),l?new Te(B).solve(c):B.isSquare()?new G(B).solve(c):new te(B).solve(c)}function ut(B){if(B=xe.checkMatrix(B),B.isSquare()){if(B.columns===0)return 1;let c,l,n,u;if(B.columns===2)return c=B.get(0,0),l=B.get(0,1),n=B.get(1,0),u=B.get(1,1),c*u-l*n;if(B.columns===3){let _,O,N;return _=new st(B,[1,2],[1,2]),O=new st(B,[1,2],[0,2]),N=new st(B,[1,2],[0,1]),c=B.get(0,0),l=B.get(0,1),n=B.get(0,2),c*ut(_)-l*ut(O)+n*ut(N)}else return new G(B).determinant}else throw Error("determinant can only be calculated for a square matrix")}function Et(B,c){let l=[];for(let n=0;n<B;n++)n!==c&&l.push(n);return l}function Ot(B,c,l,n=1e-9,u=1e-9){if(B>u)return new Array(c.rows+1).fill(0);{let _=c.addRow(l,[0]);for(let O=0;O<_.rows;O++)Math.abs(_.get(O,0))<n&&_.set(O,0,0);return _.to1DArray()}}function Vt(B,c={}){const{thresholdValue:l=1e-9,thresholdError:n=1e-9}=c;B=xe.checkMatrix(B);let u=B.rows,_=new xe(u,u);for(let O=0;O<u;O++){let N=xe.columnVector(B.getRow(O)),X=B.subMatrixRow(Et(u,O)).transpose(),je=new Te(X).solve(N),be=xe.sub(N,X.mmul(je)).abs().max();_.setRow(O,Ot(be,je,O,l,n))}return _}function Ht(B,c=Number.EPSILON){if(B=xe.checkMatrix(B),B.isEmpty())return B.transpose();let l=new Te(B,{autoTranspose:!0}),n=l.leftSingularVectors,u=l.rightSingularVectors,_=l.diagonal;for(let O=0;O<_.length;O++)Math.abs(_[O])>c?_[O]=1/_[O]:_[O]=0;return u.mmul(xe.diag(_).mmul(n.transpose()))}function Jt(B,c=B,l={}){B=new xe(B);let n=!1;if(typeof c=="object"&&!xe.isMatrix(c)&&!Le.isAnyArray(c)?(l=c,c=B,n=!0):c=new xe(c),B.rows!==c.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:u=!0}=l;u&&(B=B.center("column"),n||(c=c.center("column")));const _=B.transpose().mmul(c);for(let O=0;O<_.rows;O++)for(let N=0;N<_.columns;N++)_.set(O,N,_.get(O,N)*(1/(B.rows-1)));return _}function $s(B,c=B,l={}){B=new xe(B);let n=!1;if(typeof c=="object"&&!xe.isMatrix(c)&&!Le.isAnyArray(c)?(l=c,c=B,n=!0):c=new xe(c),B.rows!==c.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:u=!0,scale:_=!0}=l;u&&(B.center("column"),n||c.center("column")),_&&(B.scale("column"),n||c.scale("column"));const O=B.standardDeviation("column",{unbiased:!0}),N=n?O:c.standardDeviation("column",{unbiased:!0}),X=B.transpose().mmul(c);for(let ie=0;ie<X.rows;ie++)for(let je=0;je<X.columns;je++)X.set(ie,je,X.get(ie,je)*(1/(O[ie]*N[je]))*(1/(B.rows-1)));return X}class zs{constructor(c,l={}){const{assumeSymmetric:n=!1}=l;if(c=vt.checkMatrix(c),!c.isSquare())throw new Error("Matrix is not a square matrix");if(c.isEmpty())throw new Error("Matrix must be non-empty");let u=c.columns,_=new xe(u,u),O=new Float64Array(u),N=new Float64Array(u),X=c,ie,je,be=!1;if(n?be=!0:be=c.isSymmetric(),be){for(ie=0;ie<u;ie++)for(je=0;je<u;je++)_.set(ie,je,X.get(ie,je));tr(u,N,O,_),pr(u,N,O,_)}else{let Ze=new xe(u,u),Ct=new Float64Array(u);for(je=0;je<u;je++)for(ie=0;ie<u;ie++)Ze.set(ie,je,X.get(ie,je));zr(u,Ze,Ct,_),en(u,N,O,_,Ze)}this.n=u,this.e=N,this.d=O,this.V=_}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let c=this.n,l=this.e,n=this.d,u=new xe(c,c),_,O;for(_=0;_<c;_++){for(O=0;O<c;O++)u.set(_,O,0);u.set(_,_,n[_]),l[_]>0?u.set(_,_+1,l[_]):l[_]<0&&u.set(_,_-1,l[_])}return u}}function tr(B,c,l,n){let u,_,O,N,X,ie,je,be;for(X=0;X<B;X++)l[X]=n.get(B-1,X);for(N=B-1;N>0;N--){for(be=0,O=0,ie=0;ie<N;ie++)be=be+Math.abs(l[ie]);if(be===0)for(c[N]=l[N-1],X=0;X<N;X++)l[X]=n.get(N-1,X),n.set(N,X,0),n.set(X,N,0);else{for(ie=0;ie<N;ie++)l[ie]/=be,O+=l[ie]*l[ie];for(u=l[N-1],_=Math.sqrt(O),u>0&&(_=-_),c[N]=be*_,O=O-u*_,l[N-1]=u-_,X=0;X<N;X++)c[X]=0;for(X=0;X<N;X++){for(u=l[X],n.set(X,N,u),_=c[X]+n.get(X,X)*u,ie=X+1;ie<=N-1;ie++)_+=n.get(ie,X)*l[ie],c[ie]+=n.get(ie,X)*u;c[X]=_}for(u=0,X=0;X<N;X++)c[X]/=O,u+=c[X]*l[X];for(je=u/(O+O),X=0;X<N;X++)c[X]-=je*l[X];for(X=0;X<N;X++){for(u=l[X],_=c[X],ie=X;ie<=N-1;ie++)n.set(ie,X,n.get(ie,X)-(u*c[ie]+_*l[ie]));l[X]=n.get(N-1,X),n.set(N,X,0)}}l[N]=O}for(N=0;N<B-1;N++){if(n.set(B-1,N,n.get(N,N)),n.set(N,N,1),O=l[N+1],O!==0){for(ie=0;ie<=N;ie++)l[ie]=n.get(ie,N+1)/O;for(X=0;X<=N;X++){for(_=0,ie=0;ie<=N;ie++)_+=n.get(ie,N+1)*n.get(ie,X);for(ie=0;ie<=N;ie++)n.set(ie,X,n.get(ie,X)-_*l[ie])}}for(ie=0;ie<=N;ie++)n.set(ie,N+1,0)}for(X=0;X<B;X++)l[X]=n.get(B-1,X),n.set(B-1,X,0);n.set(B-1,B-1,1),c[0]=0}function pr(B,c,l,n){let u,_,O,N,X,ie,je,be,Ze,Ct,qe,mt,bt,Ce,St,Kt;for(O=1;O<B;O++)c[O-1]=c[O];c[B-1]=0;let ps=0,gs=0,Zs=Number.EPSILON;for(ie=0;ie<B;ie++){for(gs=Math.max(gs,Math.abs(l[ie])+Math.abs(c[ie])),je=ie;je<B&&!(Math.abs(c[je])<=Zs*gs);)je++;if(je>ie)do{for(u=l[ie],be=(l[ie+1]-u)/(2*c[ie]),Ze=pe(be,1),be<0&&(Ze=-Ze),l[ie]=c[ie]/(be+Ze),l[ie+1]=c[ie]*(be+Ze),Ct=l[ie+1],_=u-l[ie],O=ie+2;O<B;O++)l[O]-=_;for(ps=ps+_,be=l[je],qe=1,mt=qe,bt=qe,Ce=c[ie+1],St=0,Kt=0,O=je-1;O>=ie;O--)for(bt=mt,mt=qe,Kt=St,u=qe*c[O],_=qe*be,Ze=pe(be,c[O]),c[O+1]=St*Ze,St=c[O]/Ze,qe=be/Ze,be=qe*l[O]-St*u,l[O+1]=_+St*(qe*u+St*l[O]),X=0;X<B;X++)_=n.get(X,O+1),n.set(X,O+1,St*n.get(X,O)+qe*_),n.set(X,O,qe*n.get(X,O)-St*_);be=-St*Kt*bt*Ce*c[ie]/Ct,c[ie]=St*be,l[ie]=qe*be}while(Math.abs(c[ie])>Zs*gs);l[ie]=l[ie]+ps,c[ie]=0}for(O=0;O<B-1;O++){for(X=O,be=l[O],N=O+1;N<B;N++)l[N]<be&&(X=N,be=l[N]);if(X!==O)for(l[X]=l[O],l[O]=be,N=0;N<B;N++)be=n.get(N,O),n.set(N,O,n.get(N,X)),n.set(N,X,be)}}function zr(B,c,l,n){let u=0,_=B-1,O,N,X,ie,je,be,Ze;for(be=u+1;be<=_-1;be++){for(Ze=0,ie=be;ie<=_;ie++)Ze=Ze+Math.abs(c.get(ie,be-1));if(Ze!==0){for(X=0,ie=_;ie>=be;ie--)l[ie]=c.get(ie,be-1)/Ze,X+=l[ie]*l[ie];for(N=Math.sqrt(X),l[be]>0&&(N=-N),X=X-l[be]*N,l[be]=l[be]-N,je=be;je<B;je++){for(O=0,ie=_;ie>=be;ie--)O+=l[ie]*c.get(ie,je);for(O=O/X,ie=be;ie<=_;ie++)c.set(ie,je,c.get(ie,je)-O*l[ie])}for(ie=0;ie<=_;ie++){for(O=0,je=_;je>=be;je--)O+=l[je]*c.get(ie,je);for(O=O/X,je=be;je<=_;je++)c.set(ie,je,c.get(ie,je)-O*l[je])}l[be]=Ze*l[be],c.set(be,be-1,Ze*N)}}for(ie=0;ie<B;ie++)for(je=0;je<B;je++)n.set(ie,je,ie===je?1:0);for(be=_-1;be>=u+1;be--)if(c.get(be,be-1)!==0){for(ie=be+1;ie<=_;ie++)l[ie]=c.get(ie,be-1);for(je=be;je<=_;je++){for(N=0,ie=be;ie<=_;ie++)N+=l[ie]*n.get(ie,je);for(N=N/l[be]/c.get(be,be-1),ie=be;ie<=_;ie++)n.set(ie,je,n.get(ie,je)+N*l[ie])}}}function en(B,c,l,n,u){let _=B-1,O=0,N=B-1,X=Number.EPSILON,ie=0,je=0,be=0,Ze=0,Ct=0,qe=0,mt=0,bt=0,Ce,St,Kt,ps,gs,Zs,es,is,qs,Re,Mt,zt,kt,Hs,Os;for(Ce=0;Ce<B;Ce++)for((Ce<O||Ce>N)&&(l[Ce]=u.get(Ce,Ce),c[Ce]=0),St=Math.max(Ce-1,0);St<B;St++)je=je+Math.abs(u.get(Ce,St));for(;_>=O;){for(ps=_;ps>O&&(qe=Math.abs(u.get(ps-1,ps-1))+Math.abs(u.get(ps,ps)),qe===0&&(qe=je),!(Math.abs(u.get(ps,ps-1))<X*qe));)ps--;if(ps===_)u.set(_,_,u.get(_,_)+ie),l[_]=u.get(_,_),c[_]=0,_--,bt=0;else if(ps===_-1){if(es=u.get(_,_-1)*u.get(_-1,_),be=(u.get(_-1,_-1)-u.get(_,_))/2,Ze=be*be+es,mt=Math.sqrt(Math.abs(Ze)),u.set(_,_,u.get(_,_)+ie),u.set(_-1,_-1,u.get(_-1,_-1)+ie),is=u.get(_,_),Ze>=0){for(mt=be>=0?be+mt:be-mt,l[_-1]=is+mt,l[_]=l[_-1],mt!==0&&(l[_]=is-es/mt),c[_-1]=0,c[_]=0,is=u.get(_,_-1),qe=Math.abs(is)+Math.abs(mt),be=is/qe,Ze=mt/qe,Ct=Math.sqrt(be*be+Ze*Ze),be=be/Ct,Ze=Ze/Ct,St=_-1;St<B;St++)mt=u.get(_-1,St),u.set(_-1,St,Ze*mt+be*u.get(_,St)),u.set(_,St,Ze*u.get(_,St)-be*mt);for(Ce=0;Ce<=_;Ce++)mt=u.get(Ce,_-1),u.set(Ce,_-1,Ze*mt+be*u.get(Ce,_)),u.set(Ce,_,Ze*u.get(Ce,_)-be*mt);for(Ce=O;Ce<=N;Ce++)mt=n.get(Ce,_-1),n.set(Ce,_-1,Ze*mt+be*n.get(Ce,_)),n.set(Ce,_,Ze*n.get(Ce,_)-be*mt)}else l[_-1]=is+be,l[_]=is+be,c[_-1]=mt,c[_]=-mt;_=_-2,bt=0}else{if(is=u.get(_,_),qs=0,es=0,ps<_&&(qs=u.get(_-1,_-1),es=u.get(_,_-1)*u.get(_-1,_)),bt===10){for(ie+=is,Ce=O;Ce<=_;Ce++)u.set(Ce,Ce,u.get(Ce,Ce)-is);qe=Math.abs(u.get(_,_-1))+Math.abs(u.get(_-1,_-2)),is=qs=.75*qe,es=-.4375*qe*qe}if(bt===30&&(qe=(qs-is)/2,qe=qe*qe+es,qe>0)){for(qe=Math.sqrt(qe),qs<is&&(qe=-qe),qe=is-es/((qs-is)/2+qe),Ce=O;Ce<=_;Ce++)u.set(Ce,Ce,u.get(Ce,Ce)-qe);ie+=qe,is=qs=es=.964}for(bt=bt+1,gs=_-2;gs>=ps&&(mt=u.get(gs,gs),Ct=is-mt,qe=qs-mt,be=(Ct*qe-es)/u.get(gs+1,gs)+u.get(gs,gs+1),Ze=u.get(gs+1,gs+1)-mt-Ct-qe,Ct=u.get(gs+2,gs+1),qe=Math.abs(be)+Math.abs(Ze)+Math.abs(Ct),be=be/qe,Ze=Ze/qe,Ct=Ct/qe,!(gs===ps||Math.abs(u.get(gs,gs-1))*(Math.abs(Ze)+Math.abs(Ct))<X*(Math.abs(be)*(Math.abs(u.get(gs-1,gs-1))+Math.abs(mt)+Math.abs(u.get(gs+1,gs+1))))));)gs--;for(Ce=gs+2;Ce<=_;Ce++)u.set(Ce,Ce-2,0),Ce>gs+2&&u.set(Ce,Ce-3,0);for(Kt=gs;Kt<=_-1&&(Hs=Kt!==_-1,Kt!==gs&&(be=u.get(Kt,Kt-1),Ze=u.get(Kt+1,Kt-1),Ct=Hs?u.get(Kt+2,Kt-1):0,is=Math.abs(be)+Math.abs(Ze)+Math.abs(Ct),is!==0&&(be=be/is,Ze=Ze/is,Ct=Ct/is)),is!==0);Kt++)if(qe=Math.sqrt(be*be+Ze*Ze+Ct*Ct),be<0&&(qe=-qe),qe!==0){for(Kt!==gs?u.set(Kt,Kt-1,-qe*is):ps!==gs&&u.set(Kt,Kt-1,-u.get(Kt,Kt-1)),be=be+qe,is=be/qe,qs=Ze/qe,mt=Ct/qe,Ze=Ze/be,Ct=Ct/be,St=Kt;St<B;St++)be=u.get(Kt,St)+Ze*u.get(Kt+1,St),Hs&&(be=be+Ct*u.get(Kt+2,St),u.set(Kt+2,St,u.get(Kt+2,St)-be*mt)),u.set(Kt,St,u.get(Kt,St)-be*is),u.set(Kt+1,St,u.get(Kt+1,St)-be*qs);for(Ce=0;Ce<=Math.min(_,Kt+3);Ce++)be=is*u.get(Ce,Kt)+qs*u.get(Ce,Kt+1),Hs&&(be=be+mt*u.get(Ce,Kt+2),u.set(Ce,Kt+2,u.get(Ce,Kt+2)-be*Ct)),u.set(Ce,Kt,u.get(Ce,Kt)-be),u.set(Ce,Kt+1,u.get(Ce,Kt+1)-be*Ze);for(Ce=O;Ce<=N;Ce++)be=is*n.get(Ce,Kt)+qs*n.get(Ce,Kt+1),Hs&&(be=be+mt*n.get(Ce,Kt+2),n.set(Ce,Kt+2,n.get(Ce,Kt+2)-be*Ct)),n.set(Ce,Kt,n.get(Ce,Kt)-be),n.set(Ce,Kt+1,n.get(Ce,Kt+1)-be*Ze)}}}if(je!==0){for(_=B-1;_>=0;_--)if(be=l[_],Ze=c[_],Ze===0)for(ps=_,u.set(_,_,1),Ce=_-1;Ce>=0;Ce--){for(es=u.get(Ce,Ce)-be,Ct=0,St=ps;St<=_;St++)Ct=Ct+u.get(Ce,St)*u.get(St,_);if(c[Ce]<0)mt=es,qe=Ct;else if(ps=Ce,c[Ce]===0?u.set(Ce,_,es!==0?-Ct/es:-Ct/(X*je)):(is=u.get(Ce,Ce+1),qs=u.get(Ce+1,Ce),Ze=(l[Ce]-be)*(l[Ce]-be)+c[Ce]*c[Ce],Zs=(is*qe-mt*Ct)/Ze,u.set(Ce,_,Zs),u.set(Ce+1,_,Math.abs(is)>Math.abs(mt)?(-Ct-es*Zs)/is:(-qe-qs*Zs)/mt)),Zs=Math.abs(u.get(Ce,_)),X*Zs*Zs>1)for(St=Ce;St<=_;St++)u.set(St,_,u.get(St,_)/Zs)}else if(Ze<0)for(ps=_-1,Math.abs(u.get(_,_-1))>Math.abs(u.get(_-1,_))?(u.set(_-1,_-1,Ze/u.get(_,_-1)),u.set(_-1,_,-(u.get(_,_)-be)/u.get(_,_-1))):(Os=Qr(0,-u.get(_-1,_),u.get(_-1,_-1)-be,Ze),u.set(_-1,_-1,Os[0]),u.set(_-1,_,Os[1])),u.set(_,_-1,0),u.set(_,_,1),Ce=_-2;Ce>=0;Ce--){for(Re=0,Mt=0,St=ps;St<=_;St++)Re=Re+u.get(Ce,St)*u.get(St,_-1),Mt=Mt+u.get(Ce,St)*u.get(St,_);if(es=u.get(Ce,Ce)-be,c[Ce]<0)mt=es,Ct=Re,qe=Mt;else if(ps=Ce,c[Ce]===0?(Os=Qr(-Re,-Mt,es,Ze),u.set(Ce,_-1,Os[0]),u.set(Ce,_,Os[1])):(is=u.get(Ce,Ce+1),qs=u.get(Ce+1,Ce),zt=(l[Ce]-be)*(l[Ce]-be)+c[Ce]*c[Ce]-Ze*Ze,kt=(l[Ce]-be)*2*Ze,zt===0&&kt===0&&(zt=X*je*(Math.abs(es)+Math.abs(Ze)+Math.abs(is)+Math.abs(qs)+Math.abs(mt))),Os=Qr(is*Ct-mt*Re+Ze*Mt,is*qe-mt*Mt-Ze*Re,zt,kt),u.set(Ce,_-1,Os[0]),u.set(Ce,_,Os[1]),Math.abs(is)>Math.abs(mt)+Math.abs(Ze)?(u.set(Ce+1,_-1,(-Re-es*u.get(Ce,_-1)+Ze*u.get(Ce,_))/is),u.set(Ce+1,_,(-Mt-es*u.get(Ce,_)-Ze*u.get(Ce,_-1))/is)):(Os=Qr(-Ct-qs*u.get(Ce,_-1),-qe-qs*u.get(Ce,_),mt,Ze),u.set(Ce+1,_-1,Os[0]),u.set(Ce+1,_,Os[1]))),Zs=Math.max(Math.abs(u.get(Ce,_-1)),Math.abs(u.get(Ce,_))),X*Zs*Zs>1)for(St=Ce;St<=_;St++)u.set(St,_-1,u.get(St,_-1)/Zs),u.set(St,_,u.get(St,_)/Zs)}for(Ce=0;Ce<B;Ce++)if(Ce<O||Ce>N)for(St=Ce;St<B;St++)n.set(Ce,St,u.get(Ce,St));for(St=B-1;St>=O;St--)for(Ce=O;Ce<=N;Ce++){for(mt=0,Kt=O;Kt<=Math.min(St,N);Kt++)mt=mt+n.get(Ce,Kt)*u.get(Kt,St);n.set(Ce,St,mt)}}}function Qr(B,c,l,n){let u,_;return Math.abs(l)>Math.abs(n)?(u=n/l,_=l+u*n,[(B+u*c)/_,(c-u*B)/_]):(u=l/n,_=n+u*l,[(u*B+c)/_,(u*c-B)/_])}class _r{constructor(c){if(c=vt.checkMatrix(c),!c.isSymmetric())throw new Error("Matrix is not symmetric");let l=c,n=l.rows,u=new xe(n,n),_=!0,O,N,X;for(N=0;N<n;N++){let ie=0;for(X=0;X<N;X++){let je=0;for(O=0;O<X;O++)je+=u.get(X,O)*u.get(N,O);je=(l.get(N,X)-je)/u.get(X,X),u.set(N,X,je),ie=ie+je*je}for(ie=l.get(N,N)-ie,_&&(_=ie>0),u.set(N,N,Math.sqrt(Math.max(ie,0))),X=N+1;X<n;X++)u.set(N,X,0)}this.L=u,this.positiveDefinite=_}isPositiveDefinite(){return this.positiveDefinite}solve(c){c=vt.checkMatrix(c);let l=this.L,n=l.rows;if(c.rows!==n)throw new Error("Matrix dimensions do not match");if(this.isPositiveDefinite()===!1)throw new Error("Matrix is not positive definite");let u=c.columns,_=c.clone(),O,N,X;for(X=0;X<n;X++)for(N=0;N<u;N++){for(O=0;O<X;O++)_.set(X,N,_.get(X,N)-_.get(O,N)*l.get(X,O));_.set(X,N,_.get(X,N)/l.get(X,X))}for(X=n-1;X>=0;X--)for(N=0;N<u;N++){for(O=X+1;O<n;O++)_.set(X,N,_.get(X,N)-_.get(O,N)*l.get(O,X));_.set(X,N,_.get(X,N)/l.get(X,X))}return _}get lowerTriangularMatrix(){return this.L}}class qr{constructor(c,l={}){c=vt.checkMatrix(c);let{Y:n}=l;const{scaleScores:u=!1,maxIterations:_=1e3,terminationCriteria:O=1e-10}=l;let N;if(n){if(Le.isAnyArray(n)&&typeof n[0]=="number"?n=xe.columnVector(n):n=vt.checkMatrix(n),n.rows!==c.rows)throw new Error("Y should have the same number of rows as X");N=n.getColumnVector(0)}else N=c.getColumnVector(0);let X=1,ie,je,be,Ze;for(let Ct=0;Ct<_&&X>O;Ct++)be=c.transpose().mmul(N).div(N.transpose().mmul(N).get(0,0)),be=be.div(be.norm()),ie=c.mmul(be).div(be.transpose().mmul(be).get(0,0)),Ct>0&&(X=ie.clone().sub(Ze).pow(2).sum()),Ze=ie.clone(),n?(je=n.transpose().mmul(ie).div(ie.transpose().mmul(ie).get(0,0)),je=je.div(je.norm()),N=n.mmul(je).div(je.transpose().mmul(je).get(0,0))):N=ie;if(n){let Ct=c.transpose().mmul(ie).div(ie.transpose().mmul(ie).get(0,0));Ct=Ct.div(Ct.norm());let qe=c.clone().sub(ie.clone().mmul(Ct.transpose())),mt=N.transpose().mmul(ie).div(ie.transpose().mmul(ie).get(0,0)),bt=n.clone().sub(ie.clone().mulS(mt.get(0,0)).mmul(je.transpose()));this.t=ie,this.p=Ct.transpose(),this.w=be.transpose(),this.q=je,this.u=N,this.s=ie.transpose().mmul(ie),this.xResidual=qe,this.yResidual=bt,this.betas=mt}else this.w=be.transpose(),this.s=ie.transpose().mmul(ie).sqrt(),u?this.t=ie.clone().div(this.s.get(0,0)):this.t=ie,this.xResidual=c.sub(ie.mmul(be.transpose()))}}return As.AbstractMatrix=ee,As.CHO=_r,As.CholeskyDecomposition=_r,As.DistanceMatrix=de,As.EVD=zs,As.EigenvalueDecomposition=zs,As.LU=G,As.LuDecomposition=G,As.Matrix=xe,As.MatrixColumnSelectionView=we,As.MatrixColumnView=ot,As.MatrixFlipColumnView=Oe,As.MatrixFlipRowView=it,As.MatrixRowSelectionView=nt,As.MatrixRowView=at,As.MatrixSelectionView=st,As.MatrixSubView=yt,As.MatrixTransposeView=$t,As.NIPALS=qr,As.Nipals=qr,As.QR=te,As.QrDecomposition=te,As.SVD=Te,As.SingularValueDecomposition=Te,As.SymmetricMatrix=dt,As.WrapperMatrix1D=At,As.WrapperMatrix2D=vt,As.correlation=$s,As.covariance=Jt,As.default=xe,As.determinant=ut,As.inverse=We,As.linearDependencies=Vt,As.pseudoInverse=Ht,As.solve=tt,As.wrap=Dt,As}var uo=If(),Dp=vf(uo);const Af=uo.EVD,co=uo.Matrix,Of=uo.MatrixTransposeView,Ff=uo.NIPALS,Df=uo.SVD;Dp.Matrix?Dp.Matrix:uo.Matrix;class Xh{constructor(P,r={},y){if(this.U=null,this.S=null,y){this.center=y.center,this.scale=y.scale,this.means=y.means,this.stdevs=y.stdevs,this.U=co.checkMatrix(y.U),this.S=y.S,this.R=y.R,this.excludedFeatures=y.excludedFeatures||[];return}let z;Array.isArray(P)?z=new co(P):z=new co(P);const{isCovarianceMatrix:V=!1,method:se="SVD",nCompNIPALS:K=2,center:v=!0,scale:k=!1,ignoreZeroVariance:x=!1}=r;if(this.center=v,this.scale=k,this.means=null,this.stdevs=null,this.excludedFeatures=[],V){this._computeFromCovarianceMatrix(z);return}switch(this._adjust(z,x),se){case"covarianceMatrix":{const E=new Of(z).mmul(z).div(z.rows-1);this._computeFromCovarianceMatrix(E);break}case"NIPALS":{this._computeWithNIPALS(z,K);break}case"SVD":{const E=new Df(z,{computeLeftSingularVectors:!1,computeRightSingularVectors:!0,autoTranspose:!0});this.U=E.rightSingularVectors;const C=E.diagonal,j=[];for(const re of C)j.push(re*re/(z.rows-1));this.S=j;break}default:throw new Error(`unknown method: ${se}`)}}static load(P){if(typeof P.name!="string")throw new TypeError("model must have a name property");if(P.name!=="PCA")throw new RangeError(`invalid model: ${P.name}`);return new Xh(void 0,void 0,P)}predict(P,r={}){const{nComponents:y=this.U.columns}=r;let z;if(Array.isArray(P)?z=new co(P):z=new co(P),this.center&&(z.subRowVector(this.means),this.scale)){for(let se of this.excludedFeatures)z.removeColumn(se);z.divRowVector(this.stdevs)}let V=z.mmul(this.U);return V.subMatrix(0,V.rows-1,0,y-1)}invert(P){P=co.checkMatrix(P);let r=P.mmul(this.U.transpose());return this.center&&(this.scale&&r.mulRowVector(this.stdevs),r.addRowVector(this.means)),r}getExplainedVariance(){let P=0;if(this.S)for(const r of this.S)P+=r;return this.S?this.S.map(r=>r/P):[]}getCumulativeVariance(){let P=this.getExplainedVariance();for(let r=1;r<P.length;r++)P[r]+=P[r-1];return P}getEigenvectors(){return this.U}getEigenvalues(){return this.S}getStandardDeviations(){return this.S.map(P=>Math.sqrt(P))}getLoadings(){return this.U.transpose()}toJSON(){return{name:"PCA",center:this.center,scale:this.scale,means:this.means,stdevs:this.stdevs,U:this.U,S:this.S,excludedFeatures:this.excludedFeatures}}_adjust(P,r){if(this.center){const y=P.mean("column"),z=this.scale?P.standardDeviation("column",{mean:y}):null;if(this.means=y,P.subRowVector(y),this.scale){for(let V=0;V<z.length;V++)if(z[V]===0)if(r)P.removeColumn(V),z.splice(V,1),this.excludedFeatures.push(V),V--;else throw new RangeError(`Cannot scale the dataset (standard deviation is zero at index ${V}`);this.stdevs=z,P.divRowVector(z)}}}_computeFromCovarianceMatrix(P){const r=new Af(P,{assumeSymmetric:!0});this.U=r.eigenvectorMatrix,this.U.flipRows(),this.S=r.realEigenvalues,this.S.reverse()}_computeWithNIPALS(P,r){this.U=new co(r,P.columns),this.S=[];let y=P;for(let z=0;z<r;z++){let V=new Ff(y);this.U.setRow(z,V.w.transpose()),this.S.push(Math.pow(V.s.get(0,0),2)),y=V.xResidual}this.U=this.U.transpose()}}console.log("[Worker] Initializing worker..."),Mf.allowLocalModels=!1;const Ud=new Map,Lp=new Map;self.addEventListener("message",async Le=>{var y,z;console.log(`[Worker: ${Le.data.model_id}] Received message:`,Le.data);const P=Le.data.model_id,r=Le.data.text;if(!r){console.log(`[Worker: ${P}] No text provided, only loading tokenizer.`);try{let V=Ud.get(P);V||(console.log(`[Worker: ${P}] Loading tokenizer`),V=Ap.from_pretrained(`Xenova/${P}`),Ud.set(P,V)),await V,console.log(`[Worker: ${P}] Successfully pre-loaded tokenizer`)}catch(V){console.error(`[Worker: ${P}] Error pre-loading tokenizer: ${V}`),self.postMessage({error:V.message,model_id:P})}return}try{let V=Ud.get(P);V||(console.log(`[Worker: ${P}] Loading tokenizer`),V=Ap.from_pretrained(`Xenova/${P}`),Ud.set(P,V));const se=await V;console.log(`[Worker: ${P}] Tokenizer loaded`),console.log(`[Worker: ${P}] Tokenizing text:`,r);const K=se.encode(r);let v=K.map(q=>se.decode([q])),k=[];switch(console.log(`[Worker: ${P}] Tokenizer type:`,se.constructor.name),console.log(`[Worker: ${P}] Decoded tokens before processing:`,v),se.constructor.name){case"BertTokenizer":case"DebertaV2Tokenizer":k=v.map((q,ne)=>ne===0||q.startsWith("##")?0:8),v=v.map(q=>q.replace("##",""));break;case"T5Tokenizer":console.log(`[Worker: ${P}] T5 processing - first token:`,v[0]),v.length>0&&v[0]!==" "&&(v[0]=v[0].replace(/^ /,""));break;case"LlamaTokenizer":case"PhiTokenizer":v=v.map(q=>q.replace(/^▁/,"")),k=v.map((q,ne)=>ne===0||!se.decode([K[ne]]).startsWith("▁")?0:8);break}console.log(`[Worker: ${P}] Decoded tokens after processing:`,v);let x={model_id:P,decoded:v,margins:k,ids:K};self.postMessage({model_id:P,decoded:v,margins:k,ids:K,partial:!0});let E;if(se.constructor.name==="T5Tokenizer"){console.log(`[Worker: ${P}] T5 model - skipping embedding computation`),x.complete=!0,x.embeddings=null,x.tokenColors=v.map(()=>[128,128,128]),console.log(`[Worker: ${P}] Sending tokenization-only results back.`),self.postMessage(x);return}let C=Lp.get(P);if(!C){console.log(`[Worker: ${P}] Loading feature extraction pipeline`);const q={pooling:!1,normalize:!1,tokenize:!1};(P==="gpt2"||P==="llama-68m")&&(q.model_file_name="decoder_model_merged"),C=bf("feature-extraction",`Xenova/${P}`,q),Lp.set(P,C)}E=await(await C)(r);const re=Array.from(E.data).slice(-K.length*E.dims[2]),ce=[],me=E.dims[2];for(let q=0;q<K.length;q++)ce.push(re.slice(q*me,(q+1)*me));let Y;if(console.log(`[Worker: ${P}] Embeddings before PCA:`,{length:ce.length,sampleEmbedding:ce[0],dimensions:(y=ce[0])==null?void 0:y.length}),!ce.length||!((z=ce[0])!=null&&z.length))console.error(`[Worker: ${P}] Invalid embeddings detected`),Y=K.map(()=>[128,128,128]);else if(ce.length<3)Y=ce.map(()=>[128,128,128]);else try{const ne=new Xh(ce).predict(ce,{nComponents:3});Y=ne.to2DArray().map(R=>R.map(L=>{const T=Math.min(...ne.to2DArray().flat()),S=Math.max(...ne.to2DArray().flat()),U=Math.round((L-T)/(S-T)*255);return Math.max(0,Math.min(255,U))}))}catch(q){console.error(`[Worker: ${P}] Error computing PCA:`,q),Y=K.map(()=>[128,128,128])}console.log(`[Worker: ${P}] Embeddings and colors computed:`,ce,Y),x.embeddings=ce,x.tokenColors=Y,x.complete=!0,console.log(`[Worker: ${P}] Sending results back.`),self.postMessage(x)}catch(V){console.error(`[Worker: ${P}] Error processing message:`,V),self.postMessage({error:V.message,model_id:P})}})})();
